Search.setIndex({"docnames": ["README", "colors", "contributing", "curvature", "docker", "examples", "index", "install", "nearest", "nricp", "quick_start", "ray", "section", "shortest", "texture", "trimesh", "trimesh.base", "trimesh.boolean", "trimesh.bounds", "trimesh.caching", "trimesh.collision", "trimesh.comparison", "trimesh.constants", "trimesh.convex", "trimesh.creation", "trimesh.curvature", "trimesh.decomposition", "trimesh.exceptions", "trimesh.exchange", "trimesh.exchange.binvox", "trimesh.exchange.cascade", "trimesh.exchange.dae", "trimesh.exchange.export", "trimesh.exchange.gltf", "trimesh.exchange.load", "trimesh.exchange.misc", "trimesh.exchange.obj", "trimesh.exchange.off", "trimesh.exchange.ply", "trimesh.exchange.stl", "trimesh.exchange.threedxml", "trimesh.exchange.threemf", "trimesh.exchange.urdf", "trimesh.exchange.xaml", "trimesh.exchange.xyz", "trimesh.geometry", "trimesh.graph", "trimesh.grouping", "trimesh.inertia", "trimesh.interfaces", "trimesh.interfaces.blender", "trimesh.interfaces.generic", "trimesh.interfaces.gmsh", "trimesh.intersections", "trimesh.interval", "trimesh.nsphere", "trimesh.parent", "trimesh.path", "trimesh.path.arc", "trimesh.path.creation", "trimesh.path.curve", "trimesh.path.entities", "trimesh.path.exchange", "trimesh.path.exchange.dxf", "trimesh.path.exchange.export", "trimesh.path.exchange.load", "trimesh.path.exchange.misc", "trimesh.path.exchange.svg_io", "trimesh.path.intersections", "trimesh.path.packing", "trimesh.path.path", "trimesh.path.polygons", "trimesh.path.raster", "trimesh.path.repair", "trimesh.path.segments", "trimesh.path.simplify", "trimesh.path.traversal", "trimesh.path.util", "trimesh.permutate", "trimesh.points", "trimesh.poses", "trimesh.primitives", "trimesh.proximity", "trimesh.ray", "trimesh.ray.ray_pyembree", "trimesh.ray.ray_triangle", "trimesh.ray.ray_util", "trimesh.registration", "trimesh.remesh", "trimesh.rendering", "trimesh.repair", "trimesh.resolvers", "trimesh.resources", "trimesh.sample", "trimesh.scene", "trimesh.scene.cameras", "trimesh.scene.lighting", "trimesh.scene.scene", "trimesh.scene.transforms", "trimesh.schemas", "trimesh.smoothing", "trimesh.transformations", "trimesh.triangles", "trimesh.typed", "trimesh.units", "trimesh.util", "trimesh.version", "trimesh.viewer", "trimesh.viewer.notebook", "trimesh.viewer.trackball", "trimesh.viewer.widget", "trimesh.viewer.windowed", "trimesh.visual", "trimesh.visual.base", "trimesh.visual.color", "trimesh.visual.gloss", "trimesh.visual.material", "trimesh.visual.objects", "trimesh.visual.texture", "trimesh.voxel", "trimesh.voxel.base", "trimesh.voxel.creation", "trimesh.voxel.encoding", "trimesh.voxel.morphology", "trimesh.voxel.ops", "trimesh.voxel.runlength", "trimesh.voxel.transforms"], "filenames": ["README.rst", "colors.rst", "contributing.md", "curvature.rst", "docker.md", "examples.rst", "index.rst", "install.md", "nearest.rst", "nricp.md", "quick_start.rst", "ray.rst", "section.rst", "shortest.rst", "texture.rst", "trimesh.rst", "trimesh.base.rst", "trimesh.boolean.rst", "trimesh.bounds.rst", "trimesh.caching.rst", "trimesh.collision.rst", "trimesh.comparison.rst", "trimesh.constants.rst", "trimesh.convex.rst", "trimesh.creation.rst", "trimesh.curvature.rst", "trimesh.decomposition.rst", "trimesh.exceptions.rst", "trimesh.exchange.rst", "trimesh.exchange.binvox.rst", "trimesh.exchange.cascade.rst", "trimesh.exchange.dae.rst", "trimesh.exchange.export.rst", "trimesh.exchange.gltf.rst", "trimesh.exchange.load.rst", "trimesh.exchange.misc.rst", "trimesh.exchange.obj.rst", "trimesh.exchange.off.rst", "trimesh.exchange.ply.rst", "trimesh.exchange.stl.rst", "trimesh.exchange.threedxml.rst", "trimesh.exchange.threemf.rst", "trimesh.exchange.urdf.rst", "trimesh.exchange.xaml.rst", "trimesh.exchange.xyz.rst", "trimesh.geometry.rst", "trimesh.graph.rst", "trimesh.grouping.rst", "trimesh.inertia.rst", "trimesh.interfaces.rst", "trimesh.interfaces.blender.rst", "trimesh.interfaces.generic.rst", "trimesh.interfaces.gmsh.rst", "trimesh.intersections.rst", "trimesh.interval.rst", "trimesh.nsphere.rst", "trimesh.parent.rst", "trimesh.path.rst", "trimesh.path.arc.rst", "trimesh.path.creation.rst", "trimesh.path.curve.rst", "trimesh.path.entities.rst", "trimesh.path.exchange.rst", "trimesh.path.exchange.dxf.rst", "trimesh.path.exchange.export.rst", "trimesh.path.exchange.load.rst", "trimesh.path.exchange.misc.rst", "trimesh.path.exchange.svg_io.rst", "trimesh.path.intersections.rst", "trimesh.path.packing.rst", "trimesh.path.path.rst", "trimesh.path.polygons.rst", "trimesh.path.raster.rst", "trimesh.path.repair.rst", "trimesh.path.segments.rst", "trimesh.path.simplify.rst", "trimesh.path.traversal.rst", "trimesh.path.util.rst", "trimesh.permutate.rst", "trimesh.points.rst", "trimesh.poses.rst", "trimesh.primitives.rst", "trimesh.proximity.rst", "trimesh.ray.rst", "trimesh.ray.ray_pyembree.rst", "trimesh.ray.ray_triangle.rst", "trimesh.ray.ray_util.rst", "trimesh.registration.rst", "trimesh.remesh.rst", "trimesh.rendering.rst", "trimesh.repair.rst", "trimesh.resolvers.rst", "trimesh.resources.rst", "trimesh.sample.rst", "trimesh.scene.rst", "trimesh.scene.cameras.rst", "trimesh.scene.lighting.rst", "trimesh.scene.scene.rst", "trimesh.scene.transforms.rst", "trimesh.schemas.rst", "trimesh.smoothing.rst", "trimesh.transformations.rst", "trimesh.triangles.rst", "trimesh.typed.rst", "trimesh.units.rst", "trimesh.util.rst", "trimesh.version.rst", "trimesh.viewer.rst", "trimesh.viewer.notebook.rst", "trimesh.viewer.trackball.rst", "trimesh.viewer.widget.rst", "trimesh.viewer.windowed.rst", "trimesh.visual.rst", "trimesh.visual.base.rst", "trimesh.visual.color.rst", "trimesh.visual.gloss.rst", "trimesh.visual.material.rst", "trimesh.visual.objects.rst", "trimesh.visual.texture.rst", "trimesh.voxel.rst", "trimesh.voxel.base.rst", "trimesh.voxel.creation.rst", "trimesh.voxel.encoding.rst", "trimesh.voxel.morphology.rst", "trimesh.voxel.ops.rst", "trimesh.voxel.runlength.rst", "trimesh.voxel.transforms.rst"], "titles": ["Basic Installation", "Colors", "Contributing To Trimesh", "Curvature", "Writing Docker Images", "Examples", "Basic Installation", "Installation", "Nearest", "Non-Rigid Registration", "Quick Start", "Ray", "Section", "Shortest", "Texture", "trimesh", "trimesh.base", "trimesh.boolean", "trimesh.bounds", "trimesh.caching", "trimesh.collision", "trimesh.comparison", "trimesh.constants", "trimesh.convex", "trimesh.creation", "trimesh.curvature", "trimesh.decomposition", "trimesh.exceptions", "trimesh.exchange", "trimesh.exchange.binvox", "trimesh.exchange.cascade", "trimesh.exchange.dae", "trimesh.exchange.export", "trimesh.exchange.gltf", "trimesh.exchange.load", "trimesh.exchange.misc", "trimesh.exchange.obj", "trimesh.exchange.off", "trimesh.exchange.ply", "trimesh.exchange.stl", "trimesh.exchange.threedxml", "trimesh.exchange.threemf", "trimesh.exchange.urdf", "trimesh.exchange.xaml", "trimesh.exchange.xyz", "trimesh.geometry", "trimesh.graph", "trimesh.grouping", "trimesh.inertia", "trimesh.interfaces", "trimesh.interfaces.blender", "trimesh.interfaces.generic", "trimesh.interfaces.gmsh", "trimesh.intersections", "trimesh.interval", "trimesh.nsphere", "trimesh.parent", "trimesh.path", "trimesh.path.arc", "trimesh.path.creation", "trimesh.path.curve", "trimesh.path.entities", "trimesh.path.exchange", "trimesh.path.exchange.dxf", "trimesh.path.exchange.export", "trimesh.path.exchange.load", "trimesh.path.exchange.misc", "trimesh.path.exchange.svg_io", "trimesh.path.intersections", "trimesh.path.packing", "trimesh.path.path", "trimesh.path.polygons", "trimesh.path.raster", "trimesh.path.repair", "trimesh.path.segments", "trimesh.path.simplify", "trimesh.path.traversal", "trimesh.path.util", "trimesh.permutate", "trimesh.points", "trimesh.poses", "trimesh.primitives", "trimesh.proximity", "trimesh.ray", "trimesh.ray.ray_pyembree", "trimesh.ray.ray_triangle", "trimesh.ray.ray_util", "trimesh.registration", "trimesh.remesh", "trimesh.rendering", "trimesh.repair", "trimesh.resolvers", "trimesh.resources", "trimesh.sample", "trimesh.scene", "trimesh.scene.cameras", "trimesh.scene.lighting", "trimesh.scene.scene", "trimesh.scene.transforms", "trimesh.schemas", "trimesh.smoothing", "trimesh.transformations", "trimesh.triangles", "trimesh.typed", "trimesh.units", "trimesh.util", "trimesh.version", "trimesh.viewer", "trimesh.viewer.notebook", "trimesh.viewer.trackball", "trimesh.viewer.widget", "trimesh.viewer.windowed", "trimesh.visual", "trimesh.visual.base", "trimesh.visual.color", "trimesh.visual.gloss", "trimesh.visual.material", "trimesh.visual.objects", "trimesh.visual.texture", "trimesh.voxel", "trimesh.voxel.base", "trimesh.voxel.creation", "trimesh.voxel.encoding", "trimesh.voxel.morphology", "trimesh.voxel.ops", "trimesh.voxel.runlength", "trimesh.voxel.transforms"], "terms": {"pure": [0, 6, 7, 15, 29, 45, 66, 69], "python": [0, 2, 4, 6, 7, 15, 16, 24, 41, 46, 95, 101, 103, 105, 125], "3": [0, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 23, 24, 25, 29, 35, 39, 41, 45, 46, 47, 48, 52, 53, 54, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 93, 94, 95, 97, 98, 101, 102, 103, 105, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126], "7": [0, 2, 6, 15, 16, 19, 21, 41, 45, 47, 52, 89, 101, 103, 105, 125], "load": [0, 1, 6, 7, 8, 10, 12, 14, 15, 16, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 57, 62, 63, 66, 67, 79, 81, 89, 91, 92, 94, 98, 107, 108], "triangular": [0, 6, 15, 16, 24, 45, 81, 88, 90], "an": [0, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 61, 63, 66, 67, 69, 70, 71, 73, 74, 79, 81, 85, 88, 89, 91, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 122, 123, 124, 125], "emphasi": [0, 6, 15], "watertight": [0, 6, 10, 15, 16, 17, 23, 24, 46, 71, 79, 80, 88, 90, 105, 121], "surfac": [0, 6, 8, 9, 11, 15, 16, 23, 25, 52, 66, 78, 80, 81, 82, 84, 85, 87, 88, 93, 100, 102, 105, 119, 120, 123, 124], "The": [0, 2, 4, 6, 7, 9, 15, 16, 18, 19, 20, 22, 24, 25, 29, 31, 34, 42, 45, 46, 47, 50, 52, 54, 56, 59, 61, 63, 69, 70, 71, 74, 79, 80, 81, 82, 87, 88, 91, 94, 96, 97, 98, 101, 102, 103, 105, 109, 113, 114, 116, 119, 120, 124, 126], "goal": [0, 6, 15, 112], "provid": [0, 4, 6, 7, 15, 16, 19, 20, 21, 29, 33, 48, 50, 53, 71, 82, 91, 93, 105, 119, 120, 122, 125], "full": [0, 6, 7, 15, 16, 19, 46, 57, 70, 81, 91, 98, 100], "well": [0, 6, 7, 9, 15, 16, 19, 20, 24, 61, 73, 74, 87, 90, 94, 97, 101, 105], "test": [0, 2, 4, 6, 7, 11, 13, 19, 23, 53, 57, 69, 70, 71, 84, 85], "object": [0, 6, 8, 10, 12, 15, 16, 18, 19, 20, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 53, 56, 57, 58, 63, 64, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 89, 91, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126], "allow": [0, 6, 9, 15, 16, 19, 36, 47, 52, 69, 71, 79, 87, 90, 94, 97, 98, 105, 114, 116], "easi": [0, 2, 4, 6, 7, 15, 52], "manipul": [0, 6, 7, 15, 109], "analysi": [0, 6, 7, 15, 87], "style": [0, 1, 2, 6, 8, 10, 11, 12, 13, 14, 15], "polygon": [0, 6, 7, 12, 15, 16, 23, 24, 29, 45, 53, 57, 65, 66, 69, 70, 81, 94, 97, 105], "shape": [0, 2, 6, 7, 9, 10, 12, 14, 15, 16, 24, 25, 28, 29, 45, 57, 65, 66, 69, 70, 71, 79, 80, 81, 87, 96, 101, 105, 118, 119, 120, 122, 125], "api": [0, 2, 7, 19, 84, 101], "mostli": [0, 6, 69], "stabl": [0, 6, 15, 16, 19, 80, 101], "reli": [0, 6, 15, 16, 46], "guarante": [0, 6, 15, 16, 76, 82], "specif": [0, 6, 15, 16, 33, 48, 61, 76, 87, 91, 122], "version": [0, 4, 6, 10, 15, 16, 19, 30, 46, 52, 57, 58, 60, 61, 70, 71, 72, 76, 78, 81, 91, 101, 103, 105, 112, 114, 119, 120], "you": [0, 2, 4, 6, 7, 15, 16, 19, 24, 28, 48, 53, 54, 61, 71, 79, 81, 85, 91], "plan": [0, 2, 6], "deploi": [0, 6], "someth": [0, 2, 6, 7, 60], "pull": [0, 2, 6, 93], "request": [0, 2, 6, 7, 10, 15, 16, 27, 34, 69, 81, 93, 94, 97], "ar": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 36, 38, 45, 46, 47, 53, 54, 55, 56, 57, 59, 61, 63, 68, 69, 70, 71, 74, 75, 76, 79, 80, 81, 85, 87, 88, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 116, 117, 118, 119, 120, 122, 124, 125], "appreci": [0, 6], "respond": [0, 6], "promptli": [0, 6], "If": [0, 2, 4, 6, 7, 15, 16, 18, 19, 20, 22, 24, 25, 29, 33, 34, 36, 38, 44, 45, 46, 47, 48, 53, 54, 57, 58, 59, 60, 61, 63, 67, 68, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 112, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126], "d": [0, 2, 6, 7, 9, 19, 23, 45, 47, 55, 58, 60, 61, 68, 70, 75, 76, 79, 88, 101, 103, 104, 105, 114, 118, 124], "like": [0, 2, 4, 6, 7, 12, 15, 16, 19, 21, 23, 24, 27, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 44, 63, 64, 76, 79, 81, 91, 94, 96, 97, 101, 104, 105, 112, 117, 118, 119, 120], "contribut": [0, 45], "here": [0, 2, 6, 7, 9, 15, 16, 18, 22, 46, 53, 69], "up": [0, 2, 6, 15, 16, 19, 24, 46, 47, 52, 57, 61, 70, 74, 76, 88, 94, 97, 105, 109], "date": [0, 6], "list": [0, 2, 4, 6, 8, 10, 15, 16, 17, 18, 19, 20, 24, 25, 26, 29, 31, 34, 36, 45, 46, 47, 50, 52, 53, 55, 57, 61, 65, 66, 69, 70, 71, 75, 76, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 112, 114, 115, 116, 117, 119, 120, 124, 125], "potenti": [0, 6, 15, 16, 17, 46, 105], "enhanc": [0, 6], "although": [0, 6, 52], "thing": [0, 2, 4, 6, 7, 15, 16, 19, 46, 81], "also": [0, 4, 6, 7, 9, 10, 12, 15, 16, 19, 29, 45, 47, 48, 53, 57, 61, 70, 71, 76, 87, 94, 96, 97, 101, 105], "welcom": [0, 2, 6], "": [0, 2, 4, 6, 7, 9, 10, 15, 16, 19, 20, 29, 33, 38, 45, 52, 57, 68, 69, 70, 71, 72, 81, 87, 94, 95, 96, 101, 102, 103, 109, 125], "develop": [0, 6, 101], "guid": [0, 4, 6, 101, 105], "keep": [0, 6, 10, 15, 16, 24, 94, 95, 102, 105], "core": [0, 6, 15, 16, 29, 69, 81, 87], "thu": [0, 6, 9, 100], "onli": [0, 2, 6, 7, 9, 13, 15, 16, 19, 23, 25, 29, 32, 34, 36, 38, 46, 47, 48, 52, 53, 57, 61, 63, 67, 70, 71, 75, 76, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 101, 103, 105, 114, 119, 120, 122, 125], "hard": [0, 6, 7, 9], "depend": [0, 4, 6, 9, 15, 16, 27, 69, 94, 96, 97, 102], "numpi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 29, 35, 45, 47, 58, 69, 81, 89, 101, 102, 103, 105, 112, 114, 119, 120, 122, 124, 125], "other": [0, 2, 4, 6, 7, 15, 16, 17, 19, 24, 33, 36, 46, 57, 58, 69, 70, 79, 87, 93, 94, 97, 99, 101, 103, 105, 112, 113, 114, 116, 118], "packag": [0, 6, 12, 30, 42, 52, 84, 101, 105, 106], "add": [0, 6, 7, 15, 20, 47, 63, 78, 94, 97, 98, 105, 112, 116, 121, 123], "function": [0, 2, 6, 7, 9, 15, 16, 19, 24, 27, 29, 33, 46, 47, 48, 53, 54, 55, 57, 61, 69, 70, 78, 79, 81, 87, 88, 89, 101, 102, 105, 112, 114, 119, 120, 124, 125], "requir": [0, 4, 6, 7, 12, 15, 16, 29, 33, 65, 71, 74, 79, 102, 104, 105, 125], "For": [0, 6, 9, 15, 16, 25, 27, 31, 34, 41, 46, 47, 52, 54, 58, 60, 71, 73, 74, 80, 82, 93, 102, 105, 125], "easiest": [0, 6], "just": [0, 2, 4, 6, 7, 9, 15, 16, 31, 53, 61, 79, 80, 90, 101, 105, 114, 125], "pip": [0, 2, 6, 7, 15, 16, 19, 24, 52], "gener": [0, 4, 6, 7, 8, 15, 16, 19, 46, 47, 49, 52, 57, 61, 66, 70, 71, 76, 81, 87, 94, 95, 96, 97, 101, 103, 105, 114, 116, 123, 124], "cleanli": [0, 6, 7, 10, 15, 16, 98], "window": [0, 6, 7, 10, 15, 16, 29, 57, 70, 79, 94, 97, 101, 107, 109], "linux": [0, 2, 6, 7, 103], "osx": [0, 6], "minim": [0, 4, 6, 7, 9, 18, 55, 69, 79, 87, 101], "mani": [0, 2, 6, 7, 15, 16, 24, 47, 57, 59, 70, 71, 74, 87, 101, 105, 118], "support": [0, 6, 12, 15, 16, 29, 35, 65, 69, 79, 94, 95, 96, 103, 104, 105, 116, 119, 120], "stl": [0, 6, 7, 10, 12, 15, 16, 28, 32, 34, 51, 94, 97], "ply": [0, 6, 7, 8, 15, 16, 28, 29, 34], "gltf": [0, 6, 7, 15, 28, 98, 107, 108, 116], "glb": [0, 6, 7, 15, 16, 30, 33, 107, 108], "arrai": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 29, 35, 45, 46, 47, 54, 67, 69, 70, 79, 81, 82, 85, 88, 89, 95, 98, 100, 101, 105, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125], "more": [0, 4, 6, 7, 9, 15, 16, 24, 29, 47, 48, 52, 56, 69, 71, 75, 82, 87, 94, 97, 98, 101, 102, 105, 112, 114, 117, 122], "avail": [0, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 34, 69, 81, 91, 105, 121, 123], "when": [0, 2, 4, 6, 7, 9, 10, 15, 16, 19, 22, 27, 29, 53, 69, 70, 74, 81, 87, 93, 94, 97, 98, 101, 102, 116, 121, 125], "soft": [0, 6, 7, 27], "includ": [0, 4, 6, 7, 15, 16, 24, 25, 29, 33, 36, 37, 38, 47, 56, 57, 59, 63, 69, 70, 74, 84, 94, 97, 98, 99, 101, 102, 105, 112, 122, 125, 126], "convex": [0, 6, 7, 10, 15, 16, 18, 20, 25, 26, 42, 55, 71, 79, 90, 94, 97], "hull": [0, 6, 7, 10, 15, 16, 18, 23, 55, 71, 79, 94, 97], "scipi": [0, 6, 7, 15, 16, 18, 25, 45, 46, 55, 60, 69, 70, 79, 87, 100, 122, 123], "graph": [0, 6, 7, 13, 15, 16, 57, 61, 70, 76, 79, 94, 97, 98, 101], "oper": [0, 2, 6, 7, 15, 16, 17, 19, 24, 29, 46, 47, 50, 53, 70, 79, 81, 93, 98, 100, 103, 122, 123, 124, 125], "networkx": [0, 6, 7, 13, 15, 16, 46, 57, 70, 71, 76, 98], "faster": [0, 2, 6, 7, 19, 24, 29, 47, 88, 101, 105], "rai": [0, 2, 5, 6, 7, 15, 82, 94, 95, 97], "queri": [0, 6, 7, 8, 9, 11, 13, 15, 16, 19, 20, 25, 71, 79, 82, 84, 85, 105, 119, 120], "embreex": [0, 6, 84], "vector": [0, 2, 6, 7, 11, 15, 16, 21, 24, 34, 39, 45, 47, 48, 53, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 74, 79, 81, 84, 85, 89, 94, 95, 97, 101, 102, 105], "path": [0, 6, 7, 13, 15, 16, 19, 22, 24, 29, 34, 38, 42, 46, 81, 89, 91, 92, 98, 105], "handl": [0, 6, 7, 24, 45, 57, 105, 112, 125], "rtree": [0, 6, 7, 15, 16, 69, 81, 85, 102, 105], "xml": [0, 6, 7, 67], "3dxml": [0, 6, 40], "xaml": [0, 1, 6, 15, 28], "3mf": [0, 6, 41], "lxml": [0, 6, 7, 40], "preview": [0, 6, 10, 119, 120], "pyglet": [0, 6, 7, 10, 15, 16, 89, 94, 97, 107], "cach": [0, 6, 7, 15, 16, 36, 46, 53, 79, 81, 122, 126], "check": [0, 2, 6, 7, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 47, 48, 52, 53, 55, 57, 61, 69, 70, 71, 84, 85, 90, 101, 102, 103, 105, 107, 108, 112, 118, 125], "xxhash": [0, 6, 7, 19], "etc": [0, 2, 6, 15, 16, 19, 34, 55, 57, 61, 70, 76, 89, 91, 92, 94, 97, 105], "To": [0, 6, 9, 19, 105], "further": [0, 6, 29], "inform": [0, 6, 15, 16, 19, 20, 22, 52, 58, 61, 67, 81, 96, 98, 112, 114, 116, 118], "advanc": [0, 6, 15, 16, 17, 47], "document": [0, 6, 7, 15, 16, 19, 22, 29, 101, 102, 122], "exampl": [0, 1, 2, 3, 4, 7, 8, 10, 11, 15, 16, 19, 45, 46, 47, 54, 61, 91, 95, 101, 102, 103, 105, 122, 125], "from": [0, 2, 3, 4, 6, 8, 9, 10, 12, 15, 16, 18, 19, 20, 22, 23, 24, 29, 33, 34, 36, 38, 39, 40, 43, 45, 46, 47, 48, 52, 53, 54, 55, 56, 61, 63, 67, 68, 69, 71, 74, 75, 79, 80, 81, 82, 87, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 112, 114, 117, 118, 122, 126], "file": [0, 4, 6, 7, 10, 12, 15, 16, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 57, 63, 64, 65, 67, 70, 79, 91, 92, 94, 97, 99, 101, 105, 116, 119, 120], "color": [0, 5, 6, 7, 8, 10, 12, 15, 16, 24, 36, 38, 42, 44, 57, 61, 70, 79, 89, 90, 93, 94, 96, 105, 112, 115, 116, 117, 118, 119, 120, 124], "its": [0, 6, 8, 9, 10, 15, 16, 19, 23, 57, 70, 71, 79, 81, 94, 96, 97, 101, 119, 120, 124, 125], "face": [0, 1, 2, 6, 8, 9, 10, 11, 13, 15, 16, 20, 23, 24, 25, 35, 36, 38, 39, 45, 46, 53, 57, 66, 70, 71, 74, 78, 81, 82, 84, 85, 87, 88, 89, 90, 93, 100, 102, 105, 112, 114, 117, 118], "nice": [0, 2, 6, 7, 15, 16, 18, 46, 88, 107, 108, 124], "ipython": [0, 2, 5, 6, 107, 108], "notebook": [0, 5, 6, 10, 15, 94, 97, 107], "out": [0, 2, 6, 7, 8, 11, 15, 16, 19, 23, 45, 47, 85, 90, 94, 97, 101, 105], "cross": [0, 6, 12, 15, 16, 48, 68, 101, 102], "section": [0, 5, 6, 9, 15, 16, 22, 24, 48, 53, 59, 61, 81, 98], "import": [0, 1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 27, 28, 52, 87, 105], "np": [0, 2, 3, 6, 8, 10, 11, 12, 13, 15, 16, 19, 46, 47, 76, 79, 81, 95, 101, 103, 105, 114, 122, 124, 125], "attach": [0, 6, 98, 105], "logger": [0, 6, 105], "so": [0, 2, 4, 6, 9, 11, 15, 16, 18, 19, 24, 27, 38, 48, 53, 56, 57, 61, 70, 71, 76, 79, 94, 97, 105, 118, 121], "messag": [0, 2, 6, 22, 27, 57, 70, 75], "print": [0, 2, 6, 7, 12, 40, 57, 70, 75, 101], "consol": [0, 6], "util": [0, 2, 6, 15, 35, 53, 57, 91, 125], "attach_to_log": [0, 2, 6, 15, 105], "creat": [0, 2, 6, 8, 11, 13, 15, 16, 19, 20, 23, 24, 27, 29, 33, 53, 57, 59, 69, 70, 75, 81, 85, 90, 94, 95, 97, 98, 102, 105, 109, 112, 114, 116, 117, 118, 119, 120, 122, 123], "exist": [0, 6, 15, 16, 46, 53, 81, 88, 90, 94, 97, 105, 125], "vertex": [0, 2, 6, 9, 13, 15, 16, 22, 23, 24, 25, 33, 36, 38, 45, 46, 47, 56, 57, 61, 63, 66, 70, 71, 74, 76, 78, 79, 81, 82, 87, 88, 89, 100, 102, 105, 112, 114, 117, 118], "data": [0, 2, 6, 9, 10, 15, 16, 19, 20, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 52, 64, 65, 67, 70, 81, 87, 88, 91, 92, 98, 101, 105, 112, 114, 116, 118, 119, 120, 122, 124, 125], "vertic": [0, 2, 3, 6, 9, 10, 12, 13, 15, 16, 18, 22, 23, 24, 25, 35, 36, 38, 39, 45, 46, 47, 53, 55, 57, 61, 63, 66, 70, 71, 74, 75, 76, 79, 81, 82, 87, 88, 90, 94, 97, 100, 102, 105, 112, 114, 118], "0": [0, 2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 24, 25, 26, 29, 33, 41, 42, 45, 46, 47, 50, 53, 56, 57, 58, 60, 61, 63, 67, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 87, 88, 94, 95, 96, 100, 101, 103, 105, 109, 112, 114, 115, 116, 119, 120, 122, 123, 124, 125], "1": [0, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 26, 29, 42, 45, 46, 47, 52, 54, 56, 57, 58, 60, 61, 63, 67, 68, 69, 70, 71, 72, 74, 76, 79, 80, 81, 84, 85, 87, 88, 94, 95, 100, 101, 102, 103, 104, 105, 109, 112, 114, 115, 116, 118, 121, 122, 123, 124, 125], "2": [0, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 29, 33, 45, 46, 47, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 85, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 109, 112, 114, 115, 116, 118, 121, 122, 125], "default": [0, 6, 10, 15, 16, 19, 24, 29, 47, 53, 58, 59, 78, 79, 81, 93, 94, 97, 101, 112, 114, 115], "do": [0, 2, 6, 7, 9, 12, 15, 16, 17, 18, 19, 34, 36, 82, 84, 85, 101, 103, 105, 118, 124], "light": [0, 6, 15, 89, 94, 97], "process": [0, 1, 6, 9, 10, 15, 16, 17, 22, 33, 57, 70, 75, 81, 88, 105, 125], "remov": [0, 2, 6, 9, 15, 16, 19, 29, 47, 70, 81, 91, 93, 94, 97, 98, 105, 112, 114, 118, 119, 120, 125], "ani": [0, 6, 9, 10, 15, 16, 20, 24, 29, 36, 45, 46, 47, 54, 57, 58, 61, 69, 70, 71, 74, 75, 79, 81, 82, 85, 88, 91, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 112, 114, 115, 116, 118, 119, 120, 123, 125], "nan": [0, 6, 15, 16, 81, 103], "valu": [0, 2, 6, 9, 12, 15, 16, 19, 21, 22, 29, 35, 46, 47, 52, 53, 54, 55, 56, 57, 63, 67, 70, 71, 78, 80, 81, 87, 88, 91, 93, 96, 98, 99, 101, 103, 104, 105, 112, 114, 115, 116, 118, 119, 120, 121, 122, 125, 126], "merg": [0, 6, 15, 16, 22, 33, 38, 47, 54, 57, 70, 74, 75, 79, 81, 82, 125], "share": [0, 6, 9, 15, 16, 36, 46, 47], "posit": [0, 6, 9, 15, 16, 17, 19, 24, 25, 38, 47, 53, 54, 57, 61, 66, 69, 70, 71, 72, 79, 82, 85, 87, 94, 96, 97, 98, 102, 103, 105, 109, 112, 118], "want": [0, 2, 4, 6, 7, 12, 15, 16, 17, 18, 24, 27, 33, 48, 71, 91, 105], "pass": [0, 6, 10, 15, 16, 17, 19, 23, 24, 25, 26, 30, 31, 33, 34, 36, 38, 40, 44, 45, 46, 47, 48, 52, 53, 56, 57, 59, 63, 64, 65, 67, 68, 69, 70, 71, 79, 81, 85, 87, 88, 89, 91, 93, 94, 95, 97, 98, 100, 105, 112, 114, 118, 119, 120, 121, 123, 125, 126], "fals": [0, 1, 6, 10, 15, 16, 17, 19, 20, 22, 26, 29, 30, 32, 33, 34, 36, 38, 45, 46, 47, 48, 50, 51, 53, 57, 58, 61, 63, 67, 68, 69, 70, 71, 74, 75, 79, 82, 84, 85, 87, 88, 90, 92, 93, 94, 97, 100, 101, 102, 103, 105, 116, 118, 125], "some": [0, 2, 4, 6, 9, 11, 15, 16, 19, 29, 46, 75, 79, 81, 94, 97, 101, 105], "repres": [0, 6, 9, 15, 16, 23, 24, 32, 39, 41, 45, 46, 56, 57, 59, 61, 66, 70, 71, 75, 76, 79, 81, 87, 94, 97, 101, 105, 115, 119, 120, 124], "multipl": [0, 6, 10, 15, 16, 19, 23, 24, 33, 35, 46, 47, 50, 53, 54, 57, 59, 61, 67, 69, 70, 71, 76, 77, 79, 84, 85, 94, 97, 98, 101, 105, 112, 114, 116, 117], "instanc": [0, 6, 15, 29, 46, 94, 97, 98, 103, 105, 121, 125], "loader": [0, 6, 7, 15, 28, 34, 64, 65], "tri": [0, 6, 24, 35, 105], "return": [0, 2, 6, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "datatyp": [0, 6, 19, 112, 114], "make": [0, 2, 4, 6, 7, 11, 13, 15, 16, 19, 22, 24, 29, 34, 46, 47, 56, 57, 70, 71, 76, 78, 88, 90, 98, 101, 104, 105, 114], "most": [0, 6, 7, 15, 16, 19, 80, 101, 112, 114, 116], "sens": [0, 6], "scene": [0, 6, 8, 11, 13, 15, 16, 20, 24, 30, 32, 33, 34, 36, 40, 41, 48, 56, 57, 61, 69, 70, 79, 89, 107, 108, 109], "alwai": [0, 2, 4, 6, 7, 19, 56, 71, 98], "straight": [0, 6, 35, 63], "ask": [0, 6, 7], "forc": [0, 6, 15, 19, 34, 105], "result": [0, 2, 4, 6, 9, 13, 15, 16, 18, 19, 20, 24, 28, 29, 31, 32, 33, 34, 36, 38, 43, 46, 47, 48, 50, 53, 56, 57, 63, 69, 70, 71, 75, 76, 77, 79, 81, 87, 88, 89, 91, 93, 94, 97, 99, 101, 105, 112, 114, 118, 119, 120, 121], "through": [0, 2, 6, 15, 16, 17, 24, 46, 52, 56, 69, 71, 85, 87, 94, 97, 105, 119, 120], "concaten": [0, 2, 6, 9, 15, 57, 77, 94, 97, 101, 105, 112, 113, 114, 117, 118], "model": [0, 1, 6, 8, 9, 10, 12, 14, 15, 16, 29, 52, 57, 70, 72, 94, 96, 97, 101, 118], "cesiummilktruck": [0, 6], "name": [0, 6, 10, 15, 16, 19, 20, 22, 33, 34, 36, 46, 63, 65, 70, 79, 91, 92, 94, 95, 96, 97, 98, 102, 103, 105, 112, 116, 119, 120], "buffer": [0, 6, 10, 15, 16, 19, 24, 29, 33, 47, 54, 57, 58, 70, 71, 74, 81, 93, 94, 97, 115], "kwarg": [0, 6, 12, 15, 16, 17, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 53, 56, 57, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 75, 79, 81, 82, 84, 85, 87, 89, 91, 94, 95, 97, 98, 102, 103, 105, 107, 108, 112, 115, 116, 117, 118, 119, 120, 121, 123], "constructor": [0, 6, 15, 16, 24, 29, 31, 33, 34, 35, 37, 38, 39, 41, 43, 44, 59, 64, 65, 66, 67, 71, 81, 89, 94, 97, 102, 105, 115, 122], "would": [0, 6, 15, 16, 19, 24, 27, 61, 79, 81], "preserv": [0, 6, 87, 101], "origin": [0, 6, 9, 10, 11, 12, 15, 16, 18, 24, 26, 45, 47, 53, 56, 57, 59, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 84, 85, 87, 88, 94, 97, 101, 103, 105, 116, 118, 124, 126], "without": [0, 6, 7, 13, 15, 16, 19, 33, 46, 52, 70, 76, 94, 97, 98, 105, 112, 118, 119, 120, 125], "soup": [0, 6, 15, 16, 24, 71, 88, 94, 97, 102], "disconnect": [0, 6, 15, 16, 38, 46, 71], "triangl": [0, 6, 7, 9, 11, 15, 16, 23, 24, 25, 29, 45, 46, 57, 70, 71, 74, 81, 82, 84, 85, 87, 88, 90, 93, 94, 97, 101, 105], "howev": [0, 6, 7, 15, 16, 19, 33, 103], "regist": [0, 6, 15, 16, 87, 101, 105], "featuretyp": [0, 6, 10, 12, 15, 16], "current": [0, 4, 6, 7, 9, 10, 15, 16, 19, 23, 32, 46, 56, 57, 61, 69, 70, 79, 81, 82, 85, 87, 91, 94, 95, 97, 98, 101, 103, 104, 106, 109, 112, 114, 116, 118, 119, 120, 126], "is_watertight": [0, 6, 10, 15, 16, 46], "what": [0, 2, 6, 7, 9, 10, 12, 15, 16, 22, 32, 34, 44, 58, 75, 78, 81, 94, 95, 97, 104, 105, 112, 114, 118, 119, 120, 124], "euler": [0, 6, 10, 15, 16, 94, 97, 101], "number": [0, 6, 10, 15, 16, 18, 19, 22, 24, 29, 36, 37, 41, 45, 46, 47, 57, 59, 60, 61, 67, 69, 70, 71, 74, 75, 76, 79, 80, 81, 84, 85, 87, 88, 89, 93, 96, 100, 103, 104, 105, 109, 114, 116, 119, 120, 121], "euler_numb": [0, 6, 10, 15, 16], "anoth": [0, 6, 10, 15, 16, 19, 20, 45, 61, 71, 87, 98, 104, 105, 114, 126], "properti": [0, 6, 10, 15, 16, 19, 20, 21, 29, 56, 57, 61, 69, 70, 79, 81, 91, 94, 95, 96, 97, 98, 101, 102, 103, 109, 112, 113, 114, 116, 117, 118, 119, 120, 122, 126], "let": [0, 6, 7, 9, 10], "compar": [0, 2, 6, 10, 19, 21, 23, 82, 102, 105], "volum": [0, 6, 8, 10, 15, 16, 17, 18, 29, 52, 56, 69, 78, 81, 85, 93, 94, 97, 100, 101, 102, 119, 120, 121, 126], "our": [0, 6, 7, 10, 12, 18, 47, 84, 118], "convex_hul": [0, 6, 10, 15, 16, 23, 79, 94, 97], "sinc": [0, 6, 10, 19, 93, 122], "mean": [0, 3, 6, 9, 10, 15, 16, 19, 23, 25, 45, 55, 56, 63, 79, 80, 88, 94, 97, 125], "volumetr": [0, 6, 10, 15, 16, 29], "center": [0, 6, 10, 15, 16, 18, 24, 25, 29, 48, 55, 56, 57, 58, 59, 61, 70, 71, 75, 79, 80, 81, 82, 94, 95, 97, 101, 102, 109, 119, 120, 124], "mass": [0, 6, 10, 15, 16, 48, 80, 94, 97, 102], "we": [0, 2, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 22, 27, 33, 34, 46, 47, 60, 61, 74, 76, 78, 79, 84, 89, 103, 104, 105, 107, 108, 118, 125], "set": [0, 2, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 23, 24, 29, 34, 46, 47, 52, 53, 55, 61, 63, 67, 71, 75, 76, 79, 82, 85, 87, 89, 90, 94, 95, 97, 98, 101, 104, 105, 109, 112, 114, 116, 118, 119, 120, 124], "center_mass": [0, 6, 10, 15, 16, 48, 80, 94, 97, 102], "moment": [0, 6, 10, 15, 16, 48, 71, 94, 97, 102, 114], "inertia": [0, 6, 10, 15, 16, 71, 81, 87, 94, 97, 102], "moment_inertia": [0, 6, 10, 15, 16, 48, 81, 94, 97], "bodi": [0, 6, 9, 10, 15, 16, 24, 42, 57, 70, 90], "split": [0, 2, 6, 10, 15, 16, 46, 52, 57, 61, 69, 70, 74, 76, 125], "connect": [0, 6, 10, 15, 16, 46, 57, 58, 61, 66, 70, 71, 76, 79, 94, 97, 98, 105, 123], "compon": [0, 6, 10, 15, 16, 46, 48, 101, 105, 119, 120, 126], "adjac": [0, 6, 9, 10, 15, 16, 23, 46, 88, 90, 119, 120, 123], "singl": [0, 6, 10, 12, 15, 16, 19, 20, 22, 33, 34, 46, 59, 61, 67, 69, 70, 71, 77, 81, 84, 90, 94, 97, 105, 112, 114, 116, 118, 121, 122, 125], "get": [0, 2, 6, 7, 9, 10, 12, 15, 16, 19, 20, 23, 27, 29, 33, 34, 46, 48, 57, 61, 63, 65, 70, 71, 78, 79, 81, 91, 92, 94, 95, 97, 98, 100, 104, 106, 112, 114, 116, 118, 122, 123, 125, 126], "one": [0, 6, 9, 10, 12, 15, 16, 19, 20, 24, 29, 33, 45, 46, 47, 53, 54, 55, 63, 69, 74, 76, 79, 82, 90, 94, 95, 97, 98, 101, 104, 109, 114, 116, 119, 120, 122, 123], "facet": [0, 6, 10, 15, 16, 22, 45, 46, 56, 78, 81], "group": [0, 6, 10, 15, 16, 36, 46, 85, 89, 102, 105], "coplanar": [0, 6, 10, 15, 16, 18, 22, 25, 45, 57, 68, 70, 102], "each": [0, 2, 6, 8, 9, 10, 13, 15, 16, 19, 20, 24, 25, 29, 33, 36, 39, 45, 46, 47, 53, 57, 59, 69, 70, 71, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 93, 94, 95, 97, 98, 101, 102, 105, 112, 114, 116, 119, 120, 121, 122, 124, 125], "random": [0, 2, 6, 8, 10, 15, 16, 19, 24, 57, 69, 70, 71, 78, 79, 81, 93, 101, 105, 112, 114], "8": [0, 2, 6, 7, 10, 15, 18, 19, 22, 36, 38, 41, 47, 71, 79, 87, 101, 105], "bit": [0, 2, 6, 10, 38, 103], "rgba": [0, 6, 10, 15, 70, 79, 96, 112, 114, 115, 116], "n": [0, 2, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 23, 24, 25, 35, 39, 45, 46, 47, 52, 53, 54, 55, 57, 60, 61, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 93, 94, 95, 97, 98, 101, 102, 103, 105, 112, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126], "4": [0, 2, 6, 9, 10, 12, 15, 16, 18, 19, 20, 24, 45, 46, 47, 48, 52, 53, 56, 57, 59, 69, 70, 74, 79, 80, 81, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 101, 103, 105, 109, 112, 114, 115, 116, 117, 119, 120, 124, 125, 126], "uint8": [0, 6, 10, 15, 19, 24, 70, 79, 90, 96, 112, 114, 116, 117, 119, 120, 125], "visual": [0, 1, 6, 8, 10, 11, 13, 14, 15, 16, 24, 29, 31, 33, 34, 36, 57, 59, 69, 79, 81, 89, 94, 97, 99, 119, 120], "face_color": [0, 6, 10, 11, 13, 15, 16, 112, 114, 117], "random_color": [0, 6, 8, 10, 15, 112, 114], "opengl": [0, 6, 7, 15, 16, 89, 94, 97, 101, 105], "show": [0, 1, 3, 6, 8, 10, 11, 12, 13, 14, 15, 16, 56, 57, 61, 70, 71, 79, 91, 94, 97, 98, 119, 120], "transform": [0, 6, 9, 10, 15, 16, 18, 20, 21, 24, 45, 48, 53, 56, 57, 59, 67, 69, 70, 71, 74, 78, 79, 80, 81, 87, 89, 93, 94, 95, 96, 97, 109, 119, 120], "method": [0, 6, 10, 12, 15, 16, 19, 21, 22, 29, 56, 63, 80, 82, 85, 87, 93, 101, 102, 103, 105, 119, 120, 121, 123], "matrix": [0, 6, 9, 10, 15, 16, 18, 20, 24, 25, 45, 46, 48, 56, 57, 59, 69, 70, 71, 74, 78, 79, 80, 81, 87, 89, 93, 94, 95, 97, 98, 100, 101, 102, 119, 120, 122, 124, 126], "appli": [0, 6, 10, 15, 24, 48, 52, 56, 57, 70, 74, 78, 79, 81, 87, 94, 97, 101, 112, 114, 116, 118, 119, 120, 126], "apply_transform": [0, 6, 10, 15, 16, 56, 57, 70, 79, 81, 94, 97, 119, 120, 126], "random_rotation_matrix": [0, 6, 10, 15, 101], "axi": [0, 2, 3, 6, 10, 12, 15, 16, 18, 19, 24, 29, 45, 46, 47, 48, 54, 56, 57, 69, 70, 71, 78, 79, 80, 81, 82, 94, 96, 97, 98, 101, 105, 109, 119, 120, 122], "align": [0, 6, 9, 10, 15, 16, 18, 19, 48, 56, 57, 61, 69, 70, 71, 79, 81, 82, 87, 94, 97, 101, 102, 105], "bound": [0, 6, 8, 10, 12, 15, 16, 24, 29, 55, 56, 57, 59, 61, 69, 70, 71, 79, 81, 82, 85, 93, 94, 97, 101, 102, 105, 109, 119, 120], "box": [0, 4, 6, 8, 10, 12, 15, 16, 18, 24, 29, 56, 59, 69, 70, 71, 79, 81, 82, 85, 93, 94, 97, 101, 102, 105, 109, 119, 120, 124], "bounding_box": [0, 6, 10, 15, 29, 56], "extent": [0, 6, 10, 15, 16, 18, 24, 56, 57, 59, 69, 70, 71, 79, 81, 93, 94, 97, 101, 102, 119, 120], "minimum": [0, 6, 10, 15, 18, 20, 22, 46, 47, 54, 55, 56, 59, 79, 81, 102, 105], "orient": [0, 6, 8, 9, 10, 15, 16, 18, 24, 56, 71, 80, 81, 90, 93, 96, 101, 102, 105], "primit": [0, 6, 8, 10, 11, 13, 15, 16, 24, 56, 61, 70], "subclass": [0, 6, 10, 19, 81, 103, 105], "automat": [0, 4, 6, 10, 15, 16, 34, 46, 81, 82, 94, 97, 112, 114, 118], "store": [0, 6, 11, 15, 16, 19, 32, 33, 53, 61, 70, 79, 81, 82, 91, 94, 95, 97, 98, 105, 112, 114, 116, 118, 119, 120, 125, 126], "attribut": [0, 6, 13, 15, 19, 27, 46, 57, 70, 76, 79, 81, 82, 88, 105], "bounding_box_ori": [0, 6, 8, 10, 15, 56, 81], "append": [0, 2, 6, 15, 16, 94, 97, 103, 105, 112, 114], "lazili": [0, 6, 10, 81, 122], "evalu": [0, 6, 7, 10, 15, 16, 46, 47, 80, 92, 99, 105], "fill": [0, 6, 10, 15, 16, 19, 57, 70, 71, 72, 90, 119, 120, 121, 123, 124], "press": [0, 6, 101, 109], "w": [0, 6, 9, 19, 87, 98, 101], "see": [0, 2, 6, 7, 15, 16, 18, 19, 29, 57, 69, 70, 74, 90, 101, 102, 105, 107, 108, 119, 120, 121, 122, 123], "sphere": [0, 6, 10, 11, 13, 15, 23, 24, 25, 48, 55, 56, 81, 82, 93, 101], "cylind": [0, 6, 10, 15, 16, 18, 24, 48, 56, 81], "except": [0, 6, 7, 10, 15, 16, 19, 33, 39, 47, 71, 96, 105, 125], "certain": [0, 6, 10, 76], "degener": [0, 6, 10, 15, 16, 46, 81, 102], "case": [0, 6, 7, 10, 15, 16, 19, 61, 76, 81, 87, 88, 93, 105], "where": [0, 2, 6, 9, 10, 11, 15, 16, 18, 19, 29, 32, 46, 47, 54, 58, 61, 66, 70, 71, 74, 75, 76, 79, 84, 85, 91, 93, 94, 96, 97, 98, 101, 102, 105, 119, 120, 121, 125], "thei": [0, 2, 4, 6, 7, 9, 10, 15, 16, 19, 54, 57, 61, 70, 75, 85, 94, 96, 97, 105, 119, 120, 124], "wors": [0, 6, 10], "than": [0, 2, 6, 7, 9, 10, 15, 16, 18, 19, 22, 23, 24, 25, 29, 34, 45, 46, 47, 56, 61, 63, 69, 71, 74, 75, 79, 87, 88, 90, 93, 96, 98, 101, 102, 105, 116], "least": [0, 6, 9, 10, 19, 29, 55, 82, 101], "squar": [0, 6, 10, 15, 16, 55, 87, 96, 101, 118, 123], "fit": [0, 6, 10, 15, 16, 22, 29, 55, 57, 70, 75, 79, 87, 103, 116], "bounding_cylind": [0, 6, 10, 15, 56], "bounding_spher": [0, 6, 10, 15, 56], "binari": [0, 6, 7, 29, 33, 38, 39, 69, 92, 103, 105, 122, 125], "ascii": [0, 6, 38, 39, 44, 105], "wavefront": [0, 6, 36], "obj": [0, 6, 7, 14, 15, 18, 23, 28, 29, 55, 89, 91, 104, 105, 114, 116], "off": [0, 6, 15, 16, 28, 29, 91, 94, 97], "export": [0, 6, 7, 15, 16, 22, 28, 29, 31, 33, 36, 37, 38, 39, 40, 41, 43, 44, 56, 57, 62, 63, 67, 70, 74, 79, 91, 94, 97, 98, 105, 119, 120], "2d": [0, 6, 7, 12, 15, 16, 18, 24, 34, 47, 52, 57, 58, 60, 61, 63, 66, 68, 69, 70, 71, 72, 74, 101, 102, 105, 122], "3d": [0, 6, 9, 12, 15, 16, 18, 20, 24, 34, 43, 45, 52, 53, 57, 58, 61, 66, 68, 69, 70, 73, 74, 79, 81, 82, 89, 101, 105, 109, 119, 120, 124], "dxf": [0, 6, 15, 34, 57, 62, 64, 65, 70], "svg": [0, 6, 7, 12, 15, 46, 57, 64, 65, 67, 70, 74], "geometri": [0, 6, 9, 12, 15, 16, 17, 20, 21, 23, 24, 33, 34, 37, 41, 42, 44, 46, 48, 52, 53, 56, 57, 59, 63, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 81, 84, 87, 89, 90, 93, 94, 96, 97, 98, 100, 101, 104, 105, 107, 108, 119, 120, 121], "gmsh": [0, 6, 15, 49], "sdk": [0, 6, 52], "brep": [0, 6, 29, 52], "step": [0, 6, 7, 12, 15, 16, 30, 52, 76, 81, 87, 105], "ig": [0, 6, 52], "inp": [0, 6], "bdf": [0, 6, 52], "collada": [0, 6, 15, 16, 31], "abaqu": [0, 6, 40], "nastran": [0, 6, 52], "line": [0, 2, 6, 11, 12, 15, 19, 22, 24, 25, 29, 53, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 73, 74, 75, 76, 81, 103, 105], "jupyt": [0, 6, 15, 94, 97, 107, 108], "three": [0, 4, 6, 9, 15, 16, 52, 56, 58, 61, 74, 78, 101, 102, 105, 107, 108], "j": [0, 6, 9, 15, 47, 52, 60, 75, 76, 88, 100, 101, 105, 107, 108], "hash": [0, 4, 6, 7, 15, 16, 19, 21, 46, 47, 57, 69, 70, 79, 91, 94, 97], "chang": [0, 6, 15, 16, 19, 21, 70, 76, 81, 87, 90, 91, 94, 97, 98, 101, 109, 114], "track": [0, 6, 15, 16, 19, 81, 103], "md5": [0, 6], "zlib": [0, 6], "crc": [0, 6, 15, 79], "intern": [0, 6, 29, 48, 119, 120], "comput": [0, 6, 9, 15, 16, 17, 19, 25, 26, 29, 45, 46, 48, 55, 68, 79, 80, 82, 87, 100, 101, 102, 103, 105, 109, 124], "valid": [0, 6, 7, 9, 15, 16, 28, 33, 48, 53, 57, 61, 70, 71, 81, 94, 97, 102, 104, 105], "calcul": [0, 6, 7, 15, 16, 19, 47, 48, 53, 58, 60, 71, 81, 88, 93, 94, 95, 97, 100, 101, 102, 104, 105, 112, 118], "angl": [0, 6, 15, 16, 22, 23, 24, 25, 45, 46, 47, 57, 58, 59, 61, 63, 69, 71, 74, 79, 94, 95, 96, 97, 98, 101, 102, 105], "defect": [0, 6, 15, 16, 25], "e": [0, 2, 4, 6, 7, 9, 15, 16, 17, 24, 27, 31, 33, 34, 46, 64, 67, 69, 79, 81, 88, 91, 93, 96, 98, 101, 104, 105, 112, 114, 116, 121, 123, 125], "slice": [0, 6, 12, 15, 16, 53, 61, 112, 114], "arbitrari": [0, 6, 13, 15, 16, 24, 48, 79, 104, 105], "plane": [0, 6, 12, 15, 16, 18, 22, 23, 24, 45, 53, 57, 58, 59, 61, 70, 71, 79, 81, 101, 105, 119, 120], "base": [0, 4, 6, 7, 15, 19, 20, 22, 27, 29, 39, 47, 51, 56, 57, 58, 61, 69, 70, 76, 78, 79, 81, 82, 84, 85, 88, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 112, 114, 116, 118, 119, 122, 123, 126], "tool": [0, 6, 7, 29, 45, 99], "spars": [0, 2, 6, 7, 9, 15, 16, 25, 45, 46, 100, 119, 120, 122, 124], "princip": [0, 6, 15, 16, 48, 71, 87], "repair": [0, 6, 15, 23, 29, 46, 57, 71, 98, 101, 105], "simpl": [0, 1, 6, 7, 10, 11, 15, 16, 37, 46, 70, 94, 97, 98, 101, 104, 114, 116, 118, 120, 122], "problem": [0, 2, 6, 9, 15, 16, 19, 73, 79, 84], "wind": [0, 6, 15, 16, 24, 46, 90, 101], "normal": [0, 6, 9, 15, 16, 18, 20, 23, 24, 25, 33, 36, 38, 39, 45, 47, 53, 57, 58, 59, 61, 70, 71, 79, 81, 82, 85, 87, 90, 100, 101, 102, 114, 116, 118, 125], "quad": [0, 6, 15, 16, 45, 46, 81], "hole": [0, 6, 15, 16, 46, 57, 70, 71, 90, 119, 120], "rotat": [0, 6, 9, 15, 16, 24, 29, 45, 48, 61, 67, 69, 71, 78, 81, 87, 94, 95, 96, 98, 101, 107, 109, 119, 120], "translat": [0, 6, 9, 15, 16, 28, 29, 48, 56, 67, 70, 78, 87, 98, 101, 109, 119, 120, 126], "tessel": [0, 6, 15, 21, 78, 81], "invari": [0, 6, 15, 16], "identifi": [0, 6, 15, 16, 20, 21, 57, 61, 70, 71, 94, 97, 105], "find": [0, 2, 6, 8, 9, 12, 13, 15, 16, 18, 19, 45, 46, 47, 48, 53, 55, 57, 58, 66, 68, 70, 71, 74, 79, 80, 82, 84, 85, 87, 91, 94, 97, 98, 99, 101, 102, 105, 124], "duplic": [0, 6, 13, 15, 16, 47, 70, 74, 75, 81, 94, 97, 105, 112, 114, 118], "determin": [0, 6, 9, 15, 16, 19, 69, 75, 87, 102], "uniformli": [0, 6, 76, 101], "sampl": [0, 2, 6, 7, 8, 15, 16, 18, 57, 60, 70, 71, 75, 76, 80, 81, 87, 105, 112, 114, 116], "locat": [0, 6, 11, 15, 16, 19, 48, 52, 55, 59, 69, 80, 81, 84, 85, 91, 96, 102, 118, 119, 120, 124], "index": [0, 6, 11, 15, 16, 19, 20, 24, 38, 39, 46, 47, 53, 57, 61, 63, 66, 70, 71, 74, 75, 76, 79, 82, 84, 85, 88, 89, 90, 103, 105, 114, 116, 118, 122, 124], "boolean": [0, 2, 6, 7, 15, 16, 19, 45, 46, 47, 49, 50, 57, 58, 61, 70, 72, 100, 124], "intersect": [0, 2, 6, 7, 11, 12, 15, 16, 17, 20, 25, 29, 50, 54, 57, 69, 70, 71, 82, 84, 85, 95], "union": [0, 2, 6, 7, 15, 16, 17, 50, 52, 54, 71, 74, 94, 97], "differ": [0, 2, 4, 6, 9, 15, 16, 17, 19, 21, 38, 47, 50, 53, 56, 74, 78, 87, 94, 97, 98, 100, 101, 102, 103, 109, 118, 122, 125], "manifold3d": [0, 6, 7, 15, 16], "blender": [0, 6, 15, 17, 49, 101], "note": [0, 6, 9, 15, 16, 19, 24, 28, 29, 47, 48, 56, 61, 70, 71, 76, 88, 90, 93, 101, 103, 105], "usual": [0, 2, 6, 7, 45, 98, 105, 118], "slow": [0, 2, 6, 7, 15, 16, 17, 79, 85, 88], "unreli": [0, 6], "voxel": [0, 6, 7, 15, 16, 29, 105], "tetgen": [0, 6, 52], "smooth": [0, 6, 9, 11, 15, 16, 46, 57, 70, 75, 87, 88, 89, 94, 97, 119, 120], "laplacian": [0, 6, 100], "algorithm": [0, 2, 6, 7, 9, 15, 16, 19, 52, 76, 82, 87, 101, 119, 120, 124], "classic": [0, 6], "taubin": [0, 6, 100], "humphrei": [0, 6, 100], "subdivid": [0, 6, 15, 16, 24, 78, 88, 121], "approxim": [0, 6, 15, 16, 18, 26, 46, 56, 57, 58, 70, 71, 79, 84, 88, 93, 94, 97], "nearest": [0, 5, 6, 7, 9, 69, 82, 89, 101], "point": [0, 6, 7, 8, 9, 13, 15, 16, 18, 20, 22, 23, 24, 25, 36, 45, 47, 48, 52, 53, 55, 57, 58, 60, 61, 63, 67, 68, 69, 70, 71, 73, 74, 75, 76, 80, 81, 82, 84, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 109, 114, 119, 120, 121, 124, 126], "sign": [0, 6, 57, 70, 82, 87, 103, 105], "distanc": [0, 6, 8, 9, 13, 15, 16, 20, 22, 23, 24, 46, 47, 53, 56, 57, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 85, 87, 94, 95, 96, 97, 98, 100, 105], "li": [0, 6, 45, 105], "insid": [0, 2, 4, 6, 15, 16, 18, 19, 29, 57, 59, 70, 71, 78, 81, 82, 84, 85, 91, 93, 96, 101, 105], "outsid": [0, 6, 69, 82, 116], "construct": [0, 6, 9, 15, 16, 24, 38, 82, 125], "extrus": [0, 6, 15, 24, 81], "have": [0, 2, 4, 6, 15, 16, 21, 22, 23, 24, 34, 46, 47, 57, 59, 61, 63, 69, 70, 71, 74, 76, 79, 82, 90, 94, 96, 97, 98, 101, 102, 103, 104, 105, 121, 123, 125], "all": [0, 2, 4, 6, 7, 9, 12, 15, 16, 17, 18, 19, 20, 24, 25, 29, 34, 45, 46, 47, 52, 53, 54, 56, 57, 60, 61, 69, 70, 75, 81, 82, 87, 88, 90, 91, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 117, 122], "same": [0, 2, 6, 8, 9, 15, 16, 19, 22, 36, 42, 47, 56, 61, 70, 78, 79, 82, 93, 101, 102, 105, 112, 114, 118, 122, 125], "tree": [0, 6, 7, 15, 16, 33, 52, 69, 71, 79, 85, 94, 97, 98, 102, 105], "render": [0, 5, 6, 7, 15, 16, 29, 46, 94, 95, 97, 107, 108, 116], "pyrend": [0, 6, 96], "unit": [0, 4, 6, 7, 12, 15, 16, 24, 29, 33, 45, 47, 56, 58, 59, 61, 70, 73, 74, 79, 81, 84, 93, 94, 96, 97, 101, 105, 126], "row": [0, 2, 6, 9, 15, 16, 45, 47, 48, 89, 101, 105, 124], "option": [0, 4, 6, 7, 9, 15, 16, 19, 20, 23, 24, 29, 35, 36, 43, 47, 52, 53, 74, 79, 81, 84, 85, 87, 89, 93, 94, 96, 97, 98, 102, 103, 105, 116], "debug": [0, 2, 6, 7, 17, 22, 50, 51, 75, 87], "inspect": [0, 6], "In": [0, 2, 6, 9, 15, 16, 19, 45, 47, 68, 91, 101, 105], "view": [0, 6, 19, 79, 94, 95, 101, 103, 107], "open": [0, 2, 6, 15, 16, 34, 38, 39, 40, 43, 44, 52, 57, 61, 65, 67, 70, 79, 91, 94, 97, 101, 103, 105], "follow": [0, 6, 9, 15, 19, 65, 88, 101, 102, 125], "command": [0, 6, 29, 47, 51], "mous": [0, 6, 109], "click": [0, 6, 109], "drag": [0, 6, 15, 101, 107, 109], "ctl": [0, 6], "pan": [0, 6], "wheel": [0, 6, 109], "zoom": [0, 6, 109], "z": [0, 6, 9, 12, 15, 16, 24, 29, 74, 80, 94, 95, 96, 98, 101, 105, 119, 120], "toggl": [0, 6, 19], "wirefram": [0, 6, 29], "mode": [0, 6, 15, 19, 29, 46, 50, 57, 69, 70, 72, 101, 103, 105, 112, 114, 116], "c": [0, 6, 7, 9, 19, 24, 45, 79, 91, 101, 102, 103, 119, 120], "backfac": [0, 6, 71, 116], "cull": [0, 6, 79, 116], "g": [0, 4, 6, 9, 13, 15, 34, 46, 64, 98, 101, 105, 112, 114, 121, 123, 125], "xy": [0, 6, 12, 45, 57, 59, 70, 94, 95, 101, 105], "grid": [0, 6, 15, 29, 57, 59, 81, 105, 119, 120], "lowest": [0, 6], "xyz": [0, 6, 15, 24, 28, 29, 56, 79], "rgb": [0, 6, 112, 114, 115, 116], "marker": [0, 6, 24], "between": [0, 6, 7, 9, 13, 15, 16, 17, 19, 20, 45, 46, 47, 53, 57, 68, 69, 70, 71, 74, 76, 79, 82, 85, 87, 98, 100, 101, 103, 105, 109, 112, 114, 122, 124], "world": [0, 6, 15, 61, 94, 95, 97, 98, 109], "frame": [0, 6, 9, 12, 15, 16, 48, 56, 69, 71, 94, 95, 97, 98, 101, 105], "everi": [0, 2, 4, 6, 12, 15, 16, 25, 45, 46, 56, 57, 69, 70, 78, 79, 82, 84, 88, 90, 94, 97, 98, 103, 105, 118, 124], "f": [0, 6, 9], "fullscreen": [0, 6], "m": [0, 1, 2, 6, 9, 11, 15, 16, 23, 24, 39, 45, 46, 47, 53, 54, 58, 59, 61, 63, 66, 69, 70, 71, 74, 75, 76, 79, 81, 82, 84, 85, 87, 88, 90, 98, 100, 101, 102, 104, 105, 114, 116, 118, 121, 122, 124], "maxim": [0, 6], "q": [0, 6, 9, 29, 47, 68, 76, 88, 101, 124], "close": [0, 6, 7, 12, 15, 22, 24, 57, 58, 61, 63, 70, 71, 72, 73, 75, 76, 93, 101, 103, 105, 126], "call": [0, 6, 7, 9, 15, 16, 19, 27, 28, 29, 34, 57, 61, 70, 79, 87, 89, 91, 105, 125], "displai": [0, 1, 6, 14, 15, 71, 79, 94, 97, 98, 107, 108], "complet": [0, 6, 15, 16], "pbr": [0, 6, 116], "better": [0, 6, 9, 15, 16, 18], "shader": [0, 6], "screen": [0, 6], "design": [0, 6, 70, 82], "interoper": [0, 6, 122], "github": [0, 2, 4, 6, 7, 9, 33, 36, 38, 91, 96], "network": [0, 6, 7, 15, 34], "A": [0, 1, 4, 6, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 33, 45, 53, 56, 57, 61, 63, 64, 70, 78, 79, 81, 82, 85, 91, 94, 96, 97, 98, 100, 101, 104, 105, 109, 116, 118, 119, 120, 121, 123], "select": [0, 6, 19], "few": [0, 6, 7, 105], "nvidia": [0, 6], "kaolin": [0, 6], "deep": [0, 6, 15, 94, 97, 98], "learn": [0, 6], "cura": [0, 6], "popular": [0, 6], "slicer": [0, 6], "berkelei": [0, 6], "dexnet4": [0, 6], "relat": [0, 6, 9, 101], "ambidextr": [0, 6], "ai": [0, 6, 101], "work": [0, 4, 6, 29, 38, 70, 105], "robot": [0, 6], "grasp": [0, 6], "kerf": [0, 6], "engin": [0, 6, 7, 15, 16, 17, 24, 46, 53], "analyz": [0, 6, 7], "assembli": [0, 6], "manufactur": [0, 6, 100], "myminifactori": [0, 6], "p2slice": [0, 6], "prepar": [0, 6], "look": [0, 2, 4, 6, 7, 15, 16, 19, 29, 94, 96, 97, 105, 112, 114], "materi": [0, 6, 15, 16, 29, 33, 34, 36, 69, 89, 112, 114, 118], "urdfpi": [0, 6], "urdf": [0, 6, 15, 28], "descript": [0, 6, 7, 29], "moderngl": [0, 6], "helper": [0, 6], "gl": [0, 6, 15, 89, 94, 97], "context": [0, 2, 6, 12, 15, 16], "vedo": [0, 6], "interact": [0, 2, 6, 12], "galleri": [0, 6], "fsley": [0, 6], "mri": [0, 6], "imag": [0, 6, 7, 14, 15, 16, 31, 57, 69, 70, 72, 87, 89, 91, 94, 95, 97, 109, 112, 114, 115, 116, 118, 119, 120], "brain": [0, 6], "recommend": [0, 6, 7, 15, 16, 87, 101, 103], "time": [0, 2, 6, 15, 16, 22, 24, 47, 80, 88, 102, 105, 114, 125], "replac": [0, 2, 6, 7, 9, 15, 16, 19, 20, 57, 70, 75, 92, 99, 105, 119, 120], "angel": [0, 6], "wing": [0, 6], "textur": [0, 5, 6, 7, 15, 16, 31, 33, 34, 36, 38, 47, 69, 89, 91, 112, 114, 115, 116], "terrif": [0, 6], "choic": [0, 6], "extrem": [0, 6, 7, 84, 90], "specifi": [0, 4, 6, 9, 15, 16, 19, 24, 29, 41, 46, 47, 53, 56, 57, 58, 59, 60, 63, 67, 70, 71, 74, 76, 79, 81, 87, 88, 90, 91, 93, 94, 97, 98, 101, 102, 105, 112, 114, 116, 121, 122, 123], "modern": [0, 6], "fast": [0, 2, 6, 7, 19, 50, 55, 101, 109], "pars": [0, 2, 6, 7, 29, 36, 67, 98], "ha": [0, 2, 4, 6, 7, 15, 16, 19, 24, 35, 36, 48, 53, 56, 61, 63, 66, 69, 71, 76, 87, 90, 91, 94, 97, 101, 105, 112, 114, 119, 120, 125], "json": [0, 6, 15, 16, 33, 35, 81, 92, 99, 104, 105], "header": [0, 6, 29, 33, 36, 98], "describ": [0, 6, 9, 19, 52, 101, 105], "blob": [0, 6, 7, 15, 16, 33, 35, 63, 79, 105], "It": [0, 2, 4, 6, 19, 29, 47, 56, 79, 87], "hierarch": [0, 6], "great": [0, 6], "physic": [0, 6, 42, 96, 104, 116], "system": [0, 6, 9, 15, 16, 36, 56, 70, 91, 93, 94, 97, 101, 103, 104], "dozen": [0, 6], "hundr": [0, 6], "john": [0, 6], "carmack": [0, 6], "endors": [0, 6], "larg": [0, 6, 8, 15, 16, 56, 82, 84, 103], "subset": [0, 6, 15, 16, 54, 79, 105, 112, 114, 122], "NOT": [0, 6, 76, 105, 116], "fancier": [0, 6], "anim": [0, 6], "skeleton": [0, 6], "wild": [0, 6, 61], "perhap": [0, 6], "common": [0, 6, 31, 91, 97, 104, 105, 112, 114, 124], "robust": [0, 6, 15, 16, 21, 24, 56, 87, 102], "good": [0, 4, 6], "pretti": [0, 2, 6, 40, 55], "unfortun": [0, 6], "doesn": [0, 6, 7, 11, 15, 24, 94, 97, 104, 124], "t": [0, 2, 4, 6, 7, 9, 11, 15, 16, 19, 24, 29, 33, 34, 36, 47, 48, 57, 61, 68, 69, 70, 71, 81, 87, 88, 94, 97, 98, 101, 102, 104, 105, 118, 124], "wide": [0, 6, 57, 70, 72, 105], "accept": [0, 6, 22, 35, 75, 89, 105], "implement": [0, 2, 6, 7, 9, 15, 16, 18, 19, 29, 33, 55, 56, 61, 81, 85, 87, 88, 98, 101, 102, 105, 114, 116, 119, 120, 121, 122, 123, 125], "slightli": [0, 6, 7, 24, 29], "tough": [0, 6], "size": [0, 2, 6, 15, 18, 19, 24, 29, 52, 61, 69, 70, 79, 94, 95, 97, 101, 102, 103, 109, 116, 119, 122], "represent": [0, 6, 15, 16, 19, 25, 29, 57, 60, 70, 74, 105, 119, 120], "mess": [0, 6], "refer": [0, 2, 12, 15, 16, 19, 29, 31, 33, 45, 47, 61, 63, 70, 71, 81, 94, 96, 97, 98, 99, 101, 105, 118, 123, 126], "arbitrarili": [0, 6], "interleav": [0, 6, 105], "give": [0, 6, 15, 16, 101, 125], "try": [0, 6, 7, 9, 15, 16, 23, 29, 34, 70, 73, 81, 89, 90, 91, 101, 104, 105], "altern": [0, 6, 7, 125], "question": [0, 6, 20], "come": [0, 6, 9, 15, 19, 94, 97, 105, 118], "frequent": [0, 6], "bibtex": [0, 6], "softwar": [0, 6], "author": [0, 6, 29, 101], "dawson": [0, 6], "haggerti": [0, 6], "et": [0, 6, 9, 87], "al": [0, 6, 9, 87, 101], "titl": [0, 3, 6, 29], "url": [0, 6, 15, 34, 91], "http": [0, 6, 18, 23, 29, 33, 36, 38, 52, 68, 69, 79, 91, 93, 96, 101, 102, 116, 123], "org": [0, 6, 23, 79, 123], "2019": [0, 6, 29], "12": [0, 6, 12, 18, 22, 45, 74, 101, 105, 125], "autom": [0, 6], "debian": [0, 4, 6], "slim": [0, 4, 6], "bullsey": [0, 4, 6], "build": [0, 6, 9, 29, 57, 70], "docker": 0, "hub": [0, 4, 6], "tag": [0, 4, 6], "latest": [0, 4, 6], "git": [0, 2, 4, 6, 116], "short": [0, 4, 6], "commit": [0, 6, 7, 91], "main": [0, 6, 9], "0c1298d": [0, 6], "5": [0, 2, 4, 6, 10, 11, 15, 16, 19, 22, 24, 41, 45, 47, 54, 57, 59, 60, 67, 70, 71, 74, 100, 101, 105, 125], "27": [0, 6], "llvmpipe": [0, 6], "xvfb": [0, 6], "mesh": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 66, 69, 70, 71, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 93, 94, 97, 100, 102, 105, 107, 112, 114, 117, 118, 119, 120, 121, 124], "trimesh": [1, 3, 7, 8, 9, 10, 11, 12, 13, 14], "machinist": 1, "kind": [1, 9, 15, 16, 19, 34, 38, 94, 97, 112, 113, 114, 118], "ifram": [1, 8, 10, 11, 12, 13, 14], "srcdoc": [1, 8, 10, 11, 12, 13, 14], "threej": [1, 8, 10, 11, 12, 13, 14], "viewer": [1, 7, 8, 10, 11, 12, 13, 14, 15, 79, 94, 97], "width": [1, 8, 10, 11, 12, 13, 14, 15, 16, 57, 70, 71, 72, 85, 94, 95, 109], "100": [1, 2, 8, 10, 11, 12, 13, 14, 24, 67, 78, 82, 101, 105], "height": [1, 8, 10, 11, 12, 13, 14, 15, 16, 18, 24, 48, 53, 57, 61, 70, 74, 81, 94, 95, 102, 107, 108, 109], "500px": [1, 8, 10, 11, 12, 13, 14], "border": [1, 8, 10, 11, 12, 13, 14], "none": [1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 44, 45, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 109, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126], "super": [2, 7], "i": [2, 4, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 38, 40, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126], "rel": [2, 15, 24, 82, 92, 94, 97, 101, 102, 109], "small": [2, 53, 84, 121], "sourc": [2, 7, 9, 13, 15, 16, 21, 34, 38, 44, 46, 47, 53, 67, 69, 71, 74, 75, 81, 82, 87, 90, 91, 96, 105, 107, 108, 121], "project": [2, 7, 15, 16, 23, 46, 57, 71, 79, 101], "realli": [2, 19, 90], "benefit": 2, "bugfix": 2, "featur": [2, 7, 15, 125], "stuff": [2, 7, 105], "contributor": 2, "pr": 2, "thank": 2, "how": [2, 15, 16, 18, 19, 22, 24, 47, 57, 59, 70, 71, 74, 87, 100, 105, 116], "new": [2, 7, 9, 15, 16, 19, 20, 23, 29, 48, 52, 53, 54, 61, 63, 69, 70, 75, 76, 78, 80, 81, 88, 90, 94, 95, 97, 98, 101, 103, 109, 112, 116, 118, 119, 120, 123], "environ": [2, 7], "write": [2, 15, 19, 29, 32, 33, 36, 41, 42, 44, 46, 91, 103, 105], "necessari": [2, 15, 16], "thi": [2, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 29, 33, 34, 41, 42, 46, 47, 48, 54, 56, 57, 59, 61, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 105, 109, 112, 114, 116, 118, 122, 125, 126], "wai": [2, 7, 15, 16, 18, 19, 21, 52, 78, 81, 90, 101, 103, 105, 114, 119, 120, 122], "doe": [2, 15, 16, 19, 29, 61, 71, 82, 85, 94, 96, 97, 103, 105, 112, 114, 125], "easier": [2, 9, 87], "don": [2, 15, 19, 24, 33, 34, 36, 48, 94, 97, 102, 104], "virtual": [2, 101], "solut": [2, 9, 101, 102], "plenti": 2, "poetri": 2, "pipenv": 2, "conda": [2, 6], "us": [2, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 30, 32, 33, 35, 38, 41, 44, 45, 46, 47, 48, 50, 52, 55, 56, 57, 58, 60, 61, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 112, 114, 116, 118, 121, 122, 123, 124, 125, 126], "venv": 2, "modul": [2, 19, 27, 70, 101, 105, 114, 125], "built": [2, 4, 7, 9, 119, 120], "standard": [2, 7, 29, 105], "librari": [2, 7, 12, 15, 16, 46, 47, 101, 105], "termin": [2, 10], "echo": 2, "bin": [2, 47, 69], "activ": [2, 7], "bashrc": 2, "Then": [2, 9, 19, 52], "can": [2, 4, 7, 8, 9, 10, 12, 15, 16, 19, 22, 24, 25, 26, 33, 34, 36, 38, 40, 44, 45, 47, 53, 54, 56, 61, 63, 66, 71, 74, 76, 78, 79, 81, 87, 91, 94, 97, 98, 101, 102, 105, 112, 118, 125], "verifi": [2, 15, 19], "got": 2, "right": [2, 9, 61, 69, 101, 105], "which": [2, 4, 7, 9, 10, 12, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 31, 33, 34, 36, 38, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 61, 63, 69, 70, 71, 74, 75, 76, 79, 80, 81, 82, 87, 88, 90, 91, 93, 94, 96, 97, 98, 101, 102, 103, 105, 112, 116, 117, 118, 122], "mikedh": [2, 36], "orion": 2, "home": [2, 4, 12], "re": [2, 7, 12, 22, 38, 46, 69, 71, 88, 101, 102], "edit": 2, "might": [2, 19, 104, 105], "fork": [2, 7, 96], "via": [2, 4, 9, 15, 29, 94, 97, 100, 107, 119, 120, 121, 123], "interfac": [2, 15, 19, 24, 29, 82, 91, 101, 103, 122], "instal": [2, 4, 15, 16, 19, 24, 52, 105], "probabl": [2, 4, 7, 15, 16, 24, 28, 80, 87, 91], "clone": 2, "your": [2, 24, 29, 38, 61, 121, 123], "com": [2, 29, 33, 36, 38, 68, 69, 80, 91, 93, 96, 101, 102], "experi": [2, 7, 18], "cd": [2, 101], "much": [2, 15, 16, 18, 57, 70, 81, 87, 98], "repl": 2, "stub": 2, "def": [2, 19], "fancy_funct": 2, "blah": 2, "rais": [2, 7, 15, 16, 17, 19, 27, 29, 33, 57, 70, 71, 98, 101, 103, 119, 120, 125], "valueerror": [2, 19, 57, 70, 71, 98, 101, 103, 125], "input": [2, 15, 18, 19, 20, 23, 33, 35, 39, 42, 46, 47, 52, 53, 54, 55, 57, 63, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 89, 100, 101, 102, 103, 105, 118, 124, 125], "wa": [2, 7, 9, 15, 16, 19, 20, 23, 53, 56, 69, 70, 74, 91, 94, 97, 102, 112, 114, 119, 120, 122, 124], "goofi": [2, 79], "obviou": 2, "whatnot": 2, "dot": [2, 9, 15, 16, 46, 53, 101, 105], "my": 2, "copi": [2, 4, 15, 16, 19, 33, 56, 57, 61, 70, 79, 81, 94, 95, 97, 98, 101, 112, 113, 114, 116, 118, 119, 120, 122, 126], "past": 2, "end": [2, 9, 13, 22, 24, 47, 54, 58, 61, 70, 73, 74, 75, 87, 96, 105, 122, 125], "emb": [2, 33], "__name__": 2, "__main__": 2, "go": [2, 7, 12, 15, 16, 74, 79, 90], "need": [2, 4, 9, 19, 24, 36, 61, 69, 71, 101, 118, 125], "pyinstrument": [2, 7], "low": [2, 19], "overhead": 2, "profil": [2, 7, 15, 16, 24, 57, 70, 81], "nest": 2, "statement": [2, 15, 16, 103], "cprofil": 2, "tweak": [2, 7], "befor": [2, 15, 16, 19, 22, 29, 33, 69, 71, 74, 81, 105, 125], "finish": 2, "ruff": [2, 7], "both": [2, 9, 19, 34, 38, 46, 47, 59, 74, 87, 94, 95, 101, 102, 105, 114, 125], "lint": 2, "configur": [2, 7, 29], "pyproject": [2, 7, 106], "toml": [2, 7, 106], "run": [2, 4, 7, 11, 13, 15, 16, 17, 19, 22, 29, 33, 49, 50, 51, 57, 69, 70, 88, 100, 122, 124, 125], "fix": [2, 15, 16, 73, 90], "sphinx": 2, "page": [2, 29, 87], "littl": 2, "possibl": [2, 7, 15, 16, 19, 52, 87, 103, 105, 114, 125], "ever": [2, 19], "block": [2, 15, 29, 47, 63, 105], "loop": [2, 9, 15, 16, 19, 47, 57, 70, 71, 75, 88, 105], "basic": [2, 7, 9, 21, 61, 70, 74, 85, 96, 104, 105, 123], "unus": [2, 29], "even": [2, 7, 15, 16, 18, 19, 46, 88, 101, 118, 125], "moder": 2, "should": [2, 4, 7, 9, 15, 16, 18, 19, 22, 24, 25, 28, 32, 48, 55, 57, 59, 69, 70, 71, 76, 79, 81, 84, 85, 89, 94, 97, 103, 105, 112, 114, 121, 123], "unless": [2, 101], "absolut": [2, 71, 74, 101, 103], "unavoid": 2, "figur": [2, 3, 15, 94, 97, 105], "advic": 2, "script": [2, 51], "newstuff": 2, "py": [2, 4, 9, 12, 15, 23, 28, 57, 94, 106, 107, 112, 119], "magic": 2, "timeit": [2, 19, 105], "var": 2, "fromstr": 2, "frombuff": 2, "str": [2, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 31, 32, 34, 35, 36, 37, 38, 39, 42, 44, 46, 47, 48, 50, 52, 53, 54, 56, 57, 58, 61, 63, 64, 65, 67, 69, 70, 74, 79, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 107, 108, 112, 114, 115, 116, 118, 119, 120], "6": [2, 10, 15, 16, 18, 19, 29, 45, 47, 101, 105, 125], "text": [2, 7, 9, 15, 36, 37, 57, 61, 69, 102, 103, 105], "dtype": [2, 15, 16, 19, 24, 45, 46, 47, 54, 57, 58, 70, 71, 74, 93, 94, 97, 101, 102, 105, 112, 114, 115, 116, 119, 122, 125], "float64": [2, 15, 16, 54, 58, 70, 71, 74, 81, 93, 94, 97, 101, 102, 103], "1000": [2, 78, 79, 94, 95, 105], "best": [2, 55, 75, 101, 104, 105], "209": 2, "\u00b5": 2, "per": [2, 9, 15, 16, 19, 22, 24, 41, 46, 47, 53, 57, 59, 70, 71, 74, 78, 79, 81, 84, 87, 94, 95, 96, 97, 102, 105, 112, 114, 118, 119, 120], "sep": 2, "10000": [2, 101, 105], "139": 2, "giant": [2, 7], "string": [2, 7, 15, 16, 19, 22, 24, 29, 31, 33, 34, 36, 44, 46, 64, 67, 70, 74, 82, 92, 98, 101, 104, 105, 114], "rather": [2, 15, 16, 34, 61, 63, 79, 90, 105], "iter": [2, 15, 16, 17, 19, 29, 50, 57, 69, 70, 71, 87, 88, 91, 97, 100, 103, 105, 122, 125], "join": 2, "14": [2, 12, 101], "15": [2, 4, 19, 101, 123], "10": [2, 3, 8, 12, 15, 16, 24, 26, 37, 46, 52, 67, 71, 74, 81, 82, 87, 88, 100, 101, 103, 105], "60": 2, "16": [2, 10, 19, 89, 101], "len": [2, 11, 12, 13, 15, 16, 23, 25, 45, 46, 47, 57, 70, 79, 81, 93, 94, 96, 97, 101, 112, 114, 118, 125], "flatten": [2, 122], "34": 2, "sometim": [2, 4, 15, 16, 19, 33, 105, 118], "matric": [2, 9, 15, 16, 67, 80, 96, 98, 101, 124], "huge": 2, "speedup": [2, 18, 46, 71, 101, 102], "two": [2, 8, 13, 15, 16, 19, 20, 22, 24, 46, 47, 54, 61, 68, 69, 73, 74, 89, 96, 101, 102, 105, 112, 114, 118, 124, 125], "product": [2, 9, 15, 16, 40, 53, 102, 105], "tight": [2, 105], "sum": [2, 9, 12, 15, 16, 25, 45, 47, 69, 70, 74, 87, 94, 97, 101, 102, 105, 119, 122], "often": [2, 9, 15, 16, 79, 87], "pop": [2, 15, 19], "slowest": 2, "ones": [2, 7, 105, 122, 125], "veri": [2, 82, 93, 104, 105, 124], "optim": [2, 18, 87, 100, 101, 125], "substanti": [2, 18, 71], "157": 2, "25": [2, 19, 38, 46, 101, 103], "vstack": [2, 105], "column_stack": 2, "seq": 2, "int": [2, 13, 15, 16, 18, 19, 20, 22, 24, 29, 30, 35, 36, 37, 38, 39, 41, 45, 46, 47, 52, 53, 54, 57, 58, 59, 60, 61, 66, 67, 69, 70, 71, 72, 74, 75, 76, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 93, 94, 95, 97, 98, 100, 103, 105, 109, 112, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125], "rang": [2, 9, 15, 16, 54, 74, 100, 101, 112, 114, 115, 116], "48": [2, 101], "33": [2, 10], "bincount": 2, "instead": [2, 9, 29, 45, 46, 105], "uniqu": [2, 8, 13, 15, 16, 47, 57, 70, 71, 74, 85, 94, 97, 102, 105, 114], "45": [2, 67, 125], "astyp": [2, 45], "46": [2, 45], "bool": [2, 15, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 31, 33, 34, 36, 38, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 61, 63, 67, 68, 69, 70, 71, 72, 74, 75, 79, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 97, 98, 101, 102, 103, 104, 105, 107, 108, 112, 114, 115, 116, 118, 119, 120, 122, 124, 125], "true": [2, 9, 10, 15, 16, 17, 18, 19, 20, 22, 23, 26, 29, 30, 31, 32, 33, 36, 38, 41, 44, 46, 47, 53, 54, 55, 57, 58, 59, 61, 63, 67, 69, 70, 71, 72, 74, 76, 79, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 116, 118, 121, 122, 125], "47": 2, "100000": 2, "81": 2, "31": 2, "especi": [2, 9], "could": [2, 4], "element": [2, 19, 29, 40, 47, 52, 98, 105, 116, 119, 120, 123, 125], "high": [2, 9], "mai": [2, 7, 9, 15, 16, 17, 18, 29, 36, 47, 56, 57, 70, 71, 76, 79, 85, 93, 94, 96, 97, 101, 105, 121], "comprehens": 2, "quit": 2, "though": [2, 9, 96, 105], "definit": [2, 56], "first": [2, 4, 9, 15, 16, 19, 20, 46, 47, 52, 61, 63, 71, 76, 80, 84, 85, 98, 101, 102, 103, 105, 122], "scope": 2, "reason": [2, 7, 33, 60, 75, 87, 105], "seem": 2, "answer": 2, "nearli": [2, 26], "flaki": 2, "restructur": 2, "form": [2, 9, 15, 16, 19, 35, 39, 46, 47, 60, 61, 67, 74, 89, 101, 102, 104, 105, 125], "didn": 2, "discret": [3, 15, 16, 22, 25, 57, 58, 60, 61, 69, 70, 75, 76], "gaussian": [3, 15, 16, 25, 78, 80], "measur": [3, 23, 25, 119, 120], "discrete_gaussian_curvature_measur": [3, 15, 25], "discrete_mean_curvature_measur": [3, 15, 25], "sphere_ball_intersect": [3, 15, 25], "matplotlib": [3, 12, 57, 61, 70, 71, 79, 98, 112, 114], "pyplot": [3, 112, 114], "plt": [3, 12, 61, 71, 79], "inlin": [3, 10, 12, 107], "creation": [3, 9, 11, 15, 16, 57, 70, 81, 119], "icospher": [3, 11, 15, 24, 81], "radii": [3, 15, 16, 46, 82], "linspac": [3, 76, 81, 105], "gauss": 3, "r": [3, 4, 9, 12, 15, 16, 25, 47, 52, 71, 85, 100, 101, 102, 105], "plot": [3, 12, 15, 57, 61, 70, 71, 79, 98], "ubuntu": 4, "typic": [4, 25], "dockerfil": 4, "idea": [4, 7, 9], "parti": 4, "buster": 4, "deriv": [4, 9, 15, 16, 81, 100, 122], "unmaintain": 4, "unknow": 4, "black": [4, 7, 12], "fine": [4, 7], "11": [4, 103], "offici": 4, "push": 4, "action": 4, "releas": [4, 7], "demand": 4, "semant": 4, "1c6178d": 4, "These": [4, 15, 16, 19, 57, 70], "embre": [4, 7], "multi": [4, 19, 42, 66, 70, 98], "stage": 4, "avoid": [4, 15, 16, 19, 53, 69, 71, 79, 81, 84, 88, 89, 102, 105, 125], "intermedi": [4, 30, 82, 87], "final": [4, 15, 18, 19, 69, 71, 75, 94, 97], "non": [4, 15, 16, 33, 46, 47, 74, 82, 87, 90, 101, 105, 119, 120, 121, 125], "root": [4, 15, 57, 69, 70, 71, 76, 91, 94, 97, 98], "user": [4, 9, 12, 15, 16, 17, 19, 27, 34, 81, 114], "directori": [4, 33, 36, 42, 91], "txt": 4, "app": 4, "cmd": 4, "save": [4, 15, 16, 29, 36, 52, 79, 91, 114, 125], "multistag": 4, "explicitli": [4, 9, 15, 16, 34, 80], "output": [4, 9, 15, 16, 29, 31, 33, 36, 37, 50, 52, 69, 75, 114], "target": [4, 9, 13, 20, 80, 87, 105, 109], "enabl": [4, 7, 9, 17, 48, 88], "buildkit": 4, "docker_buildkit": 4, "There": [4, 7, 19, 105, 114], "makefil": 4, "access": [4, 9, 19, 27, 29, 91], "doc": [4, 52, 123], "help": [4, 19, 29, 87], "eject": 4, "html": [4, 23, 29, 52, 68, 93, 101, 107, 108, 123], "sever": [5, 9], "shortest": [5, 47, 98], "quick": [5, 7, 23], "start": [5, 9, 13, 15, 16, 46, 54, 58, 63, 73, 74, 79, 87, 91, 103, 105, 122, 125], "curvatur": [5, 15, 16, 24, 100], "overview": 6, "ad": [6, 9, 15, 19, 61, 76, 90, 91, 94, 97, 116], "importerror": 7, "runtim": [7, 103], "isn": [7, 15, 16, 19, 47, 48, 71], "format": [7, 15, 16, 22, 23, 28, 31, 33, 34, 36, 37, 38, 40, 41, 44, 46, 47, 52, 63, 65, 67, 79, 89, 91, 98, 101, 105, 116], "mac": 7, "extra": [7, 9, 20, 33, 98], "Or": [7, 52], "prefer": [7, 38], "forg": 7, "feedstock": 7, "repo": [7, 91], "miniconda": 7, "lot": [7, 46, 98, 105, 114], "upstream": 7, "sure": [7, 15, 16, 19, 71, 90, 101], "maintain": [7, 78], "summari": 7, "level": [7, 41, 105], "contain": [7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 56, 57, 59, 63, 66, 67, 69, 70, 71, 79, 81, 82, 84, 85, 87, 88, 91, 94, 97, 99, 104, 105, 107, 108, 112, 114, 115, 116, 118, 121, 125], "type": [7, 9, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "spatial": [7, 15, 16, 69, 70, 79, 94, 97], "convexhul": 7, "csgraph": [7, 46], "ckdtree": [7, 15, 16, 70, 79, 87], "b": [7, 9, 12, 15, 16, 19, 45, 47, 54, 57, 60, 61, 63, 70, 75, 87, 88, 91, 100, 101, 105, 119, 120, 124], "spline": [7, 22, 57, 60, 61, 70, 75], "interpol": [7, 15, 87, 101, 112, 114], "over": [7, 9, 15, 16, 59, 80, 90, 112, 114], "annoi": 7, "abil": 7, "parent": [7, 15, 57, 61, 69, 70, 81, 94, 97, 98, 113], "node": [7, 15, 16, 20, 41, 46, 57, 61, 69, 70, 76, 94, 95, 96, 97, 98, 102], "understand": 7, "bind": 7, "geo": 7, "theoret": 7, "planar": [7, 15, 16, 22, 57, 70, 80], "offset": [7, 15, 16, 53, 69, 94, 97, 101, 103], "clipper": 7, "nd": [7, 79, 122], "rectangl": [7, 15, 18, 57, 59, 69], "broad": [7, 85, 102, 105], "phase": [7, 85, 102, 105], "given": [7, 9, 13, 15, 16, 18, 20, 24, 34, 45, 46, 47, 53, 54, 57, 58, 60, 63, 66, 70, 71, 75, 76, 79, 82, 85, 89, 94, 95, 97, 99, 101, 102, 105, 109, 112, 114, 116, 119, 120, 121, 123, 124, 125], "curv": [7, 12, 15, 16, 22, 23, 24, 57, 61, 66, 70, 71, 75, 76], "fcl": [7, 20], "mayb": 7, "httpx": 7, "exchang": [7, 15, 51, 57], "load_remot": [7, 15, 28, 34], "aiohttp": 7, "sympi": [7, 101, 104], "symbol": [7, 101], "algebra": 7, "quickli": [7, 15, 16, 21, 71, 75, 79, 82, 124], "chardet": [7, 105], "fail": [7, 15, 16, 18, 27, 71, 101, 104, 105, 106], "decod": [7, 92, 105, 125], "utf": [7, 105], "guess": [7, 15, 16, 55, 70, 75, 94, 97, 104, 105], "encod": [7, 15, 29, 32, 35, 38, 70, 94, 97, 101, 105, 107, 108, 114, 119, 120, 121, 123, 125], "u": [7, 19, 98, 105], "weird": [7, 89], "colorlog": [7, 105], "log": [7, 22, 55, 57, 70, 75, 93, 105], "pillow": [7, 72], "read": [7, 15, 19, 29, 63, 103], "raster": [7, 15, 57, 70], "jsonschema": [7, 33, 99], "pycollada": 7, "dae": [7, 15, 28], "xatla": [7, 15, 16], "unwrap": [7, 15, 16, 49, 50], "uv": [7, 14, 15, 16, 24, 38, 47, 53, 112, 114, 116, 118], "coordin": [7, 9, 14, 15, 16, 38, 47, 53, 61, 70, 81, 87, 94, 95, 97, 101, 102, 105, 109, 112, 114, 116, 118, 124], "collis": [7, 15, 102, 105], "glooei": 7, "widget": [7, 15, 107], "meshio": [7, 35], "addit": [7, 15, 16, 17, 22, 31, 46, 50, 100, 105, 119, 120, 121, 123], "scikit": [7, 119, 120], "op": [7, 15, 118, 119, 122], "mapbox": [7, 24], "earcut": [7, 24], "triangul": [7, 15, 16, 24, 25, 53, 57, 66, 70, 81, 88], "unusu": 7, "licens": [7, 24], "psutil": 7, "memori": [7, 15, 16, 19, 79, 121], "usag": [7, 15, 16, 105], "instanti": [7, 33, 70], "static": [7, 15, 16, 80, 101, 103, 122], "code": [7, 15, 16, 19, 56, 63, 101, 103, 125], "formatt": [7, 105], "flake8": 7, "pytest": 7, "runner": 7, "cov": [7, 15, 16], "plugin": 7, "coverag": 7, "perform": [7, 9, 52, 71, 87, 101, 105, 125], "vhacdx": 7, "vhacd": [7, 15, 16, 26], "decomposit": [7, 15, 16, 42], "manifold": [7, 15, 16, 17], "openctm": 7, "ctm": 7, "cascadio": [7, 30], "opencascad": [7, 30], "matur": 7, "rust": 7, "complic": [7, 19], "major": [7, 24, 79, 89, 101], "jinja2": 7, "otherwis": [7, 20, 69, 93, 101, 102, 103, 105, 116, 125], "intel": [7, 101], "50": [7, 22, 67, 69, 87], "100x": 7, "ve": 7, "organ": [7, 101], "take": [7, 12, 15, 16, 46, 59, 69, 76, 82, 98, 105, 124], "compil": [7, 19], "mit": [7, 48], "bsd": 7, "compat": [7, 19, 89, 103], "repositori": [7, 9, 91], "submodul": 7, "mysteri": 7, "pybind11": 7, "nanobind": 7, "maturin": 7, "py03": 7, "cython": 7, "ok": [7, 112, 114], "cibuildwheel": 7, "publish": [7, 29], "ci": 7, "ideal": [7, 9, 19], "pointcloud": [8, 9, 15, 16, 44, 56, 79, 87, 94, 97, 114], "ish": [8, 11], "cycloid": 8, "sample_volum": [8, 15, 81], "count": [8, 15, 16, 24, 46, 47, 57, 59, 60, 61, 70, 71, 74, 75, 76, 81, 85, 89, 93, 103, 105, 114, 125], "immut": [8, 10, 13], "closest": [8, 9, 15, 16, 20, 73, 74, 79, 82, 87, 94, 95, 102], "closest_point": [8, 15, 82, 87, 102], "triangle_id": [8, 82], "on_surfac": [8, 15, 82], "meshdist": 8, "cloud_origin": 8, "cloud_clos": 8, "cloud_color": 8, "vertices_color": 8, "wuse": 8, "capabl": 9, "superimpos": [9, 101], "structur": [9, 15, 16, 19, 20, 33, 88, 98, 119, 120, 123], "either": [9, 17, 19, 29, 35, 58, 63, 70, 71, 81, 91, 94, 95, 101, 104, 105, 115], "cloud": [9, 15, 44, 79, 87], "dens": [9, 15, 18, 45, 119, 120, 122, 123, 124, 125], "correspond": [9, 15, 16, 20, 33, 46, 47, 57, 70, 81, 85, 87, 94, 95, 97, 102, 118, 125], "morphabl": 9, "part": [9, 15, 19, 26, 29, 87, 94, 97, 101, 105], "scale": [9, 15, 22, 28, 29, 42, 56, 57, 58, 60, 61, 67, 70, 71, 75, 76, 78, 81, 84, 87, 94, 96, 97, 101, 104, 109, 115, 119, 120, 126], "togeth": [9, 93], "match": [9, 15, 16, 81, 84, 87, 94, 97, 105, 118], "icp": [9, 15, 16, 87], "move": [9, 12, 15, 16, 18, 19, 24, 45, 53, 56, 57, 59, 69, 70, 71, 81, 94, 97], "less": [9, 18, 23, 56, 87, 96, 98, 105, 116], "independ": [9, 57, 70, 101], "land": [9, 15, 16, 80], "extens": [9, 15, 33, 34, 35, 65, 105], "associ": [9, 15, 29, 63, 66, 71, 79, 98, 102, 112, 114, 125, 126], "sumner": [9, 87], "popov": [9, 87], "2004": [9, 29, 87, 101], "nonrigid": [9, 87], "amberg": [9, 87], "2007": [9, 87], "introduc": 9, "allen": 9, "colleagu": 9, "2003": [9, 29], "modifi": [9, 15, 16, 19, 75, 88, 94, 97, 112, 118, 121, 123], "adapt": 9, "defin": [9, 15, 16, 19, 23, 24, 38, 53, 54, 56, 59, 61, 70, 73, 74, 79, 81, 94, 95, 96, 97, 101, 105, 112, 114, 116, 118, 126], "mathcal": 9, "mathbf": 9, "v": [9, 88, 98, 100, 101, 103, 118], "mathbb": 9, "times3": 9, "being": [9, 15, 16, 19, 46, 69, 102, 105, 126], "indic": [9, 13, 15, 16, 19, 20, 24, 45, 46, 47, 53, 61, 63, 66, 70, 71, 74, 76, 87, 88, 93, 103, 105, 109, 112, 114, 118, 119, 120, 122, 124, 125], "seek": [9, 15, 103], "tild": 9, "underform": 9, "affin": [9, 101], "At": [9, 29, 103], "solv": [9, 87], "constraint": [9, 52, 87], "next": [9, 15, 79, 101], "return_record": [9, 87], "_i": 9, "x": [9, 15, 16, 19, 24, 29, 71, 95, 98, 101, 103, 105, 109, 119, 120], "_1": 9, "_2": 9, "_3": 9, "_4": 9, "tetrahedron": 9, "times4": 9, "frac": 9, "sqrt": [9, 101], "lvert": 9, "rvert": 9, "tip": 9, "subtract": 9, "previou": 9, "equat": 9, "obtain": [9, 101], "begin": [9, 96], "impli": [9, 15, 16], "now": [9, 104], "energi": 9, "directli": [9, 15, 16, 28, 57, 66, 70, 79, 94, 97], "term": [9, 87, 105], "e_c": 9, "equal": [9, 15, 16, 19, 47, 79, 80, 96, 100, 101, 103, 116], "error": [9, 15, 16, 17, 27, 29, 55, 87, 101, 105], "weight": [9, 13, 15, 16, 87, 93, 100, 101], "boldsymbol": 9, "alpha": [9, 71, 100, 101, 116], "limit": [9, 53, 100, 103], "n_": 9, "ident": [9, 15, 16, 47, 69, 70, 80, 87, 94, 97, 98, 101, 105, 125], "e_i": 9, "_": 9, "stiff": 9, "e_": 9, "adj": 9, "argument": [9, 15, 16, 19, 26, 30, 33, 36, 38, 41, 66, 79, 89, 94, 97, 98, 101, 102, 103, 112, 117], "face_pairs_typ": [9, 87], "edg": [9, 13, 15, 16, 24, 25, 45, 46, 57, 59, 61, 66, 69, 70, 71, 72, 79, 85, 87, 88, 90, 94, 97, 98, 102, 105, 124], "With": [9, 15, 16, 18, 29, 47, 61, 67, 71, 91, 98, 105, 115], "consid": [9, 15, 16, 18, 19, 22, 46, 47, 50, 70, 74, 85, 87, 96, 100, 105, 114, 118], "wherea": [9, 87], "stronger": 9, "landmark": [9, 87], "consist": [9, 15, 16, 18, 21, 24, 33, 48, 57, 58, 61, 70, 75, 81], "e_l": 9, "p": [9, 11, 24, 46, 47, 68, 71, 76, 79, 84, 88, 90, 100, 101, 105, 116, 118, 124], "barycentr": [9, 15, 16, 87, 102], "respect": [9, 15, 16, 19, 45, 52, 94, 97, 101], "q_": 9, "f_i": 9, "cdot": 9, "paper": [9, 87, 102], "decid": 9, "source_landmark": [9, 87], "tupl": [9, 15, 19, 20, 29, 75, 87, 89, 94, 95, 97, 98, 101, 103, 105, 119, 120, 125], "simultan": [9, 79], "fourth": [9, 63], "min": [9, 15, 16, 20, 29, 54, 57, 61, 69, 70, 71, 81, 85, 94, 97, 105], "limits_": 9, "w_ce_c": 9, "w_ie_i": 9, "w_se_": 9, "w_le_l": 9, "w_c": 9, "w_i": 9, "w_": 9, "w_l": 9, "factor": [9, 15, 16, 29, 56, 57, 70, 71, 93, 94, 97, 101, 104, 115, 116, 119, 120, 126], "linear": [9, 96, 101, 116], "vmatrix": 9, "bmatrix": 9, "_c": 9, "_l": 9, "y": [9, 15, 16, 19, 24, 29, 71, 95, 98, 101, 105, 109, 119, 120], "l": [9, 13, 74, 103, 125], "hand": [9, 15, 16, 21], "side": [9, 15, 16, 53, 59, 71, 81, 93, 94, 97, 102, 105, 116, 119, 120, 121], "lu": 9, "th": 9, "length": [9, 13, 15, 16, 24, 25, 29, 46, 47, 52, 57, 59, 61, 69, 70, 71, 72, 74, 79, 81, 82, 88, 93, 94, 95, 97, 101, 102, 105, 119, 120, 121, 122, 124, 125], "five": 9, "float": [9, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 36, 37, 39, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 112, 114, 115, 116, 118, 119, 120, 121, 124, 126], "wc_1": 9, "wi_1": 9, "ws_1": 9, "wl_1": 9, "wn_1": 9, "wc_n": 9, "wi_n": 9, "ws_n": 9, "wl_n": 9, "wn_n": 9, "w_n": 9, "noisi": [9, 87, 100], "incomplet": 9, "lead": [9, 15, 16, 79, 119, 120, 125], "bad": [9, 105], "remedi": 9, "issu": [9, 15, 16, 79], "greater": [9, 19, 25, 96, 116], "threshold": [9, 15, 16, 22, 69, 80, 82, 87, 105, 116], "distance_threshold": [9, 87], "multipli": [9, 22, 98, 101, 104, 105, 116], "second": [9, 19, 20, 71, 79, 101, 105, 122], "coincid": 9, "power": [9, 29, 46, 69, 89, 118], "eventu": [9, 24], "left": [9, 61, 98, 101, 121, 123], "ll": 9, "d_": 9, "max": [9, 15, 16, 29, 45, 46, 47, 54, 57, 61, 69, 70, 71, 81, 85, 94, 97, 105, 125], "_v": 9, "everywher": 9, "els": [9, 75, 87, 102, 105, 106, 125], "mention": 9, "abov": [9, 15, 16, 52, 69, 81, 103], "nbstep": 9, "notat": 9, "detail": [9, 23, 25, 29, 48, 52, 57, 70, 122], "unlik": [9, 15, 16, 46], "map": [9, 15, 16, 19, 87, 98, 105, 116, 122, 125], "express": 9, "homogen": [9, 15, 16, 18, 20, 45, 48, 57, 69, 70, 71, 74, 79, 80, 81, 89, 93, 94, 97, 98, 101, 119, 120, 126], "formul": 9, "gamma": [9, 87, 101], "skew": [9, 87, 94, 95], "_j": 9, "absenc": 9, "framework": 9, "rewritten": 9, "explain": [9, 87, 101], "link": 9, "subject": [9, 87], "yet": [9, 101], "outer": [9, 24], "inner": [9, 24, 101], "similar": [9, 101, 105], "until": [9, 15, 16, 19, 74, 79, 88], "converg": 9, "reach": [9, 82, 96], "As": [9, 96, 102], "dictat": 9, "max_iter_1": 9, "max_iter_n": 9, "last": [9, 19, 47, 61, 90, 98, 101, 105], "integ": [9, 24, 30, 46, 47, 58, 69, 71, 93, 103, 105, 114, 115, 122, 124, 125], "n_i": 9, "maximum": [9, 15, 16, 18, 22, 47, 52, 57, 59, 69, 70, 71, 74, 78, 79, 84, 87, 88, 89, 101, 116, 122, 125], "initi": [9, 15, 16, 20, 52, 79, 87, 91, 94, 95, 97, 101, 105, 109, 116, 126], "while": [9, 13, 56, 96, 125], "2_": 9, "epsilon": [9, 69, 101, 105], "contrast": 9, "onc": [9, 15, 18, 19, 47, 69, 94, 97, 105], "involv": 9, "implicitli": 9, "act": [9, 96], "cost": [9, 15, 16, 87, 121], "tend": [9, 87], "smoother": [9, 87], "frequenc": 9, "advis": 9, "paramet": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "suit": 9, "appear": [9, 15, 16, 19, 46, 47], "tune": [9, 15, 16, 21, 87], "found": [9, 87], "borrow": 9, "mickar": 9, "nonrigid_icp": 9, "saikiran321": 9, "1999": 9, "blanz": 9, "vetter": 9, "synthesi": 9, "Of": [9, 71, 98, 119, 120], "space": [9, 12, 15, 16, 18, 24, 25, 44, 53, 55, 57, 58, 59, 61, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 93, 94, 95, 96, 97, 101, 102, 105, 119, 120, 121, 124, 126], "human": 9, "reconstruct": [9, 15, 16, 47], "parameter": [9, 81], "scan": 9, "variou": [10, 28, 89, 118, 122, 125], "load_mesh": [10, 12, 15, 28, 34], "raw": [10, 29, 92], "intact": 10, "disabl": [10, 116], "divid": [10, 15, 16, 88, 101, 105], "7792407744466932": 10, "93059627e": 10, "00": 10, "43877613e": 10, "03": [10, 101], "49424850e": 10, "01": [10, 71, 74, 94, 95], "19191960e": 10, "25194047e": 10, "04": [10, 24], "62344872e": 10, "1722": 10, "3476": 10, "trackedarrai": [10, 15, 16, 19], "62419043": 10, "79810206": 10, "36072312": 10, "375": 10, "76196413": 10, "58366761": 10, "28061146": 10, "11113789": 10, "58587869": 10, "4366151": 10, "68272499": 10, "07835313": 10, "27596526": 10, "68461623": 10, "67464346": 10, "04469016": 10, "17": [10, 101], "187500000000018": 10, "76340387057889": 10, "95": 10, "89438997522063": 10, "ray_origin": [11, 84, 85], "ray_direct": [11, 84, 85], "docstr": 11, "intersects_loc": [11, 15, 83, 84, 85], "__doc__": 11, "hit": [11, 12, 15, 16, 57, 69, 70, 71, 84, 85], "nn": 11, "parametersn": 11, "floatn": 11, "raysn": 11, "direct": [11, 15, 16, 46, 47, 53, 57, 61, 68, 70, 71, 73, 74, 79, 81, 82, 84, 85, 90, 94, 95, 96, 97, 98, 101, 121], "raysnn": 11, "returnsn": 11, "sequenc": [11, 15, 16, 17, 19, 46, 47, 53, 70, 71, 76, 82, 84, 85, 94, 97, 98, 101, 103, 105, 125], "pointsn": 11, "index_rai": [11, 84, 85], "intn": 11, "rayn": 11, "index_tri": [11, 84, 85], "facesn": 11, "coordinatesloc": 11, "stack": [11, 71, 105], "segment": [11, 15, 22, 24, 25, 53, 57, 58, 60, 61, 63, 65, 66, 70, 71, 73, 75, 76, 81, 105], "path3d": [11, 13, 15, 16, 24, 33, 34, 57, 59, 65, 66, 70, 77, 81, 89, 94, 97], "ray_visu": 11, "load_path": [11, 13, 15, 57, 62, 65], "hstack": 11, "reshap": [11, 15, 95, 101, 119, 122], "unmerg": 11, "unmerge_vertic": [11, 15, 16], "white": [11, 13], "255": [11, 13, 29, 125], "demonstr": 12, "commonli": [12, 112, 114], "linestr": [12, 24, 66], "pylab": 12, "config": 12, "inlinebackend": 12, "figure_format": 12, "deprec": [12, 15, 16, 19, 46, 105], "popul": [12, 33], "namespac": [12, 15, 91], "filenam": [12, 15, 16, 32, 64, 79, 92], "plane_origin": [12, 15, 16, 53, 59, 79], "centroid": [12, 15, 16, 57, 70, 71, 79, 94, 97, 105], "plane_norm": [12, 15, 16, 53, 59, 68, 79], "path2d": [12, 15, 16, 33, 34, 57, 59, 63, 65, 66, 67, 69, 70, 72, 75, 76, 77, 89, 94, 97], "easili": [12, 27], "slice_2d": 12, "to_3d": [12, 15, 16, 53, 57, 70], "to_planar": [12, 15, 57, 70], "bunch": 12, "parallel": [12, 15, 16, 46, 48, 52, 53, 68, 79, 82, 101], "printer": 12, "section_multiplan": [12, 15, 16], "evenli": [12, 57, 59, 70, 71, 76, 93, 105], "chunk": [12, 63], "along": [12, 13, 15, 16, 19, 24, 45, 46, 48, 61, 71, 73, 74, 75, 76, 79, 81, 84, 101, 105, 122], "minz": [12, 29], "maxz": [12, 29], "z_extent": 12, "125": [12, 22], "eg": [12, 15, 16, 32, 34, 38, 47, 89, 94, 97, 98, 104, 105], "inch": [12, 15, 16, 94, 97, 104], "z_level": 12, "arang": [12, 76, 81], "304": 12, "entiti": [12, 15, 57, 63, 66, 70, 75, 76, 114], "9": [12, 15, 16, 19, 29, 41, 47, 52, 87, 101, 125], "636": 12, "616": 12, "610": 12, "739": 12, "547": 12, "735": 12, "18": 12, "186": 12, "put": [12, 15, 19, 33, 47, 61, 104], "combin": [12, 15, 16, 47, 87, 105, 116, 118], "local": [12, 15, 16, 19, 34, 91, 96], "lib": 12, "python3": 12, "site": [12, 55, 91], "predic": 12, "526": 12, "runtimewarn": 12, "invalid": [12, 29, 33, 56, 70], "encount": [12, 105], "polygons_ful": [12, 15, 57, 70], "class": [12, 15, 16, 19, 20, 22, 27, 29, 34, 45, 51, 56, 57, 58, 61, 69, 70, 76, 78, 79, 81, 82, 84, 85, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 109, 112, 113, 114, 116, 118, 119, 120, 122, 125, 126], "__class__": 12, "multilinestr": [12, 15, 65, 66], "red": [12, 112, 114], "green": [12, 112, 114], "ax": [12, 15, 16, 29, 48, 71, 87, 101, 122], "gca": 12, "h": [12, 52, 85, 100], "geom": 12, "medial": [12, 57, 70, 71], "medial_axi": [12, 15, 57, 70, 71], "travel": [13, 79], "search": [13, 15, 16, 18, 29, 46, 85, 87], "nx": [13, 15, 16, 46, 76], "edges_uniqu": [13, 15, 16], "actual": [13, 15, 16, 19, 27, 70, 99, 105, 126], "edges_unique_length": [13, 15, 16], "zip": [13, 15, 31, 41, 91, 105], "add_edg": [13, 15, 94, 98], "shortest_path": [13, 15, 94, 98], "path_visu": 13, "fuze": 14, "664": 14, "binvox": [15, 28, 119, 120], "rle_data": [15, 28, 29, 122, 125], "supported_input_typ": [15, 28, 29], "supported_output_typ": [15, 28, 29], "__init__": [15, 16, 19, 20, 22, 27, 28, 29, 31, 34, 49, 51, 57, 58, 61, 69, 70, 76, 78, 79, 81, 82, 83, 84, 85, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 107, 109, 112, 114, 116, 118, 119, 120, 122, 126], "file_typ": [15, 16, 28, 29, 30, 32, 34, 35, 56, 64, 65, 67, 70, 79, 94, 97, 105, 119, 120], "binvox_byt": [15, 28, 29], "binvox_head": [15, 28, 29], "export_binvox": [15, 28, 29], "load_binvox": [15, 28, 29], "parse_binvox": [15, 28, 29], "parse_binvox_head": [15, 28, 29], "voxel_from_binvox": [15, 28, 29], "voxelize_mesh": [15, 28, 29], "cascad": [15, 28, 52], "load_step": [15, 28, 30], "export_collada": [15, 28, 31], "load_collada": [15, 28, 31], "load_za": [15, 28, 31], "export_dict": [15, 28, 32, 57, 62, 64], "export_dict64": [15, 28, 32], "export_mesh": [15, 28, 32], "export_scen": [15, 28, 32], "scene_to_dict": [15, 28, 32], "export_glb": [15, 28, 33], "export_gltf": [15, 28, 33], "get_schema": [15, 28, 33, 92], "load_glb": [15, 28, 33], "load_gltf": [15, 28, 33], "available_format": [15, 28, 34], "load_compress": [15, 28, 34], "load_kwarg": [15, 28, 34, 36, 40], "mesh_format": [15, 28, 34], "misc": [15, 28, 29, 57, 62], "load_dict": [15, 28, 35], "load_meshio": [15, 28, 35], "export_obj": [15, 28, 36], "load_obj": [15, 28, 36], "parse_mtl": [15, 28, 36], "export_off": [15, 28, 37], "load_off": [15, 28, 37], "export_draco": [15, 28, 38], "export_pli": [15, 28, 38], "load_draco": [15, 28, 38], "load_pli": [15, 28, 38], "headererror": [15, 28, 39], "export_stl": [15, 28, 39], "export_stl_ascii": [15, 28, 39], "load_stl": [15, 28, 39], "load_stl_ascii": [15, 28, 39], "load_stl_binari": [15, 28, 39], "threedxml": [15, 28], "load_3dxml": [15, 28, 40], "print_el": [15, 28, 40], "threemf": [15, 28], "export_3mf": [15, 28, 41], "load_3mf": [15, 28, 41], "export_urdf": [15, 28, 42], "load_xaml": [15, 28, 43], "export_xyz": [15, 28, 44], "load_xyz": [15, 28, 44], "meshscript": [15, 49, 51], "load_gmsh": [15, 49, 52], "to_volum": [15, 49, 52], "bulge_to_arc": [15, 57, 62, 63], "convert_ent": [15, 57, 62, 63], "export_dxf": [15, 57, 62, 63], "get_kei": [15, 57, 62, 63], "load_dxf": [15, 57, 62, 63], "export_path": [15, 57, 62, 64], "path_format": [15, 57, 62, 65], "dict_to_path": [15, 57, 62, 66], "edges_to_path": [15, 57, 62, 66], "faces_to_path": [15, 57, 62, 66], "lines_to_path": [15, 57, 62, 66], "linestrings_to_path": [15, 57, 62, 66], "polygon_to_path": [15, 57, 62, 66], "svg_io": [15, 57, 62], "export_svg": [15, 57, 62, 67], "svg_to_path": [15, 57, 62, 67], "transform_to_matric": [15, 57, 62, 67], "arc": [15, 22, 57, 61, 63, 70, 75, 76, 101], "arcinfo": [15, 57, 58], "radiu": [15, 16, 18, 22, 24, 25, 46, 47, 48, 55, 57, 58, 59, 61, 71, 74, 75, 79, 81, 82, 93, 94, 96, 101, 121], "span": [15, 16, 22, 46, 57, 58, 59, 75], "arc_cent": [15, 57, 58], "discretize_arc": [15, 57, 58], "to_threepoint": [15, 57, 58], "box_outlin": [15, 57, 59], "circl": [15, 22, 23, 55, 57, 58, 59, 61, 70, 75, 81], "circle_pattern": [15, 57, 59], "binomi": [15, 57, 60], "discretize_bezi": [15, 57, 60], "discretize_bsplin": [15, 57, 60], "is_valid": [15, 57, 61, 94, 97], "bspline": [15, 57, 61, 70, 75], "to_dict": [15, 16, 57, 61, 70, 81], "bezier": [15, 57, 60, 61], "end_point": [15, 25, 57, 61], "explod": [15, 57, 61, 70, 71, 94, 97], "layer": [15, 57, 61, 63, 67, 70], "metadata": [15, 16, 56, 57, 61, 63, 70, 79, 81, 94, 97, 98, 104, 106, 119, 120, 126], "revers": [15, 16, 46, 57, 61, 76, 103, 105, 125], "line_lin": [15, 57, 68], "pack": [15, 57, 112, 114, 116], "rectanglebin": [15, 57, 69], "insert": [15, 19, 24, 52, 57, 63, 69, 90], "bounds_overlap": [15, 57, 69], "rectangles_singl": [15, 57, 69], "roll_transform": [15, 57, 69], "apply_lay": [15, 57, 70], "convert_unit": [15, 16, 57, 70, 94, 97], "dangl": [15, 57, 70], "fill_gap": [15, 57, 70, 73], "is_clos": [15, 57, 63, 70], "is_empti": [15, 16, 19, 56, 57, 70, 79, 94, 97, 119, 120, 122], "kdtree": [15, 16, 57, 70, 79], "merge_vertic": [15, 16, 47, 57, 70, 79], "referenced_vertic": [15, 16, 57, 70], "remove_duplicate_ent": [15, 57, 70], "remove_ent": [15, 57, 70], "remove_invalid": [15, 57, 70], "remove_unreferenced_vertic": [15, 16, 57, 70], "replace_vertex_refer": [15, 57, 70], "rezero": [15, 16, 57, 70, 94, 97], "vertex_graph": [15, 57, 70, 76], "vertex_nod": [15, 57, 70], "apply_obb": [15, 56, 57, 70], "apply_scal": [15, 56, 57, 70, 119, 126], "area": [15, 16, 19, 25, 46, 57, 70, 71, 78, 81, 93, 94, 97, 102, 105], "body_count": [15, 16, 57, 70], "connected_path": [15, 57, 70], "enclosur": [15, 57, 70], "enclosure_direct": [15, 57, 70], "enclosure_shel": [15, 57, 70], "extrud": [15, 24, 57, 70, 74, 81], "identifier_hash": [15, 16, 21, 57, 70], "obb": [15, 56, 57, 69, 70, 71, 81], "path_valid": [15, 57, 70], "plot_discret": [15, 57, 70], "plot_ent": [15, 57, 70], "polygons_clos": [15, 57, 70], "simplifi": [15, 16, 22, 57, 70], "simplify_splin": [15, 57, 70, 75], "edges_to_polygon": [15, 57, 71], "enclosure_tre": [15, 57, 71], "paths_to_polygon": [15, 57, 71], "polygon_bound": [15, 57, 71], "polygon_obb": [15, 57, 71], "polygon_scal": [15, 57, 71], "polygons_obb": [15, 57, 71], "random_polygon": [15, 57, 71], "repair_invalid": [15, 57, 71], "resample_boundari": [15, 57, 71], "second_mo": [15, 57, 71], "stack_boundari": [15, 57, 71], "transform_polygon": [15, 57, 71], "clean": [15, 57, 70, 74, 119, 120], "colinear_pair": [15, 57, 74], "parameters_to_seg": [15, 57, 74], "resampl": [15, 57, 74, 75, 76, 118], "segments_to_paramet": [15, 57, 74], "to_svg": [15, 57, 74], "fit_circle_check": [15, 57, 75], "is_circl": [15, 57, 75], "merge_colinear": [15, 57, 75], "points_to_spline_ent": [15, 57, 75], "resample_splin": [15, 57, 75], "simplify_bas": [15, 57, 75], "travers": [15, 46, 57, 79, 90, 98], "pathsampl": [15, 57, 76], "truncat": [15, 24, 57, 76, 101, 103], "closed_path": [15, 57, 76], "discretize_path": [15, 57, 76], "resample_path": [15, 57, 76], "vertex_to_entity_path": [15, 57, 76], "ray_pyembre": [15, 83], "raymeshintersector": [15, 83, 84, 85], "contains_point": [15, 83, 84, 85], "intersects_ani": [15, 83, 84, 85], "intersects_first": [15, 83, 84, 85], "intersects_id": [15, 83, 84, 85], "ray_triangl": [15, 83], "ray_bound": [15, 83, 85], "ray_triangle_candid": [15, 83, 85], "ray_triangle_id": [15, 83, 85], "ray_util": [15, 83], "resourc": [15, 16, 81, 91], "get_byt": [15, 92], "get_json": [15, 92], "get_stream": [15, 92], "get_str": [15, 92], "camera": [15, 24, 94, 97, 109], "k": [15, 79, 82, 88, 94, 95], "focal": [15, 94, 95], "fov": [15, 24, 94, 95, 97], "look_at": [15, 94, 95], "resolut": [15, 26, 57, 70, 71, 72, 89, 94, 95, 97, 121], "to_rai": [15, 94, 95], "camera_to_rai": [15, 94, 95], "ray_pixel_coord": [15, 94, 95], "directionallight": [15, 94, 96], "intens": [15, 94, 96], "pointlight": [15, 94, 96], "spotlight": [15, 94, 96], "innerconeangl": [15, 94, 96], "outerconeangl": [15, 94, 96], "autolight": [15, 94, 96], "add_geometri": [15, 94, 97], "bounds_corn": [15, 94, 97], "camera_rai": [15, 94, 97], "camera_transform": [15, 94, 95, 97], "dedupl": [15, 69, 94, 97, 116], "delete_geometri": [15, 94, 97], "dump": [15, 16, 29, 94, 97, 105], "duplicate_nod": [15, 94, 97], "geometry_identifi": [15, 94, 97], "has_camera": [15, 94, 97], "moment_inertia_fram": [15, 16, 94, 97], "save_imag": [15, 94, 97], "set_camera": [15, 94, 97], "strip_visu": [15, 94, 97], "subscen": [15, 94, 97], "triangles_nod": [15, 94, 97], "append_scen": [15, 94, 97], "split_scen": [15, 94, 97], "enforcedforest": [15, 94, 98], "children": [15, 94, 97, 98], "remove_nod": [15, 94, 98], "successor": [15, 94, 98], "scenegraph": [15, 94, 97, 98], "clear": [15, 16, 19, 79, 81, 94, 98], "from_edgelist": [15, 16, 94, 98], "geometry_nod": [15, 94, 98], "nodes_geometri": [15, 94, 98], "remove_geometri": [15, 94, 98], "to_edgelist": [15, 94, 98], "to_flatten": [15, 94, 98], "to_gltf": [15, 94, 98], "to_networkx": [15, 94, 98], "updat": [15, 16, 19, 70, 94, 97, 98, 101, 109], "kwargs_to_matrix": [15, 94, 98], "in_notebook": [15, 107, 108], "scene_to_html": [15, 107, 108], "scene_to_notebook": [15, 107, 108], "trackbal": [15, 101, 107], "state_pan": [15, 107, 109], "state_rol": [15, 107, 109], "state_rot": [15, 107, 109], "state_zoom": [15, 107, 109], "down": [15, 101, 107, 109, 122], "pose": [15, 16, 107, 109], "resiz": [15, 107, 109, 118], "scroll": [15, 107, 109], "set_stat": [15, 107, 109], "update_fac": [15, 16, 112, 113, 114, 118], "update_vertic": [15, 16, 112, 113, 114, 118], "colorvisu": [15, 16, 81, 94, 97, 112, 114, 117, 118], "face_subset": [15, 112, 114, 118], "main_color": [15, 112, 114, 116], "to_textur": [15, 112, 114], "transpar": [15, 112, 114, 116], "vertex_color": [15, 16, 112, 114, 117], "vertexcolor": [15, 112, 114], "color_to_uv": [15, 112, 114], "colors_to_materi": [15, 112, 114], "face_to_vertex_color": [15, 112, 114], "hex_to_rgba": [15, 112, 114], "linear_color_map": [15, 112, 114], "to_float": [15, 112, 114], "to_rgba": [15, 112, 114], "uv_to_color": [15, 112, 114], "uv_to_interpolated_color": [15, 112, 114], "vertex_to_face_color": [15, 112, 114], "gloss": [15, 112], "specular_to_pbr": [15, 112, 115], "multimateri": [15, 112, 116], "to_pbr": [15, 112, 116], "pbrmateri": [15, 112, 115, 116], "alphacutoff": [15, 112, 116], "alphamod": [15, 112, 116], "basecolorfactor": [15, 112, 115, 116], "basecolortextur": [15, 112, 115, 116], "doublesid": [15, 112, 116], "emissivefactor": [15, 112, 116], "emissivetextur": [15, 112, 116], "metallicfactor": [15, 112, 115, 116], "metallicroughnesstextur": [15, 112, 115, 116], "normaltextur": [15, 112, 116], "occlusiontextur": [15, 112, 116], "roughnessfactor": [15, 112, 115, 116], "to_color": [15, 112, 116, 118], "to_simpl": [15, 112, 116], "simplemateri": [15, 112, 114, 116, 118], "glossi": [15, 112, 115, 116], "to_obj": [15, 112, 116], "color_imag": [15, 112, 116], "empty_materi": [15, 112, 116], "create_visu": [15, 112, 117], "texturevisu": [15, 16, 81, 112, 114, 117, 118], "power_res": [15, 69, 112, 118], "unmerge_fac": [15, 112, 118], "voxelgrid": [15, 16, 29, 119, 120, 121], "as_box": [15, 119, 120], "element_volum": [15, 119, 120], "filled_count": [15, 119, 120], "hollow": [15, 119, 120], "indices_to_point": [15, 119, 120, 124], "is_fil": [15, 105, 119, 120], "marching_cub": [15, 119, 120, 124], "pitch": [15, 16, 57, 70, 72, 101, 119, 120, 121, 124, 126], "points_to_indic": [15, 119, 120, 124], "revoxel": [15, 119, 120], "sparse_indic": [15, 119, 120, 122, 124], "strip": [15, 94, 97, 105, 119, 120, 122, 125], "local_voxel": [15, 119, 121], "binaryrunlengthencod": [15, 119, 122], "binary_run_length_data": [15, 119, 122], "from_brl": [15, 119, 122], "from_dens": [15, 119, 122], "from_rl": [15, 119, 122], "gather": [15, 119, 122, 125], "gather_nd": [15, 119, 122], "mask": [15, 16, 53, 70, 79, 105, 112, 113, 114, 116, 118, 119, 122, 125], "run_length_data": [15, 119, 122], "sorted_gath": [15, 119, 122], "sparse_compon": [15, 119, 122], "sparse_valu": [15, 119, 122], "denseencod": [15, 119, 122], "flat": [15, 16, 19, 29, 71, 89, 98, 101, 105, 119, 122], "get_valu": [15, 119, 122], "flip": [15, 90, 101, 119, 122], "mutabl": [15, 16, 19, 81, 100, 119, 122], "ndim": [15, 101, 119, 122], "transpos": [15, 101, 119, 122], "flattenedencod": [15, 119, 122], "flippedencod": [15, 119, 122], "lazyindexmap": [15, 119, 122], "runlengthencod": [15, 29, 119, 122], "shapedencod": [15, 119, 122], "sparsebinaryencod": [15, 119, 122], "sparseencod": [15, 119, 122], "transposedencod": [15, 119, 122], "perm": [15, 119, 122], "morphologi": [15, 105, 119, 120], "binary_clos": [15, 119, 123], "binary_dil": [15, 119, 123], "boolean_spars": [15, 119, 124], "fill_bas": [15, 119, 124], "fill_orthograph": [15, 119, 124], "fill_voxel": [15, 119, 124], "matrix_to_marching_cub": [15, 119, 124], "matrix_to_point": [15, 119, 124], "multibox": [15, 119, 124], "points_to_marching_cub": [15, 119, 124], "sparse_to_matrix": [15, 119, 124], "strip_arrai": [15, 119, 124], "runlength": [15, 119, 122], "brle_gather_1d": [15, 119, 125], "brle_gatherer_1d": [15, 119, 125], "brle_length": [15, 119, 125], "brle_logical_not": [15, 119, 125], "brle_mask": [15, 119, 125], "brle_revers": [15, 119, 125], "brle_strip": [15, 119, 125], "brle_to_brl": [15, 119, 125], "brle_to_dens": [15, 119, 125], "brle_to_rl": [15, 119, 125], "brle_to_spars": [15, 119, 125], "dense_to_brl": [15, 119, 125], "dense_to_rl": [15, 119, 125], "merge_brle_length": [15, 119, 125], "merge_rle_length": [15, 119, 125], "rle_gather_1d": [15, 119, 125], "rle_gatherer_1d": [15, 119, 125], "rle_length": [15, 119, 125], "rle_mask": [15, 119, 125], "rle_revers": [15, 119, 125], "rle_strip": [15, 119, 125], "rle_to_brl": [15, 119, 125], "rle_to_dens": [15, 119, 125], "rle_to_rl": [15, 119, 125], "rle_to_spars": [15, 119, 125], "sorted_brle_gather_1d": [15, 119, 125], "sorted_rle_gather_1d": [15, 119, 125], "split_long_brle_length": [15, 119, 125], "split_long_rle_length": [15, 119, 125], "apply_transl": [15, 56, 119, 126], "inverse_matrix": [15, 101, 119, 126], "inverse_transform_point": [15, 119, 126], "is_ident": [15, 119, 126], "transform_point": [15, 101, 119, 126], "unit_volum": [15, 119, 126], "area_fac": [15, 16], "as_open3d": [15, 16], "compute_stable_pos": [15, 16, 80], "convex_decomposit": [15, 16, 26], "densiti": [15, 16, 69, 80, 102], "edges_fac": [15, 16], "edges_sort": [15, 16, 46], "edges_sorted_tre": [15, 16], "edges_spars": [15, 16], "edges_unique_invers": [15, 16], "eval_cach": [15, 16], "face_adjac": [15, 16, 23, 46], "face_adjacency_angl": [15, 16], "face_adjacency_convex": [15, 16], "face_adjacency_edg": [15, 16], "face_adjacency_edges_tre": [15, 16], "face_adjacency_project": [15, 16], "face_adjacency_radiu": [15, 16, 46], "face_adjacency_span": [15, 16], "face_adjacency_tre": [15, 16], "face_adjacency_unshar": [15, 16, 46], "face_angl": [15, 16, 45], "face_angles_spars": [15, 16, 25], "face_neighborhood": [15, 16, 46], "face_norm": [15, 16, 35, 39, 45, 81], "faces_spars": [15, 16, 45, 46], "faces_unique_edg": [15, 16], "facets_area": [15, 16], "facets_boundari": [15, 16], "facets_norm": [15, 16], "facets_on_hul": [15, 16], "facets_origin": [15, 16], "fill_hol": [15, 16, 90], "fix_norm": [15, 16, 90], "integral_mean_curvatur": [15, 16], "invert": [15, 16, 90, 101], "is_convex": [15, 16, 23], "is_volum": [15, 16], "is_winding_consist": [15, 16], "mass_properti": [15, 16, 102], "nondegenerate_fac": [15, 16], "outlin": [15, 16, 23, 57, 59, 66, 70, 71, 72, 81], "principal_inertia_compon": [15, 16], "principal_inertia_transform": [15, 16], "principal_inertia_vector": [15, 16], "remove_degenerate_fac": [15, 16], "remove_duplicate_fac": [15, 16], "remove_infinite_valu": [15, 16], "simplify_quadratic_decim": [15, 16], "simplify_quadric_decim": [15, 16], "slice_plan": [15, 16], "smooth_shad": [15, 16, 46], "subdivide_loop": [15, 16, 88], "subdivide_to_s": [15, 16, 88], "submesh": [15, 16, 105], "symmetri": [15, 16, 48, 101], "symmetry_axi": [15, 16], "symmetry_sect": [15, 16], "triangles_cent": [15, 16], "triangles_cross": [15, 16], "triangles_tre": [15, 16], "unique_fac": [15, 16], "vertex_adjacency_graph": [15, 16, 46], "vertex_defect": [15, 16, 25], "vertex_degre": [15, 16], "vertex_fac": [15, 16, 45], "vertex_neighbor": [15, 16], "vertex_norm": [15, 16, 35, 38, 45, 81, 100], "boolean_manifold": [15, 17], "corner": [15, 18, 24, 45, 76, 94, 97], "minimum_cylind": [15, 18], "oriented_bound": [15, 18, 56], "oriented_bounds_2d": [15, 18], "to_ext": [15, 18], "delet": [15, 19, 20, 94, 97, 98], "id_set": [15, 19], "datastor": [15, 19, 126], "diskcach": [15, 19], "byteswap": [15, 19], "itemset": [15, 19], "partit": [15, 19, 69, 101], "setflag": [15, 19], "sort": [15, 16, 19, 46, 54, 79, 80, 125], "cache_decor": [15, 19], "hash_fallback": [15, 19], "sha256": [15, 16, 19, 21, 57, 70], "tracked_arrai": [15, 19], "collisionmanag": [15, 20], "add_object": [15, 20], "in_collision_intern": [15, 20], "in_collision_oth": [15, 20], "in_collision_singl": [15, 20], "min_distance_intern": [15, 20], "min_distance_oth": [15, 20], "min_distance_singl": [15, 20], "remove_object": [15, 20], "set_transform": [15, 20], "contactdata": [15, 20], "depth": [15, 20, 46, 101, 105], "distancedata": [15, 20], "mesh_to_bvh": [15, 20], "mesh_to_convex": [15, 20], "scene_to_collis": [15, 20], "comparison": [15, 61, 87], "identifier_simpl": [15, 21], "constant": [15, 76, 100], "resolutionpath": [15, 22], "max_sect": [15, 22], "min_sect": [15, 22], "seg_angl": [15, 22, 75], "seg_frac": [15, 22, 75], "tolerancemesh": [15, 22], "facet_threshold": [15, 22], "strict": [15, 22, 98], "zero": [15, 16, 22, 25, 45, 46, 47, 54, 71, 73, 74, 75, 81, 85, 96, 98, 102, 105, 119, 120, 122, 125], "tolerancepath": [15, 22], "aspect_frac": [15, 22], "radius_frac": [15, 22, 75], "radius_max": [15, 22, 75], "radius_min": [15, 22, 75], "seg_angle_frac": [15, 22], "seg_angle_min": [15, 22], "tangent": [15, 22, 63, 75, 82], "log_tim": [15, 22], "adjacency_project": [15, 23], "hull_point": [15, 23], "annulu": [15, 24], "camera_mark": [15, 24], "capsul": [15, 24, 81], "cone": [15, 24, 96], "extrude_polygon": [15, 24], "extrude_triangul": [15, 24], "icosahedron": [15, 24], "random_soup": [15, 24], "revolv": [15, 16, 24, 109], "sweep_polygon": [15, 24], "toru": [15, 24], "triangulate_polygon": [15, 24, 53, 57, 70], "truncated_pr": [15, 24], "uv_spher": [15, 24], "line_ball_intersect": [15, 25], "exceptionwrapp": [15, 27], "align_vector": [15, 45], "faces_to_edg": [15, 45], "index_spars": [15, 45], "mean_vertex_norm": [15, 45], "plane_transform": [15, 45], "triangulate_quad": [15, 45], "vector_angl": [15, 45], "vertex_face_indic": [15, 45], "weighted_vertex_norm": [15, 45], "connected_component_label": [15, 46], "connected_compon": [15, 16, 46], "edges_to_coo": [15, 46], "fill_travers": [15, 46], "graph_to_svg": [15, 46], "multigraph_collect": [15, 46], "multigraph_path": [15, 46], "neighbor": [15, 16, 46, 87, 88, 100], "shared_edg": [15, 46], "split_travers": [15, 46], "boolean_row": [15, 47], "cluster": [15, 47, 79], "float_to_int": [15, 47], "group_dist": [15, 47], "group_min": [15, 47], "group_row": [15, 47], "group_vector": [15, 47], "hashable_row": [15, 46, 47], "merge_run": [15, 47], "unique_bincount": [15, 47], "unique_float": [15, 47], "unique_ord": [15, 47], "unique_row": [15, 47], "unique_value_in_row": [15, 47], "cylinder_inertia": [15, 48], "principal_axi": [15, 48], "radial_symmetri": [15, 48], "scene_inertia": [15, 48], "sphere_inertia": [15, 48], "transform_inertia": [15, 48], "mesh_multiplan": [15, 53], "mesh_plan": [15, 53], "plane_lin": [15, 53], "planes_lin": [15, 53], "slice_faces_plan": [15, 53], "slice_mesh_plan": [15, 53], "interv": [15, 69, 101], "nsphere": 15, "fit_nspher": [15, 55], "is_nspher": [15, 55], "minimum_nspher": [15, 55], "geometry3d": [15, 16, 56, 79, 94, 97], "bounding_primit": [15, 56], "permut": [15, 91], "nois": [15, 78], "k_mean": [15, 79], "major_axi": [15, 79], "plane_fit": [15, 79], "plot_point": [15, 79], "point_plane_dist": [15, 79], "project_to_plan": [15, 79], "radial_sort": [15, 79], "remove_clos": [15, 79], "tsp": [15, 79], "as_outlin": [15, 81], "is_ori": [15, 81], "sample_grid": [15, 81], "slide": [15, 81], "to_mesh": [15, 81], "primitiveattribut": [15, 81], "proxim": [15, 79, 87, 121], "nearestqueryresult": [15, 79, 82], "has_norm": [15, 82], "proximityqueri": [15, 82], "signed_dist": [15, 82], "closest_point_na": [15, 82], "longest_rai": [15, 82], "max_tangent_spher": [15, 82], "nearby_fac": [15, 82], "thick": [15, 82], "registr": 15, "mesh_oth": [15, 87], "nricp_amberg": [15, 87], "nricp_sumn": [15, 87], "procrust": [15, 87], "remesh": [15, 78], "colors_to_gl": [15, 89], "convert_to_vertexlist": [15, 89], "light_to_gl": [15, 89], "material_to_textur": [15, 89], "matrix_to_gl": [15, 89], "mesh_to_vertexlist": [15, 89], "path_to_vertexlist": [15, 89], "points_to_vertexlist": [15, 89], "vector_to_gl": [15, 89], "broken_fac": [15, 90], "fix_invers": [15, 90], "fix_wind": [15, 90], "stitch": [15, 90], "resolv": [15, 29, 31, 32, 33, 34, 36, 38, 92, 99], "filepathresolv": [15, 91], "kei": [15, 16, 18, 19, 35, 36, 39, 46, 61, 63, 66, 71, 91, 94, 97, 98, 99, 101, 102, 104, 105, 112, 114, 119, 120], "githubresolv": [15, 91], "webresolv": [15, 91], "zipresolv": [15, 91], "nearby_nam": [15, 91], "sample_surfac": [15, 93], "sample_surface_even": [15, 93], "sample_surface_spher": [15, 93], "volume_mesh": [15, 93], "volume_rectangular": [15, 93], "schema": [15, 16, 33, 81, 92], "dilate_slop": [15, 100], "filter_humphrei": [15, 100], "filter_laplacian": [15, 100], "filter_mut_dif_laplacian": [15, 100], "filter_taubin": [15, 100], "get_vertices_norm": [15, 100], "laplacian_calcul": [15, 100], "arcbal": [15, 101], "constrain": [15, 101], "place": [15, 16, 19, 33, 47, 57, 61, 69, 70, 76, 78, 79, 80, 90, 94, 97, 100, 101, 105, 119, 120, 126], "setax": [15, 101], "affine_matrix_from_point": [15, 101], "angle_between_vector": [15, 101], "arcball_constrain_to_axi": [15, 101], "arcball_map_to_spher": [15, 101], "arcball_nearest_axi": [15, 101], "clip_matrix": [15, 101], "compose_matrix": [15, 101], "concatenate_matric": [15, 101], "decompose_matrix": [15, 101], "euler_from_matrix": [15, 101], "euler_from_quaternion": [15, 101], "euler_matrix": [15, 101], "fix_rigid": [15, 101], "flips_wind": [15, 101], "identity_matrix": [15, 101], "is_rigid": [15, 101], "is_same_quaternion": [15, 101], "is_same_transform": [15, 101], "orthogonalization_matrix": [15, 101], "planar_matrix": [15, 101], "planar_matrix_to_3d": [15, 101], "projection_from_matrix": [15, 101], "projection_matrix": [15, 101], "quaternion_about_axi": [15, 101], "quaternion_conjug": [15, 101], "quaternion_from_eul": [15, 101], "quaternion_from_matrix": [15, 101], "quaternion_imag": [15, 101], "quaternion_invers": [15, 101], "quaternion_matrix": [15, 101], "quaternion_multipli": [15, 101], "quaternion_r": [15, 101], "quaternion_slerp": [15, 101], "random_quaternion": [15, 101], "random_vector": [15, 101], "reflection_from_matrix": [15, 101], "reflection_matrix": [15, 101], "rotation_from_matrix": [15, 101], "rotation_matrix": [15, 101], "scale_and_transl": [15, 101], "scale_from_matrix": [15, 101], "scale_matrix": [15, 101], "shear_from_matrix": [15, 101], "shear_matrix": [15, 101], "spherical_matrix": [15, 101], "superimposition_matrix": [15, 101], "transform_around": [15, 101], "translation_from_matrix": [15, 101], "translation_matrix": [15, 101], "unit_vector": [15, 101], "vector_norm": [15, 101], "vector_product": [15, 101], "massproperti": [15, 16, 102], "all_coplanar": [15, 102], "any_coplanar": [15, 102], "barycentric_to_point": [15, 102], "bounds_tre": [15, 102, 105], "nondegener": [15, 16, 102], "points_to_barycentr": [15, 102], "to_kwarg": [15, 102], "windings_align": [15, 102], "binaryio": [15, 30, 34, 92, 103], "dict": [15, 16, 18, 19, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 53, 56, 57, 61, 63, 64, 65, 66, 67, 69, 70, 71, 79, 81, 87, 88, 91, 92, 94, 97, 98, 102, 103, 105, 115, 116, 119, 120], "io": [15, 34, 92, 103, 105, 116], "fileno": [15, 103], "flush": [15, 103], "isatti": [15, 103], "readabl": [15, 103], "readlin": [15, 103], "seekabl": [15, 103], "tell": [15, 103], "writabl": [15, 36, 103], "writelin": [15, 103], "as_integer_ratio": [15, 103], "is_integ": [15, 103], "int64": [15, 16, 45, 46, 81, 94, 97, 103, 122, 125], "bit_count": [15, 103], "to_inch": [15, 104], "unit_convers": [15, 104], "units_from_metadata": [15, 104], "functionregistri": [15, 105], "allclos": [15, 101, 105], "append_fac": [15, 105], "array_to_encod": [15, 35, 105], "array_to_str": [15, 105], "comment_strip": [15, 105], "compress": [15, 34, 38, 41, 91, 105], "convert_lik": [15, 105], "decimal_to_digit": [15, 105], "decode_kei": [15, 105], "decode_text": [15, 105], "decompress": [15, 91, 105], "diagonal_dot": [15, 105], "distance_to_end": [15, 105], "encoded_to_arrai": [15, 35, 105], "euclidean": [15, 20, 79, 101, 105], "generate_basi": [15, 105], "grid_arang": [15, 105], "grid_linspac": [15, 105], "has_modul": [15, 105], "is_binary_fil": [15, 105], "is_ccw": [15, 105], "is_instance_nam": [15, 105], "is_non": [15, 105], "is_pathlib": [15, 105], "is_sequ": [15, 105], "is_shap": [15, 105], "is_str": [15, 105], "isclos": [15, 105], "jsonifi": [15, 105], "make_sequ": [15, 105], "multi_dict": [15, 105], "pairwis": [15, 20, 105], "row_norm": [15, 105], "sigfig_int": [15, 105], "sigfig_round": [15, 105], "spherical_to_vector": [15, 105], "split_extens": [15, 105], "stack_3d": [15, 105], "stack_lin": [15, 105], "structured_array_to_str": [15, 105], "to_ascii": [15, 105], "tolist": [15, 105], "triangle_fans_to_fac": [15, 105], "triangle_strips_to_fac": [15, 105], "type_bas": [15, 105], "type_nam": [15, 105], "unique_id": [15, 105], "unique_nam": [15, 105], "vector_hemispher": [15, 105], "vector_to_spher": [15, 105], "vstack_empti": [15, 105], "wrap_as_stream": [15, 105], "write_encod": [15, 105], "zero_pad": [15, 105], "fulli": [15, 57, 70, 79, 116], "hold": [15, 20, 22, 47, 57, 70, 79, 81, 85, 96, 98, 114, 116, 117], "about": [15, 16, 18, 19, 20, 22, 48, 61, 69, 70, 79, 81, 94, 96, 97, 98, 101, 109, 112, 114], "verteex": [15, 79], "self": [15, 16, 19, 25, 46, 50, 57, 61, 70, 79, 81, 94, 95, 97, 98, 112, 114, 119, 120, 126], "safe": [15, 16, 79, 94, 95], "empti": [15, 16, 19, 29, 70, 79, 81, 94, 97, 101, 105, 116, 119, 120, 121, 123], "regener": [15, 16, 79, 81], "file_obj": [15, 16, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 56, 63, 64, 65, 67, 70, 79, 94, 97, 105, 119, 120], "written": [15, 16, 19, 61, 79, 105], "param": [15, 26, 79, 100], "Not": [15, 16, 67, 69, 79], "observ": [15, 16, 79], "segfault": [15, 16, 79], "closer": [15, 22, 47, 79], "tol": [15, 16, 22, 38, 47, 75, 79, 82], "1e": [15, 16, 18, 22, 38, 69, 71, 74, 79, 82, 85, 87, 98, 101, 105], "input_point": [15, 79], "query_from_point": [15, 79], "ndarrai": [15, 16, 19, 45, 46, 47, 54, 57, 58, 70, 71, 74, 81, 93, 94, 97, 101, 102, 105, 116, 122], "base_fram": [15, 94, 97, 98], "_scalartype_co": [15, 16, 45, 47, 57, 70, 71, 94, 97], "endpoint": [15, 24, 53, 61, 63, 70, 74, 76, 94, 97, 125], "raytrac": [15, 16, 81, 84, 94, 97], "node_nam": [15, 94, 97], "geom_nam": [15, 94, 97], "parent_node_nam": [15, 94, 97], "transformforest": [15, 94, 97, 98], "null": [15, 94, 97], "overal": [15, 58, 61, 75, 76, 88, 94, 97], "post": [15, 33, 48, 94, 97], "aabb": [15, 18, 24, 56, 61, 69, 70, 71, 85, 94, 97], "manual": [15, 75, 87, 94, 97], "ab": [15, 94, 97], "pixel": [15, 57, 70, 72, 94, 95, 97, 109, 112, 116, 118], "desir": [15, 16, 24, 70, 71, 75, 94, 97, 104, 105], "convert": [15, 16, 18, 29, 39, 41, 42, 46, 52, 57, 58, 63, 67, 69, 70, 74, 75, 76, 89, 94, 97, 101, 102, 105, 107, 108, 112, 114, 115, 116, 118, 119, 120, 124, 125], "them": [15, 16, 19, 42, 45, 46, 47, 53, 54, 57, 58, 66, 70, 71, 73, 74, 76, 81, 94, 97, 98, 105, 116, 122, 124], "mm": [15, 29, 94, 97, 104], "whole": [15, 94, 97], "discard": [15, 16, 71, 94, 97], "dedup": [15, 94, 97], "One": [15, 65, 82, 94, 95, 97, 101, 102, 109, 112, 114, 116], "hashabl": [15, 19, 46, 47, 61, 91, 94, 97, 98, 119, 120], "freez": [15, 94, 97], "drop": [15, 16, 80, 94, 97], "Will": [15, 16, 33, 87, 88, 90, 94, 95, 97, 100, 105], "repeat": [15, 47, 61, 94, 97, 125], "around": [15, 16, 24, 29, 48, 79, 81, 94, 97, 101, 109, 121, 122, 123], "radial": [15, 16, 24, 48, 79, 94, 97], "spheric": [15, 16, 48, 94, 95, 97, 101, 105], "snapshot": [15, 32, 94, 97], "ie": [15, 32, 46, 47, 57, 65, 70, 74, 94, 97, 124], "dict64": [15, 16, 32, 94, 97], "byte": [15, 16, 19, 24, 29, 32, 33, 36, 38, 39, 41, 47, 52, 54, 57, 58, 64, 70, 74, 91, 92, 93, 94, 97, 103, 105, 115, 116, 119, 120], "anyth": [15, 56, 94, 97, 98, 102, 124], "noth": [15, 94, 97, 114], "cartesian": [15, 16, 23, 53, 81, 85, 94, 97, 101, 102, 105, 126], "tensor": [15, 16, 48, 81, 94, 97], "png": [15, 94, 97], "sceneview": [15, 94, 97], "_supportsarrai": [15, 16, 24, 47, 54, 57, 58, 70, 74, 93, 94, 97, 115], "_nestedsequ": [15, 16, 24, 47, 54, 57, 58, 70, 74, 93, 94, 97, 115], "complex": [15, 16, 19, 24, 47, 54, 57, 58, 70, 74, 93, 94, 97, 115], "sane": [15, 94, 97, 114], "roughli": [15, 24, 38, 47, 87, 94, 97, 102, 105], "radian": [15, 24, 45, 46, 47, 58, 61, 74, 94, 95, 96, 97, 98, 101, 102, 105, 109], "callabl": [15, 33, 94, 97, 105], "turn": [15, 19, 46, 47, 66, 70, 71, 72, 73, 74, 76, 94, 97, 105, 114, 124], "shade": [15, 16, 33, 46, 89, 94, 97], "succe": [15, 94, 97, 98], "partial": [15, 19, 33, 94, 97], "correctli": [15, 93, 94, 97, 105], "triangles_index": [15, 94, 97], "mix": [15, 34, 45, 94, 97], "face_attribut": [15, 16], "vertex_attribut": [15, 16, 88, 112, 118], "merge_tex": [15, 16, 47], "merge_norm": [15, 16, 47], "use_embre": [15, 16, 81], "initial_cach": [15, 16, 81], "inf": [15, 16, 46, 47, 81], "immedi": [15, 16, 57, 70, 71, 81], "alter": [15, 16, 19, 70, 78, 81, 90, 101, 105, 114, 118], "ensur": [15, 16, 34, 81, 105, 109], "pyembre": [15, 16, 81], "fall": [15, 16, 81], "back": [15, 16, 53, 57, 70, 71, 81, 101, 105, 120], "slower": [15, 16, 22, 81, 101, 102], "expens": [15, 16, 17, 19, 81], "were": [15, 16, 61, 69, 79, 81, 105, 118], "assign": [15, 16, 19, 46, 81, 87, 88, 90], "bookkeep": [15, 16], "recomput": [15, 16, 53], "open3d": [15, 16], "trianglemesh": [15, 16], "averag": [15, 16, 87, 116], "sigma": [15, 16, 80], "n_sampl": [15, 16, 80], "quasi": [15, 16, 80], "multivari": [15, 16, 80], "rest": [15, 16, 29, 80], "workspac": [15, 16, 80], "onto": [15, 16, 23, 45, 46, 57, 69, 70, 71, 79, 80, 87, 101], "tabl": [15, 16, 80], "randomli": [15, 16, 78, 80, 93], "4x4": [15, 16, 80, 101, 119, 120, 126], "against": [15, 16, 20, 33, 48, 80, 87], "upward": [15, 16, 80], "assum": [15, 16, 29, 61, 79, 80, 96, 101, 103, 105, 124, 125], "uniform": [15, 16, 80, 90, 101, 119, 120], "covari": [15, 16, 80], "touch": [15, 16, 61, 80], "prob": [15, 16, 80], "bool_": [15, 16], "whether": [15, 16, 19, 46, 48, 50, 53, 57, 61, 68, 69, 70, 81, 82, 84, 85, 87, 105, 116], "pyvhacd": [15, 16], "keyword": [15, 16, 19, 26, 30, 36, 38, 66, 71, 98, 102, 112, 117], "include_cach": [15, 16], "By": [15, 16, 56, 101], "never": [15, 16, 19], "shallow": [15, 16], "check_volum": [15, 16, 17], "backend": [15, 16, 17, 46], "ignor": [15, 16, 17, 31, 47, 48, 67, 71, 96, 105, 115, 116], "belong": [15, 16, 79, 96], "coo_matrix": [15, 16, 25, 45, 46, 100], "coo": [15, 16, 45, 46, 100], "invers": [15, 16, 47, 96, 98, 100, 101, 125, 126], "reproduc": [15, 16], "referenc": [15, 16, 19, 31, 32, 34, 36, 47, 57, 61, 63, 66, 70, 81, 90, 91, 92, 98, 99, 118], "long": [15, 16, 22, 103, 125], "characterist": [15, 16], "topolog": [15, 16], "order": [15, 16, 18, 19, 20, 24, 29, 46, 47, 54, 56, 58, 60, 63, 69, 76, 79, 98, 105, 109, 112, 114, 125], "correct": [15, 16, 23, 47, 87, 90, 96], "after": [15, 16, 24, 69, 81, 105, 119, 120], "arg": [15, 16, 19, 29, 34, 38, 40, 43, 46, 61, 71, 87, 89, 91, 101, 103, 112, 114, 115, 116, 117, 118, 119, 120], "eval": [15, 16, 104], "msgpack": [15, 16], "writeabl": [15, 16, 19, 29], "file_nam": [15, 16, 28, 52, 105], "pair": [15, 16, 18, 19, 20, 45, 46, 52, 54, 73, 74, 87, 93, 95, 103, 105, 125], "1112": [15, 16], "949": [15, 16], "3467": [15, 16], "3475": [15, 16], "1113": [15, 16], "408": [15, 16], "1239": [15, 16], "adjacency_angl": [15, 16], "neg": [15, 16, 25, 47, 61, 63, 82, 105], "are_convex": [15, 16], "perpendicular": [15, 16, 46, 79, 101], "rectangular": [15, 16, 69, 93], "cell": [15, 16, 101, 119, 120, 124], "vid_unshar": [15, 16, 46], "neighborhood": [15, 16, 46], "magnitud": [15, 16, 24, 56, 58, 78, 81, 105], "regard": [15, 16, 81], "cannot": [15, 16, 19, 81], "_data": [15, 16, 81], "unique_edg": [15, 16], "6946": [15, 16], "24224": [15, 16], "1727": [15, 16], "24225": [15, 16], "total": [15, 16, 46, 57, 61, 70, 79], "boundari": [15, 16, 29, 52, 57, 70, 71, 88, 90], "edges_boundari": [15, 16], "on_hul": [15, 16], "multibodi": [15, 16, 90], "outward": [15, 16, 23, 24], "wound": [15, 16], "across": [15, 16, 55], "pick": [15, 16, 18, 69, 87, 93, 101], "hex": [15, 16, 19, 114], "sigfig": [15, 16, 105], "integr": [15, 16, 29, 103], "negat": [15, 16], "column": [15, 16, 44, 45, 89, 90, 101, 105, 122, 124, 125], "opposit": [15, 16, 90], "garbag": [15, 16], "global": [15, 16, 121], "again": [15, 16, 53, 120], "conveni": [15, 16, 78, 122], "taken": [15, 16], "digits_vertex": [15, 16, 47], "digits_norm": [15, 16, 47], "digits_uv": [15, 16, 47], "regardless": [15, 16, 47], "digit": [15, 16, 36, 37, 47, 67, 70, 74, 105], "versu": [15, 16], "ey": [15, 16, 126], "theorum": [15, 16, 48], "08": [15, 16, 22, 69, 101, 105], "shorter": [15, 16, 70, 79, 88], "face_id": [15, 16, 66], "those": [15, 16, 19, 56, 57, 70, 88, 101, 119, 120], "attempt": [15, 16, 23, 29, 46, 70, 71, 79, 98, 105], "extract": [15, 16, 23, 35, 61, 71, 101, 104], "pattern": [15, 16, 59, 71], "pad": [15, 16, 45, 71, 85, 95, 105, 116, 122, 125], "proport": [15, 16, 71], "de": [15, 16, 18, 71, 100, 101], "gap": [15, 16, 71], "tol_dot": [15, 16, 71], "toler": [15, 16, 22, 47, 71, 74, 76], "max_region": [15, 16, 71], "region": [15, 16, 25, 57, 69, 70, 71, 72, 73, 121], "refin": [15, 16, 87], "icp_first": [15, 16, 87], "icp_fin": [15, 16, 87], "itert": [15, 16], "candid": [15, 16, 82, 85, 87], "wider": [15, 16, 87], "mesh_to_oth": [15, 16, 87], "derec": [15, 16, 92], "march": [15, 16, 119, 120, 124], "2024": [15, 16], "WITH": [15, 16, 92], "finit": [15, 16, 100, 103], "return_index": [15, 16, 45, 47, 74, 88], "face_weight": [15, 16, 93], "distribut": [15, 16, 76, 87, 93, 101], "face_index": [15, 16, 53, 88, 93, 112, 114, 118], "face_count": [15, 16, 24], "thin": [15, 16, 29, 105], "wrapper": [15, 16, 105, 116, 122, 123], "cap": [15, 16, 53], "cached_dot": [15, 16, 53], "portion": [15, 16, 53], "extern": [15, 16, 33, 53, 105], "new_mesh": [15, 16, 53], "half": [15, 16, 59, 94, 95, 101], "individu": [15, 16, 19, 93, 102, 105, 116], "only_watertight": [15, 16, 46, 105], "remaind": [15, 16], "overrid": [15, 16, 18, 24, 46, 57, 70, 102, 103], "custom": [15, 16, 33, 57, 70, 105], "separ": [15, 16, 33, 44, 52, 76, 105], "four": [15, 16, 19, 88, 116], "smaller": [15, 16, 19, 22, 46, 69, 88, 105], "longer": [15, 16, 74, 75, 88], "midpoint": [15, 16], "postprocess": [15, 16, 41], "subdivis": [15, 16, 24, 81, 88], "catmul": [15, 16], "clark": [15, 16], "primarili": [15, 16, 46, 53], "max_edg": [15, 16, 88], "max_it": [15, 16, 57, 70, 71, 82, 87, 88], "faces_sequ": [15, 16, 105], "flag": [15, 16, 19, 61, 105, 126], "dictionari": [15, 16, 32, 57, 61, 63, 70, 98, 105], "On": [15, 16, 79], "occurr": [15, 16, 47, 103], "equival": [15, 16, 19, 105, 122, 125], "been": [15, 16, 21, 24, 69, 105, 112, 114], "pil": [15, 16, 57, 69, 70, 72, 112, 114, 115, 116, 118], "vertex_mask": [15, 16], "nearbi": [15, 16, 46, 82, 91], "techniqu": [15, 16, 29, 46], "pi": [15, 16, 25, 58, 96, 101], "minu": [15, 16, 25, 57, 70], "concav": [15, 16, 23, 25], "degre": [15, 16, 18, 29, 70, 75, 94, 95, 101], "alreadi": [15, 16, 20, 54], "mismatch": [15, 16], "bytesio": [15, 34, 92], "stringio": [15, 34, 92], "textio": [15, 34, 92, 103], "loaded": [15, 34], "asset": [15, 31, 32, 34, 36, 38, 91, 99], "coerc": [15, 34, 116], "everyth": [15, 34, 106], "file_object": [15, 65], "nativ": [15, 65, 84], "remot": [15, 34, 91], "must": [15, 19, 29, 34, 56, 79, 91, 96, 101, 103, 105, 116, 121, 122], "accident": [15, 34], "dim": [15, 69, 101], "check_valid": [15, 105], "nonzero": [15, 102, 105], "cutoff": [15, 46, 96, 105, 116], "info": [17, 52, 58, 61, 102, 105], "dimens": [18, 23, 29, 47, 55, 56, 57, 58, 60, 61, 66, 69, 70, 75, 76, 79, 105, 118], "points_insid": 18, "cube": [18, 29, 84, 119, 120, 121, 124, 126], "sample_count": 18, "angle_tol": 18, "001": [18, 75, 87], "hemispher": [18, 24, 105], "discuss": [18, 101], "www": [18, 23, 29, 69, 101, 102], "staff": 18, "uni": 18, "mainz": 18, "schoemer": 18, "public": 18, "algo00": 18, "pdf": [18, 48, 101, 102], "angular": [18, 58], "180": [18, 23], "angle_digit": 18, "coplanar_tol": 18, "precis": [18, 21, 47, 58, 61, 71, 75, 101, 103], "cover": [18, 19, 81], "albeit": 18, "larger": [18, 33, 46, 69, 75, 102], "deviat": [18, 22, 55, 75, 101], "to_origin": 18, "qhull_opt": [18, 23], "qbb": [18, 23], "AT": 18, "THE": 18, "23": [19, 101], "blake2b": 19, "hexdigest": 19, "102": 19, "684": 19, "24": [19, 101], "142": 19, "73": 19, "xxh3_64_intdigest": 19, "37": 19, "116": 19, "id_funct": 19, "force_immut": 19, "id": [19, 29, 101], "exclud": 19, "item": [19, 47, 69, 99, 105], "still": [19, 22, 74], "is_mut": 19, "expire_dai": 19, "30": 19, "disk": 19, "expir": 19, "gigabyt": 19, "corpus": 19, "corpu": 19, "old": [19, 78], "fetch": [19, 36, 99], "recent": 19, "aggress": [19, 100], "necessarili": 19, "wrong": [19, 101], "__hash__": 19, "fastest": 19, "xxh3_64": 19, "xxh_64": 19, "inplac": 19, "swap": 19, "endian": 19, "big": 19, "real": [19, 101, 102], "imaginari": [19, 101], "256": 19, "8755": 19, "int16": 19, "0x1": 19, "0x100": 19, "0x2233": 19, "13090": 19, "0x3322": 19, "ceg": 19, "fac": 19, "s3": 19, "newbyteord": 19, "produc": [19, 71, 76, 78, 87, 93], "scalar": [19, 100, 101], "expect": [19, 101], "behav": [19, 69], "rare": 19, "distinct": [19, 103], "unpack": 19, "cast": [19, 82, 122], "syntax": 19, "speed": [19, 100, 101, 105], "increas": [19, 96], "particular": [19, 71], "discourag": 19, "among": 19, "variabl": [19, 101, 102], "seed": [19, 69, 93], "123": [19, 101], "randint": 19, "kth": 19, "introselect": 19, "rearrang": 19, "behind": 19, "undefin": [19, 56, 84, 85], "22": [19, 103], "field": [19, 29, 33, 63, 94, 95], "unspecifi": 19, "break": [19, 42, 61, 90, 105], "ti": 19, "argpartit": 19, "indirect": 19, "uic": 19, "writebackifcopi": 19, "affect": [19, 96], "interpret": [19, 101, 116], "below": [19, 24, 29, 60, 81, 93, 103], "accord": [19, 22, 29, 101, 119, 120], "own": [19, 121, 123], "ultim": 19, "owner": [19, 91], "expos": 19, "made": [19, 61, 63, 105, 119, 120], "unpickl": 19, "done": [19, 70, 71], "properli": [19, 34, 105], "stride": 19, "appropri": [19, 27, 125], "hardwar": 19, "pyarray_resolvewritebackifcopi": 19, "content": [19, 91], "upper": [19, 71, 105], "letter": 19, "c_contigu": 19, "f_contigu": 19, "owndata": 19, "traceback": 19, "stdin": 19, "quicksort": 19, "mergesort": 19, "heapsort": 19, "timsort": 19, "under": [19, 24, 87, 91], "vari": [19, 105], "retain": 19, "backward": 19, "argsort": 19, "lexsort": 19, "searchsort": 19, "s1": [19, 101], "i8": 19, "decor": [19, 22, 56], "retriev": [19, 91, 116], "foo": 19, "happi": 19, "dai": 19, "pitfal": 19, "contigu": [19, 47, 101], "manag": 20, "return_nam": [20, 63], "return_data": 20, "collid": 20, "is_collis": 20, "occur": [20, 29, 47, 100, 105, 112, 114, 119, 120, 125], "tup": [20, 105], "alphabet": 20, "contact": 20, "detect": [20, 71, 102, 105], "other_manag": 20, "prior": [20, 24, 55, 75], "penetr": [20, 71], "distanceresult": 20, "collisoin": 20, "bvhmodel": 20, "bvh": 20, "collisionobject": 20, "somewhat": 21, "64": [21, 26, 57, 70, 103], "rigid": [21, 87, 101], "05": [22, 71, 74, 85, 87, 98, 101, 102], "500": [22, 87, 101, 107, 108], "20": [22, 24, 45, 87, 101], "10f": 22, "percentag": 22, "draw": [22, 57, 58, 61, 67, 70, 71, 72, 75, 76, 105], "aim": 22, "control": [22, 58, 60, 61, 75, 100, 101, 119, 120], "13": [22, 82], "5000": 22, "solidwork": [22, 40, 43], "8726646259971648": 22, "017453292519943295": 22, "02": [22, 101], "0001": [22, 47, 87, 105], "3490658503988659": 22, "aspect": 22, "ratio": [22, 45, 88, 103], "differfrom": 22, "escap": 22, "earli": [22, 69], "emit": [22, 93, 96], "took": 22, "execut": [22, 29, 69, 79], "deal": [23, 46, 47, 48, 54, 74, 79, 88, 99, 102, 104, 114, 117], "extend": [23, 82], "exterior": [23, 57, 70, 71, 82], "interior": [23, 57, 70, 71, 88], "pp": [23, 101], "qt": 23, "qhull": [23, 55], "qh": 23, "htm": [23, 101], "o": [23, 60, 101, 124], "r_min": 24, "unsignedinteg": [24, 30, 46, 47, 58, 69, 71, 93, 115], "r_max": 24, "annular": 24, "pie": 24, "wedg": 24, "origin_s": 24, "origin_color": 24, "axis_radiu": 24, "axis_length": 24, "cuboid": [24, 59, 69], "marker_height": 24, "far": [24, 57, 70, 96, 101, 105], "latitud": 24, "longitud": 24, "revolut": 24, "triangle_arg": 24, "platon": 24, "solid": [24, 93], "ico": 24, "icosahederon": 24, "isopher": 24, "grow": 24, "intend": 24, "symmetr": [24, 48], "counterclockwis": [24, 105], "32": [24, 29, 59, 81], "sharp": [24, 46, 87], "sweep": 24, "major_radiu": 24, "minor_radiu": 24, "major_sect": 24, "minor_sect": 24, "tube": 24, "minor": 24, "permiss": 24, "mapbox_earcut": 24, "pq30": 24, "vert": 24, "prism": 24, "uglier": 24, "thgrough": 24, "restrict": 25, "delaunai": [25, 52], "cycl": [25, 57, 70, 76], "cohen": 25, "steiner": 25, "morvan": 25, "within": [25, 47, 74, 82, 105], "gaussian_curvatur": 25, "mean_curvatur": 25, "start_point": 25, "ball": [25, 101], "maxconvexhul": 26, "400000": 26, "minimumvolumepercenterrorallow": 26, "maxrecursiondepth": 26, "shrinkwrap": 26, "fillmod": 26, "flood": 26, "maxnumverticesperch": 26, "asyncacd": 26, "minedgelength": 26, "findbestplan": 26, "decompos": [26, 101], "mesh_arg": 26, "rtype": [26, 61], "wrap": [27, 28, 47, 67, 84, 105, 116], "dummi": 27, "surviv": [27, 119, 120], "debugg": 27, "patrickmin": 29, "alia": [29, 103], "z_buffer_carv": 29, "z_buffer_vot": 29, "dilated_carv": 29, "exact": [29, 50, 56, 71], "remove_intern": 29, "rotate_x": 29, "rotate_z": 29, "block_id": 29, "use_material_block_id": 29, "use_offscreen_pbuff": 29, "downsample_factor": 29, "downsample_threshold": 29, "verbos": [29, 57, 70, 75], "binvox_path": 29, "cl": 29, "respons": 29, "__call__": 29, "pleas": 29, "cite": 29, "websit": 29, "articl": [29, 69, 100], "nooruddin03": 29, "fakir": 29, "nooruddin": 29, "greg": 29, "turk": 29, "simplif": 29, "journal": [29, 45], "ieee": 29, "transact": 29, "graphic": [29, 45, 101], "191": 29, "205": 29, "year": 29, "patrick": 29, "howpublish": 29, "googl": [29, 38], "yyyi": 29, "dd": 29, "ug": 29, "dfx": 29, "xgl": 29, "pov": 29, "jot": 29, "hip": 29, "mira": 29, "vtk": [29, 35], "schemat": 29, "msh": [29, 52], "1024": 29, "carv": 29, "pariti": [29, 101], "vote": 29, "stop": [29, 58, 87, 103], "card": 29, "minx": [29, 105], "mini": [29, 105], "maxx": [29, 105], "maxi": [29, 105], "odd": [29, 88, 101], "behaviour": 29, "occupi": [29, 85, 119, 120, 124], "90": [29, 101, 125], "ccw": [29, 105], "cw": 29, "use_matrial_block_id": 29, "spec": 29, "usemtl": 29, "blockid_": 29, "offscreen": 29, "pbuffer": 29, "onscreen": 29, "downsampl": 29, "adjust": 29, "destin": 29, "silenc": 29, "stdout": 29, "stderr": 29, "subprocess": 29, "entir": [29, 91, 116], "suitabl": [29, 87], "denot": [29, 119, 120, 122], "num": [29, 101], "axis_ord": 29, "xzy": 29, "eement": 29, "relev": [29, 71, 126], "fp": 29, "namedtupl": 29, "rle": [29, 125], "ioerror": 29, "factori": [29, 122], "encoded_ax": 29, "circumst": 29, "export_typ": 29, "binvoxer_kwarg": 29, "simpli": 29, "suppli": 29, "temporarili": 29, "tol_linear": 30, "tol_angular": 30, "tol_rel": 30, "merge_primit": [30, 33], "step_to_glb": 30, "ignore_broken": [31, 33], "broken": [31, 90], "dure": [31, 109], "daeunsupportederror": 31, "daebrokenreferror": 31, "zae": 31, "Such": 32, "base64": [32, 33, 35, 105, 107, 108], "use_base64": 32, "include_metadata": 32, "as_dict": [32, 61, 66, 81], "gl_triangl": 33, "gl_line": 33, "include_norm": [33, 36], "unitize_norm": 33, "tree_postprocessor": 33, "buffer_postprocessor": 33, "extension_webp": 33, "serializ": [33, 81, 105], "func": 33, "webp": 33, "ext_texture_webp": 33, "merge_buff": 33, "embed_buff": 33, "oppos": [33, 50, 121], "peopl": 33, "tree_postprocess": 33, "exit": [33, 69], "uri": 33, "skip_materi": [33, 36, 38], "mesh_kwarg": [33, 38], "khronosgroup": 33, "master": 33, "present": [33, 38, 103, 115, 122, 123], "err": 33, "validationerror": 33, "gltf2": 33, "archiv": [34, 91, 105], "aka": [35, 76], "include_color": 36, "include_textur": 36, "return_textur": 36, "write_textur": 36, "mtl_name": [36, 116], "todo": [36, 46, 94, 95, 116], "vt": [36, 118], "mtl": [36, 91, 116], "top": [36, 81, 101], "group_materi": 36, "maintain_ord": 36, "reorder": [36, 70, 78, 79], "artifact": 36, "web": [36, 91], "mtllib": 36, "newmtl": 36, "map_kd": 36, "kd": 36, "28": [38, 101], "draco": 38, "draco_encod": 38, "quantiz": 38, "drc": 38, "include_attribut": 38, "binary_little_endian": 38, "fix_textur": 38, "prefer_color": 38, "dassault": 40, "catia": 40, "cad": [40, 52], "etre": 40, "batch_siz": 41, "4096": 41, "compresslevel": 41, "batch": 41, "zipfil": [41, 105], "zip_": 41, "simul": 42, "piec": 42, "write_color": 44, "delimit": [44, 105], "charact": [44, 101, 103, 105], "whitespac": 44, "comma": 44, "return_angl": [45, 58], "co": 45, "toarrai": 45, "vertex_count": 45, "unreferenc": 45, "fewer": [45, 93, 105], "use_loop": 45, "surround": 45, "grit": 45, "thuerrner": 45, "charl": 45, "wuethrich": 45, "1998": 45, "43": [45, 101], "abstract": [46, 56, 81, 91, 103, 113, 116, 122], "node_count": 46, "label": [46, 61, 79], "largest": 46, "min_len": [46, 47], "return_edg": 46, "add_edges_from": 46, "graph_connect": 46, "unshar": 46, "exactli": [46, 53, 61, 76, 78, 98, 103], "fact": [46, 55], "bipartit": 46, "edges_hash": 46, "consecut": [46, 47, 105], "graphviz": 46, "pictor": 46, "layout": 46, "attrib": 46, "multidigraph": 46, "collect": [46, 103], "leaf": 46, "all_simple_path": 46, "visit": [46, 79], "multigraph": 46, "max_index": 46, "edgelist": [46, 98], "faces_a": 46, "faces_b": 46, "facet_minarea": 46, "fraction": [46, 101], "facets_minarea": 46, "patch": [46, 90], "sequenti": [46, 47, 105], "edge_hash": 46, "bf": 46, "routin": 46, "undirect": [46, 57, 70, 101], "df": 46, "max_len": 47, "only_nonzero": 47, "retuurn": 47, "1d": [47, 54, 105, 112, 114, 122], "intersect1d": 47, "setdiff1d": 47, "neighbour": 47, "convers": [47, 101, 104, 105], "as_int": [47, 105], "min_length": 47, "longest": [47, 82], "max_length": 47, "farther": 47, "apart": [47, 81, 105], "median": 47, "require_count": 47, "10x": 47, "decim": [47, 105], "include_neg": 47, "new_vector": 47, "void": 47, "uint64": 47, "minlength": 47, "return_invers": 47, "return_count": [47, 74], "member": [47, 105], "tol_merg": 47, "keep_ord": 47, "int8": 47, "known": [48, 57, 70, 87, 105, 125], "No": [48, 119, 120], "inertia_tensor": 48, "parallel_axi": 48, "opencoursewar": 48, "mit16_07f09_lec26": 48, "use_exact": 50, "use_self": 50, "troubleshoot": 50, "angle_limit": 50, "66": 50, "island_margin": 50, "gmsh_arg": 52, "breap": 52, "stp": 52, "texinfo": 52, "pypi": 52, "download": [52, 91], "setnumb": 52, "max_el": 52, "mesher_id": 52, "recov": [52, 101], "si": 52, "recoveri": 52, "br": 52, "dimension": [52, 56, 69, 74, 101], "frontal": 52, "schoeberl": 52, "netgen": 52, "hxt": 52, "effici": 52, "reimplementaton": 52, "mmg3d": 52, "experiment": 52, "anisotrop": 52, "tetrahedr": 52, "unstructur": [52, 105], "return_fac": 53, "local_fac": 53, "line_seg": 53, "line_origin": 53, "line_direct": 53, "return_dist": 53, "return_denom": 53, "denomin": [53, 103], "on_plan": 53, "did": [53, 84], "denom": 53, "new_vertic": [53, 88], "new_fac": [53, 88, 118], "new_uv": 53, "newli": 53, "overlap": [54, 57, 69, 70, 71], "inter": 54, "ptp": 54, "skip": 54, "hyperspher": 55, "peak": 55, "furthest": 55, "voronoi": [55, 57, 70, 71], "diagram": [55, 57, 70, 71], "due": [55, 105], "abc": [56, 61, 91, 96, 113, 116, 122], "abstractmethod": 56, "inherit": [56, 96], "loos": 56, "diagon": [56, 71, 109], "mincyl": 56, "smallest": [56, 59], "unpad": 56, "sphere_radiu": 56, "sphere_cent": 56, "minbal": 56, "unconnect": [57, 70], "aren": [57, 61, 69, 70, 98], "themselv": [57, 61, 70], "path_id": [57, 70], "include_self": [57, 70], "child": [57, 70, 98], "digraph": [57, 70, 71, 98], "shell": [57, 70, 71], "meshpi": [57, 70], "mesh_info": [57, 70], "refinement_func": [57, 70], "volume_constraint": [57, 70, 100], "max_volum": [57, 70], "allow_boundary_stein": [57, 70], "allow_volume_stein": [57, 70], "quality_mesh": [57, 70], "generate_edg": [57, 70], "generate_fac": [57, 70], "min_angl": [57, 70], "clip": [57, 70, 71, 76, 91, 101], "annot": [57, 61, 70], "notion": [57, 70], "topologi": [57, 70, 78, 100], "circuit": [57, 70], "NO": [57, 70], "enclos": [57, 70], "reject": [57, 70, 71, 75, 93], "colinear": [57, 70, 74, 75, 102], "circular": [57, 59, 70], "0002": [57, 70], "path_3d": [57, 70], "awar": [57, 70], "to_2d": [57, 70], "homeogen": [57, 70], "nonetyp": 58, "return_norm": 58, "establish": 58, "pattern_radiu": 59, "circle_radiu": 59, "include_circl": 59, "sections_circl": 59, "preced": 59, "rect": [59, 69], "coeffici": 60, "special": [60, 103, 105], "binom": 60, "hardcod": 60, "cubic": 60, "polylin": [60, 63, 66, 105], "knot": [60, 61], "geometr": [61, 70, 81], "numer": [61, 71, 102], "wasn": 61, "purpos": 61, "essenti": 61, "tile": 61, "resid": 61, "shortcut": [61, 119, 120], "bag": 61, "poli": [61, 63, 71], "compos": [61, 88], "horizont": 61, "bulg": 63, "bulge_idx": 63, "meet": [63, 102], "autodesk": 63, "goe": [63, 96], "clockwis": [63, 79, 105], "semicircl": 63, "blob_raw": 63, "uppercas": 63, "only_lay": [63, 67], "loadabl": 65, "sent": 66, "return_path": 67, "as_svg": 67, "path_str": 67, "36": 67, "skewx": 67, "40": 67, "terminologi": 68, "geomalgorithm": 68, "a05": 68, "_intersect": 68, "p_0": 68, "su": 68, "q_0": 68, "tv": 68, "hyper": 69, "logic": [69, 105], "similarli": 69, "blackpawn": [69, 102], "lightmap": 69, "unsuccess": 69, "amount": [69, 101], "shrink": [69, 82], "spuriou": 69, "upsiz": [69, 89, 118], "gpu": 69, "consum": 69, "homogeon": [69, 101], "density_escap": 69, "99": 69, "quanta": 69, "sheet": 69, "snap": 69, "determinist": [69, 93, 105], "rng": 69, "shuffl": 69, "roll": [69, 101], "pre": [69, 71], "cleanup": 70, "025": [70, 73], "whatev": 70, "entity_id": 70, "declar": 70, "shorten": 70, "rough": [71, 116, 119, 120, 124], "quadrant": 71, "ignore_sign": 71, "rpad": 71, "apad": 71, "200": [71, 101], "coher": 71, "irrelev": 71, "exceed": [71, 125], "rtol": 71, "trick": 71, "perimet": 71, "lower": 71, "return_cent": 71, "ixx": 71, "iyi": 71, "ixi": 71, "principal_mo": 71, "imax": 71, "imin": 71, "addition": 74, "double_sid": 74, "parametr": 74, "maxlen": 74, "came": [74, 105], "atol": [74, 105], "lie": [74, 76, 119, 120], "unknown": 75, "suggest": 75, "OR": [75, 81, 91, 94, 95, 105], "polynomi": 75, "entity_path": 76, "step_round": 76, "ONE": 76, "vertex_path": 76, "concat": [77, 114, 117], "deform": [78, 87], "effort": [78, 119, 120], "saniti": 78, "displac": 78, "translation_scal": 78, "variant": [78, 91], "reord": 78, "rigidli": [78, 87], "en": 79, "wikipedia": 79, "wiki": 79, "metric_k": 79, "vq": 79, "kmean": 79, "svd": [79, 101], "return_transform": 79, "return_planar": 79, "overridden": 79, "counter": [79, 105], "salesman": 79, "20x": 79, "29m": 79, "2014": 79, "i7": 79, "rhe": 80, "becaus": [81, 96, 125], "inflat": 81, "twice": [81, 85], "analyt": 81, "distance_height": 81, "expand": 81, "extrude_direct": 81, "vertex_id": 82, "inward": 82, "06": 82, "tangenti": 82, "masatomo": 82, "inui": 82, "nobuyuki": 82, "umezu": 82, "ryohei": 82, "shiman": 82, "2016": 82, "aid": 82, "applic": [82, 112, 118], "199": 82, "207": 82, "doi": 82, "1080": 82, "16864360": 82, "2015": [82, 101], "1084186": 82, "max_spher": 82, "scale_to_box": 84, "behavior": [84, 85, 116], "triangle_index": [84, 85], "multiple_hit": [84, 85], "max_hit": 84, "return_loc": [84, 85], "precomput": 85, "index_triangl": 85, "had": 85, "buffer_dist": 85, "interest": 85, "ccontain": 85, "ray_candid": 85, "ray_id": 85, "triangles_norm": 85, "max_iter": 87, "send": 87, "flippag": 87, "source_mesh": 87, "target_geometri": 87, "target_posit": 87, "ep": [87, 100], "use_fac": 87, "use_vertex_norm": 87, "neighbors_count": 87, "wn": 87, "wl": 87, "decreas": 87, "inferior": 87, "account": 87, "estim": 87, "transfer": 87, "wc": 87, "wi": 87, "strength": 87, "yield": [87, 91], "reflect": [87, 101, 119, 120], "return_cost": 87, "ta": 87, "improv": [87, 100], "won": 88, "index_dict": 88, "v2": [88, 101, 105], "f0": 88, "v0": [88, 101, 105], "v1": [88, 101, 105], "f1": 88, "v3": [88, 101, 105], "b0": 88, "b1": 88, "kb": 88, "colors_typ": 89, "colors_gl": 89, "lightn": 89, "gllightfv": 89, "gl_light0": 89, "gl_light1": 89, "multiarg": 89, "gllightfb": 89, "upscal": 89, "glfloat": 89, "glmatrix": 89, "smooth_threshold": 89, "60000": 89, "statu": 90, "proper": 90, "meaning": 90, "insert_vertic": 90, "fan": [90, 105], "wonki": 90, "subdirectori": 91, "branch": 91, "sub": 91, "quadknot": 91, "fragment": 91, "substr": [91, 105], "lightli": 91, "decode_json": 92, "as_stream": 92, "januari": [92, 100], "2025": 92, "folder": 92, "stream": [92, 105], "sample_color": 93, "mathworld": 93, "wolfram": 93, "trianglepointpick": 93, "entropi": 93, "accomplish": 93, "too": 93, "warn": 93, "spherepointpick": 93, "z_near": [94, 95], "z_far": [94, 95], "intrins": [94, 95], "extrins": [94, 95], "cx": [94, 95], "cy": [94, 95], "fovx": [94, 95], "fovi": [94, 95], "splittabl": [94, 97], "top_left": 95, "bottom_right": 95, "mmatl": 96, "infinit": [96, 116], "awai": 96, "effect": [96, 109], "attenu": 96, "Its": 96, "lumen": 96, "metr": 96, "lux": 96, "lm": 96, "m2": 96, "unit8": 96, "bright": 96, "spot": 96, "lumin": 96, "candela": 96, "sr": 96, "illumin": 96, "manner": [96, 116], "7853981633974483": 96, "falloff": 96, "centr": 96, "decent": 96, "shouldn": 97, "remap": 97, "forest": 98, "simpler": 98, "enforc": 98, "free": 98, "disregard": 98, "repair_rigid": 98, "affili": 98, "happen": 98, "node_a": 98, "node_b": 98, "malform": 98, "geometry_nam": 98, "frame_to": 98, "frame_from": 98, "mesh_0": 98, "derefer": 98, "draw_networkx": 98, "bake": 98, "mesh_index": 98, "quaternion": [98, 101], "particularli": 99, "ref": 99, "recurs": 99, "dilat": 100, "variat": [100, 125], "initial_volum": 100, "srinked_volum": 100, "beta": [100, 101], "laplacian_oper": 100, "filter": 100, "vollmer": 100, "mencl": 100, "muller": 100, "shrinkag": 100, "autogener": 100, "lamb": 100, "implicit_time_integr": 100, "implicit": 100, "fair": 100, "irregular": 100, "diffus": [100, 114, 115, 116], "flow": 100, "desbrun": 100, "meyer": 100, "schroder": 100, "caltech": 100, "stabil": 100, "barroqueiro": 100, "andrad": 100, "campo": 100, "dia": 100, "oliveira": 100, "valent": 100, "21": 100, "2021": 100, "bridg": 100, "asm": 100, "mech": 100, "nu": 100, "shall": 100, "lambda": 100, "vertices_norm": 100, "equal_weight": 100, "pinned_vertic": 100, "shear": [101, 119, 120], "orthogon": 101, "christoph": 101, "gohlk": 101, "laboratori": 101, "fluoresc": 101, "dynam": 101, "univers": 101, "california": 101, "irvin": 101, "2017": 101, "cpython": 101, "19": 101, "revis": 101, "epydoc": 101, "linalg": [101, 105], "inv": 101, "m0": 101, "m1": 101, "storag": 101, "convent": 101, "glmultmatrixd": 101, "carri": 101, "ix": 101, "jy": 101, "kz": 101, "tripl": 101, "sxyz": 101, "ryxi": 101, "tatic": 101, "otat": 101, "remain": 101, "success": 101, "rightmost": 101, "repetit": 101, "transforms3d": 101, "mathutil": 101, "ronald": 101, "goldman": 101, "gem": 101, "472": 101, "475": 101, "morgan": 101, "kaufmann": 101, "1990": 101, "pseudo": 101, "perspect": 101, "ii": 101, "320": 101, "323": 101, "1991": 101, "spencer": 101, "thoma": 101, "324": 101, "331": 101, "ken": 101, "shoemak": 101, "iv": 101, "222": 101, "229": 101, "1994": 101, "175": 101, "192": 101, "attitud": 101, "jame": 101, "diebel": 101, "2006": 101, "kabsch": 101, "acta": 101, "cryst": 101, "1978": 101, "a34": 101, "827": 101, "828": 101, "bkp": 101, "horn": 101, "opt": 101, "soc": 101, "am": 101, "1987": 101, "629": 101, "642": 101, "sfu": 101, "ca": [101, 102], "jwa3": 101, "cmpt461": 101, "quatut": 101, "jmp": 101, "van": 101, "waveren": 101, "2005": 101, "asmo": 101, "na": 101, "eng": 101, "293748": 101, "iii": 101, "124": 101, "132": 101, "1992": 101, "molecular": 101, "cff": 101, "karnei": 101, "mol": 101, "mod": 101, "595": 101, "604": 101, "itzhack": 101, "bar": 101, "contr": 101, "2000": 101, "1085": 101, "1087": 101, "vision": 101, "hartlei": 101, "zissermann": 101, "cambridg": 101, "2nd": 101, "ed": [101, 125], "chapter": 101, "130": 101, "steve": 101, "hollasch": 101, "net": 101, "cgindex": 101, "math": [101, 104], "vec": 101, "234": 101, "345": 101, "xaxi": 101, "yaxi": 101, "zaxi": 101, "rx": 101, "ry": 101, "rz": 101, "rxyz": 101, "ga": 101, "qx": 101, "qy": 101, "qz": 101, "rq": 101, "rand": 101, "tran": 101, "persp": 101, "tan": 101, "250": 101, "275": 101, "90583455": 101, "400": 101, "2055924": 101, "state": [101, 109], "cursor": 101, "acceler": 101, "continu": 101, "usesvd": 101, "rmsd": 101, "1031": 101, "1600": 101, "675": 101, "826": 101, "677": 101, "55": [101, 105], "52": [101, 103], "281": 101, "277": 101, "mat": 101, "300": [101, 125], "5708": 101, "95532": 101, "bottom": 101, "devic": 101, "frustum": 101, "pyramid": 101, "orthograph": 101, "canon": [101, 103], "dehomogen": 101, "seri": [101, 105], "array_lik": 101, "degen": 101, "t0": 101, "t1": 101, "r0": 101, "r1": 101, "triplet": 101, "syxz": 101, "_axes2tupl": 101, "99810947": 101, "06146124": 101, "aj": 101, "ak": 101, "yaw": 101, "34786452": 101, "383436184": 101, "_tuple2ax": 101, "max_devi": 101, "almost": [101, 125], "accumul": 101, "restor": 101, "trace": 101, "q0": 101, "q1": 101, "matrix0": 101, "matrix1": 101, "crystallograph": 101, "87": 101, "80": 101, "69": 101, "063229": 101, "theta": 101, "matrix_2d": 101, "matrix_3d": 101, "p0": 101, "p1": 101, "pseudoperspect": 101, "p2": 101, "p3": 101, "conjug": 101, "ryxz": 101, "435953": 101, "310622": 101, "718287": 101, "444435": 101, "isprecis": 101, "diag": [101, 105], "9981095": 101, "0164262": 101, "0328524": 101, "0492786": 101, "545": 101, "797": 101, "260": 101, "733": 101, "603": 101, "313": 101, "407": 101, "021": 101, "913": 101, "19069": 101, "43736": 101, "87485": 101, "083611": 101, "395": 101, "362": 101, "843": 101, "626": 101, "796": 101, "056": 101, "498": 101, "529": 101, "82336615": 101, "13610694": 101, "46344705": 101, "29792603": 101, "quaternion1": 101, "quaternion0": 101, "44": 101, "quat0": 101, "quat1": 101, "spin": 101, "shortestpath": 101, "arcco": 101, "einsum": [101, 105], "ji": 101, "jk": 101, "ik": 101, "doubl": [101, 103, 116], "mirror": 101, "direc": 101, "broadcast": 101, "s0": 101, "det": 101, "phi": 101, "norm": [101, 105], "expand_dim": 101, "closestptpointtriangl": 102, "confus": 102, "skip_inertia": 102, "geometrictool": 102, "polyhedralmassproperti": 102, "coloc": 102, "cramer": 102, "rule": 102, "pointinpoli": 102, "ubc": 102, "heidrich": 102, "jgt": 102, "2x": 102, "normals_compar": 102, "unconstrain": 103, "checker": 103, "bytearrai": 103, "distinguish": 103, "unbuff": 103, "captur": 103, "pervas": 103, "offer": 103, "anystr": 103, "hint": [103, 104], "whenc": 103, "concret": 103, "__new__": 103, "__getitem__": 103, "__len__": 103, "float_": 103, "platform": 103, "x86_64": 103, "expon": [103, 105], "mantissa": 103, "whose": 103, "overflowerror": 103, "infin": 103, "signedinteg": 103, "int_": 103, "9_223_372_036_854_775_808": 103, "9_223_372_036_854_775_807": 103, "intp": 103, "enough": 103, "pointer": 103, "intptr_t": 103, "analog": 103, "builtin": [103, 105], "popcount": 103, "127": [103, 105], "pint": 104, "units_to_inch": 104, "meter": 104, "millimet": 104, "standalon": 105, "overwrit": 105, "risk": 105, "vertices_seq": 105, "faces_seq": 105, "verticesvertex": 105, "compact": 105, "col_delim": 105, "row_delim": 105, "value_format": 105, "surprisingli": 105, "handler": 105, "capture_warn": 105, "blacklist": 105, "enum": 105, "starts_with": 105, "new_lin": 105, "comment": 105, "unmodifi": 105, "min_digit": 105, "untouch": 105, "1020": 105, "nah": 105, "hi": 105, "tar": 105, "gz": 105, "181": 105, "ij": 105, "62": 105, "429": 105, "61": 105, "tobyt": 105, "basi": 105, "0x7f": 105, "return_al": 105, "return_centroid": 105, "is_inst": 105, "pathlib": 105, "allow_zero": 105, "wildcard": 105, "shape_ok": 105, "4x": 105, "as_sequ": 105, "regular": 105, "76": 105, "651": 105, "220": 105, "41": 105, "signific": 105, "round": 105, "reduc": [105, 116, 121], "round_sigfig": 105, "232453": 105, "00014045456": 105, "200000": 105, "0001405": 105, "multipart": 105, "bz2": 105, "period": 105, "return_2d": 105, "is_2d": 105, "thisexist": 105, "conversionsar": 105, "min_fac": 105, "significantli": 105, "program": 105, "v4": 105, "drawn": 105, "nnme": 105, "alphanumb": 105, "uuid": 105, "__includes__": 105, "start_10": 105, "increment": 105, "accordingli": 105, "bundl": 105, "mutat": [105, 119, 120, 126], "return_sign": 105, "possibli": [105, 119, 120], "constitu": 105, "bufferedrandom": 105, "jypyt": [107, 108], "embed": [107, 108], "viewpoint": 109, "movement": 109, "motion": 109, "suffici": [109, 126], "record": 109, "tracbal": 109, "mark": 109, "autolab_cor": 109, "rigidtransform": 109, "azimuth": 109, "forward": 109, "face_materi": [112, 118], "vi": [112, 118], "color_map": [112, 114], "colormap": [112, 114], "viridi": [112, 114], "color_rang": [112, 114], "linearli": [112, 114], "extrema": [112, 114], "uint4": [112, 114], "bilinear": [112, 114], "architectur": 114, "categori": 114, "treat": 114, "vertexvisu": 114, "as_float": 114, "specularfactor": 115, "glossinessfactor": 115, "specularglossinesstextur": 115, "diffusetextur": 115, "diffusefactor": 115, "khr_materials_pbrspecularglossi": 115, "metallicrough": 115, "specular": [115, 116], "channel": 115, "opac": 115, "idx": 116, "fhkpz": 116, "opaqu": 116, "enumer": 116, "blend": 116, "texel": 116, "emiss": 116, "ech": 116, "metal": 116, "occlus": 116, "ambient": 116, "promin": 116, "tex_nam": 116, "max_tex_size_individu": 116, "8192": 116, "max_tex_size_fus": 116, "modulu": 116, "vn": 118, "maintain_fac": 118, "mask_v": 118, "mask_": 118, "occup": [119, 120, 124], "filler": [119, 120, 121, 123], "leav": [119, 120], "mere": [119, 120], "runtimeerror": [119, 120], "vox": [119, 120], "trail": [119, 120, 125], "meaningless": 121, "voxelize_subdivid": 121, "custom_kei": [121, 123], "custom_fn": [121, 123], "signatur": [121, 123], "unchang": [121, 123], "oo": 122, "brle_data": [122, 125], "dense_data": [122, 125], "encoding_dtyp": 122, "ordered_indic": [122, 125], "unifi": 122, "conceptu": 122, "entri": 122, "lazi": 122, "_to_base_indic": 122, "_from_base_indic": 122, "base_indic": 122, "rank": [122, 123, 125], "csc": 122, "ravel": 122, "unravel": 122, "shift": 122, "base_encod": 122, "ndimag": 123, "filled_encod": 123, "ufunc": 124, "logical_and": 124, "logical_or": 124, "coord": 124, "skimag": 124, "fanci": 124, "encdo": 125, "brle": 125, "carefulli": 125, "logical_not": 125, "highli": 125, "wise": 125, "wherev": 125, "stripped_brle_data": 125, "val": 125, "substitut": 125, "valuerror": 125, "sorted_gather_1d": 125, "stripped_rle_data": 125, "raw_data": 125, "ascend": 125, "exce": 125, "max_val": 125, "max_valu": 125, "600": 125}, "objects": {"": [[15, 0, 0, "-", "trimesh"]], "trimesh": [[15, 1, 1, "", "PointCloud"], [15, 1, 1, "", "Scene"], [15, 1, 1, "", "Trimesh"], [15, 4, 1, "", "available_formats"], [16, 0, 0, "-", "base"], [17, 0, 0, "-", "boolean"], [18, 0, 0, "-", "bounds"], [19, 0, 0, "-", "caching"], [20, 0, 0, "-", "collision"], [21, 0, 0, "-", "comparison"], [22, 0, 0, "-", "constants"], [23, 0, 0, "-", "convex"], [24, 0, 0, "-", "creation"], [25, 0, 0, "-", "curvature"], [26, 0, 0, "-", "decomposition"], [27, 0, 0, "-", "exceptions"], [28, 0, 0, "-", "exchange"], [45, 0, 0, "-", "geometry"], [46, 0, 0, "-", "graph"], [47, 0, 0, "-", "grouping"], [48, 0, 0, "-", "inertia"], [49, 0, 0, "-", "interfaces"], [53, 0, 0, "-", "intersections"], [54, 0, 0, "-", "interval"], [15, 4, 1, "", "load"], [15, 4, 1, "", "load_mesh"], [15, 4, 1, "", "load_path"], [15, 4, 1, "", "load_remote"], [55, 0, 0, "-", "nsphere"], [56, 0, 0, "-", "parent"], [57, 0, 0, "-", "path"], [78, 0, 0, "-", "permutate"], [79, 0, 0, "-", "points"], [80, 0, 0, "-", "poses"], [81, 0, 0, "-", "primitives"], [82, 0, 0, "-", "proximity"], [83, 0, 0, "-", "ray"], [87, 0, 0, "-", "registration"], [88, 0, 0, "-", "remesh"], [89, 0, 0, "-", "rendering"], [90, 0, 0, "-", "repair"], [91, 0, 0, "-", "resolvers"], [92, 0, 0, "-", "resources"], [93, 0, 0, "-", "sample"], [94, 0, 0, "-", "scene"], [99, 0, 0, "-", "schemas"], [100, 0, 0, "-", "smoothing"], [15, 4, 1, "", "transform_points"], [101, 0, 0, "-", "transformations"], [102, 0, 0, "-", "triangles"], [103, 0, 0, "-", "typed"], [15, 4, 1, "", "unitize"], [104, 0, 0, "-", "units"], [105, 0, 0, "-", "util"], [106, 0, 0, "-", "version"], [107, 0, 0, "-", "viewer"], [112, 0, 0, "-", "visual"], [119, 0, 0, "-", "voxel"]], "trimesh.PointCloud": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "apply_transform"], [15, 3, 1, "", "bounds"], [15, 3, 1, "", "centroid"], [15, 3, 1, "", "colors"], [15, 3, 1, "", "convex_hull"], [15, 2, 1, "", "copy"], [15, 2, 1, "", "crc"], [15, 2, 1, "", "export"], [15, 3, 1, "", "extents"], [15, 2, 1, "", "hash"], [15, 3, 1, "", "is_empty"], [15, 3, 1, "", "kdtree"], [15, 2, 1, "", "merge_vertices"], [15, 2, 1, "", "query"], [15, 2, 1, "", "scene"], [15, 3, 1, "", "shape"], [15, 2, 1, "", "show"], [15, 3, 1, "", "vertices"]], "trimesh.Scene": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "add_geometry"], [15, 2, 1, "", "apply_transform"], [15, 3, 1, "", "area"], [15, 3, 1, "", "bounds"], [15, 3, 1, "", "bounds_corners"], [15, 3, 1, "", "camera"], [15, 2, 1, "", "camera_rays"], [15, 3, 1, "", "camera_transform"], [15, 3, 1, "", "center_mass"], [15, 3, 1, "", "centroid"], [15, 2, 1, "", "convert_units"], [15, 3, 1, "", "convex_hull"], [15, 2, 1, "", "copy"], [15, 2, 1, "", "deduplicated"], [15, 2, 1, "", "delete_geometry"], [15, 2, 1, "", "dump"], [15, 3, 1, "", "duplicate_nodes"], [15, 2, 1, "", "explode"], [15, 2, 1, "", "export"], [15, 3, 1, "", "extents"], [15, 3, 1, "", "geometry_identifiers"], [15, 3, 1, "", "has_camera"], [15, 3, 1, "", "is_empty"], [15, 3, 1, "", "is_valid"], [15, 3, 1, "", "lights"], [15, 3, 1, "", "moment_inertia"], [15, 2, 1, "", "moment_inertia_frame"], [15, 2, 1, "", "rezero"], [15, 2, 1, "", "save_image"], [15, 3, 1, "", "scale"], [15, 2, 1, "", "scaled"], [15, 2, 1, "", "set_camera"], [15, 2, 1, "", "show"], [15, 2, 1, "", "strip_visuals"], [15, 2, 1, "", "subscene"], [15, 3, 1, "", "triangles"], [15, 3, 1, "", "triangles_node"], [15, 3, 1, "", "units"], [15, 3, 1, "", "volume"]], "trimesh.Trimesh": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "apply_transform"], [15, 3, 1, "", "area"], [15, 3, 1, "", "area_faces"], [15, 3, 1, "", "as_open3d"], [15, 3, 1, "", "body_count"], [15, 3, 1, "", "bounds"], [15, 3, 1, "", "center_mass"], [15, 3, 1, "", "centroid"], [15, 2, 1, "", "compute_stable_poses"], [15, 2, 1, "", "contains"], [15, 2, 1, "", "convert_units"], [15, 2, 1, "", "convex_decomposition"], [15, 3, 1, "", "convex_hull"], [15, 2, 1, "", "copy"], [15, 3, 1, "", "density"], [15, 2, 1, "", "difference"], [15, 3, 1, "", "edges"], [15, 3, 1, "", "edges_face"], [15, 3, 1, "", "edges_sorted"], [15, 3, 1, "", "edges_sorted_tree"], [15, 3, 1, "", "edges_sparse"], [15, 3, 1, "", "edges_unique"], [15, 3, 1, "", "edges_unique_inverse"], [15, 3, 1, "", "edges_unique_length"], [15, 3, 1, "", "euler_number"], [15, 2, 1, "", "eval_cached"], [15, 2, 1, "", "export"], [15, 3, 1, "", "extents"], [15, 3, 1, "", "face_adjacency"], [15, 3, 1, "", "face_adjacency_angles"], [15, 3, 1, "", "face_adjacency_convex"], [15, 3, 1, "", "face_adjacency_edges"], [15, 3, 1, "", "face_adjacency_edges_tree"], [15, 3, 1, "", "face_adjacency_projections"], [15, 3, 1, "", "face_adjacency_radius"], [15, 3, 1, "", "face_adjacency_span"], [15, 3, 1, "", "face_adjacency_tree"], [15, 3, 1, "", "face_adjacency_unshared"], [15, 3, 1, "", "face_angles"], [15, 3, 1, "", "face_angles_sparse"], [15, 3, 1, "", "face_neighborhood"], [15, 3, 1, "", "face_normals"], [15, 3, 1, "", "faces"], [15, 3, 1, "", "faces_sparse"], [15, 3, 1, "", "faces_unique_edges"], [15, 3, 1, "", "facets"], [15, 3, 1, "", "facets_area"], [15, 3, 1, "", "facets_boundary"], [15, 3, 1, "", "facets_normal"], [15, 3, 1, "", "facets_on_hull"], [15, 3, 1, "", "facets_origin"], [15, 2, 1, "", "fill_holes"], [15, 2, 1, "", "fix_normals"], [15, 3, 1, "", "identifier"], [15, 3, 1, "", "identifier_hash"], [15, 3, 1, "", "integral_mean_curvature"], [15, 2, 1, "", "intersection"], [15, 2, 1, "", "invert"], [15, 3, 1, "", "is_convex"], [15, 3, 1, "", "is_empty"], [15, 3, 1, "", "is_volume"], [15, 3, 1, "", "is_watertight"], [15, 3, 1, "", "is_winding_consistent"], [15, 3, 1, "", "kdtree"], [15, 3, 1, "", "mass"], [15, 3, 1, "", "mass_properties"], [15, 2, 1, "", "merge_vertices"], [15, 3, 1, "", "moment_inertia"], [15, 2, 1, "", "moment_inertia_frame"], [15, 3, 1, "", "mutable"], [15, 2, 1, "", "nondegenerate_faces"], [15, 2, 1, "", "outline"], [15, 3, 1, "", "principal_inertia_components"], [15, 3, 1, "", "principal_inertia_transform"], [15, 3, 1, "", "principal_inertia_vectors"], [15, 2, 1, "", "process"], [15, 2, 1, "", "projected"], [15, 3, 1, "", "referenced_vertices"], [15, 2, 1, "", "register"], [15, 2, 1, "", "remove_degenerate_faces"], [15, 2, 1, "", "remove_duplicate_faces"], [15, 2, 1, "", "remove_infinite_values"], [15, 2, 1, "", "remove_unreferenced_vertices"], [15, 2, 1, "", "rezero"], [15, 2, 1, "", "sample"], [15, 2, 1, "", "scene"], [15, 2, 1, "", "section"], [15, 2, 1, "", "section_multiplane"], [15, 2, 1, "", "show"], [15, 2, 1, "", "simplify_quadratic_decimation"], [15, 2, 1, "", "simplify_quadric_decimation"], [15, 2, 1, "", "slice_plane"], [15, 3, 1, "", "smooth_shaded"], [15, 2, 1, "", "smoothed"], [15, 2, 1, "", "split"], [15, 2, 1, "", "subdivide"], [15, 2, 1, "", "subdivide_loop"], [15, 2, 1, "", "subdivide_to_size"], [15, 2, 1, "", "submesh"], [15, 3, 1, "", "symmetry"], [15, 3, 1, "", "symmetry_axis"], [15, 3, 1, "", "symmetry_section"], [15, 2, 1, "", "to_dict"], [15, 3, 1, "", "triangles"], [15, 3, 1, "", "triangles_center"], [15, 3, 1, "", "triangles_cross"], [15, 3, 1, "", "triangles_tree"], [15, 2, 1, "", "union"], [15, 2, 1, "", "unique_faces"], [15, 2, 1, "", "unmerge_vertices"], [15, 2, 1, "", "unwrap"], [15, 2, 1, "", "update_faces"], [15, 2, 1, "", "update_vertices"], [15, 3, 1, "", "vertex_adjacency_graph"], [15, 3, 1, "", "vertex_defects"], [15, 3, 1, "", "vertex_degree"], [15, 3, 1, "", "vertex_faces"], [15, 3, 1, "", "vertex_neighbors"], [15, 3, 1, "", "vertex_normals"], [15, 3, 1, "", "vertices"], [15, 3, 1, "", "visual"], [15, 3, 1, "", "volume"], [15, 2, 1, "", "voxelized"]], "trimesh.base": [[16, 1, 1, "", "Trimesh"]], "trimesh.base.Trimesh": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "apply_transform"], [16, 3, 1, "", "area"], [16, 3, 1, "", "area_faces"], [16, 3, 1, "", "as_open3d"], [16, 3, 1, "", "body_count"], [16, 3, 1, "", "bounds"], [16, 3, 1, "", "center_mass"], [16, 3, 1, "", "centroid"], [16, 2, 1, "", "compute_stable_poses"], [16, 2, 1, "", "contains"], [16, 2, 1, "", "convert_units"], [16, 2, 1, "", "convex_decomposition"], [16, 3, 1, "", "convex_hull"], [16, 2, 1, "", "copy"], [16, 3, 1, "", "density"], [16, 2, 1, "", "difference"], [16, 3, 1, "", "edges"], [16, 3, 1, "", "edges_face"], [16, 3, 1, "", "edges_sorted"], [16, 3, 1, "", "edges_sorted_tree"], [16, 3, 1, "", "edges_sparse"], [16, 3, 1, "", "edges_unique"], [16, 3, 1, "", "edges_unique_inverse"], [16, 3, 1, "", "edges_unique_length"], [16, 3, 1, "", "euler_number"], [16, 2, 1, "", "eval_cached"], [16, 2, 1, "", "export"], [16, 3, 1, "", "extents"], [16, 3, 1, "", "face_adjacency"], [16, 3, 1, "", "face_adjacency_angles"], [16, 3, 1, "", "face_adjacency_convex"], [16, 3, 1, "", "face_adjacency_edges"], [16, 3, 1, "", "face_adjacency_edges_tree"], [16, 3, 1, "", "face_adjacency_projections"], [16, 3, 1, "", "face_adjacency_radius"], [16, 3, 1, "", "face_adjacency_span"], [16, 3, 1, "", "face_adjacency_tree"], [16, 3, 1, "", "face_adjacency_unshared"], [16, 3, 1, "", "face_angles"], [16, 3, 1, "", "face_angles_sparse"], [16, 3, 1, "", "face_neighborhood"], [16, 3, 1, "", "face_normals"], [16, 3, 1, "", "faces"], [16, 3, 1, "", "faces_sparse"], [16, 3, 1, "", "faces_unique_edges"], [16, 3, 1, "", "facets"], [16, 3, 1, "", "facets_area"], [16, 3, 1, "", "facets_boundary"], [16, 3, 1, "", "facets_normal"], [16, 3, 1, "", "facets_on_hull"], [16, 3, 1, "", "facets_origin"], [16, 2, 1, "", "fill_holes"], [16, 2, 1, "", "fix_normals"], [16, 3, 1, "", "identifier"], [16, 3, 1, "", "identifier_hash"], [16, 3, 1, "", "integral_mean_curvature"], [16, 2, 1, "", "intersection"], [16, 2, 1, "", "invert"], [16, 3, 1, "", "is_convex"], [16, 3, 1, "", "is_empty"], [16, 3, 1, "", "is_volume"], [16, 3, 1, "", "is_watertight"], [16, 3, 1, "", "is_winding_consistent"], [16, 3, 1, "", "kdtree"], [16, 3, 1, "", "mass"], [16, 3, 1, "", "mass_properties"], [16, 2, 1, "", "merge_vertices"], [16, 3, 1, "", "moment_inertia"], [16, 2, 1, "", "moment_inertia_frame"], [16, 3, 1, "", "mutable"], [16, 2, 1, "", "nondegenerate_faces"], [16, 2, 1, "", "outline"], [16, 3, 1, "", "principal_inertia_components"], [16, 3, 1, "", "principal_inertia_transform"], [16, 3, 1, "", "principal_inertia_vectors"], [16, 2, 1, "", "process"], [16, 2, 1, "", "projected"], [16, 3, 1, "", "referenced_vertices"], [16, 2, 1, "", "register"], [16, 2, 1, "", "remove_degenerate_faces"], [16, 2, 1, "", "remove_duplicate_faces"], [16, 2, 1, "", "remove_infinite_values"], [16, 2, 1, "", "remove_unreferenced_vertices"], [16, 2, 1, "", "rezero"], [16, 2, 1, "", "sample"], [16, 2, 1, "", "scene"], [16, 2, 1, "", "section"], [16, 2, 1, "", "section_multiplane"], [16, 2, 1, "", "show"], [16, 2, 1, "", "simplify_quadratic_decimation"], [16, 2, 1, "", "simplify_quadric_decimation"], [16, 2, 1, "", "slice_plane"], [16, 3, 1, "", "smooth_shaded"], [16, 2, 1, "", "smoothed"], [16, 2, 1, "", "split"], [16, 2, 1, "", "subdivide"], [16, 2, 1, "", "subdivide_loop"], [16, 2, 1, "", "subdivide_to_size"], [16, 2, 1, "", "submesh"], [16, 3, 1, "", "symmetry"], [16, 3, 1, "", "symmetry_axis"], [16, 3, 1, "", "symmetry_section"], [16, 2, 1, "", "to_dict"], [16, 3, 1, "", "triangles"], [16, 3, 1, "", "triangles_center"], [16, 3, 1, "", "triangles_cross"], [16, 3, 1, "", "triangles_tree"], [16, 2, 1, "", "union"], [16, 2, 1, "", "unique_faces"], [16, 2, 1, "", "unmerge_vertices"], [16, 2, 1, "", "unwrap"], [16, 2, 1, "", "update_faces"], [16, 2, 1, "", "update_vertices"], [16, 3, 1, "", "vertex_adjacency_graph"], [16, 3, 1, "", "vertex_defects"], [16, 3, 1, "", "vertex_degree"], [16, 3, 1, "", "vertex_faces"], [16, 3, 1, "", "vertex_neighbors"], [16, 3, 1, "", "vertex_normals"], [16, 3, 1, "", "vertices"], [16, 3, 1, "", "visual"], [16, 3, 1, "", "volume"], [16, 2, 1, "", "voxelized"]], "trimesh.boolean": [[17, 4, 1, "", "boolean_manifold"], [17, 4, 1, "", "difference"], [17, 4, 1, "", "intersection"], [17, 4, 1, "", "union"]], "trimesh.bounds": [[18, 4, 1, "", "contains"], [18, 4, 1, "", "corners"], [18, 4, 1, "", "minimum_cylinder"], [18, 4, 1, "", "oriented_bounds"], [18, 4, 1, "", "oriented_bounds_2D"], [18, 4, 1, "", "to_extents"]], "trimesh.caching": [[19, 1, 1, "", "Cache"], [19, 1, 1, "", "DataStore"], [19, 1, 1, "", "DiskCache"], [19, 1, 1, "", "TrackedArray"], [19, 4, 1, "", "cache_decorator"], [19, 4, 1, "", "hash_fallback"], [19, 4, 1, "", "sha256"], [19, 4, 1, "", "tracked_array"]], "trimesh.caching.Cache": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "clear"], [19, 2, 1, "", "delete"], [19, 2, 1, "", "id_set"], [19, 2, 1, "", "update"], [19, 2, 1, "", "verify"]], "trimesh.caching.DataStore": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "clear"], [19, 2, 1, "", "is_empty"], [19, 3, 1, "", "mutable"], [19, 2, 1, "", "pop"], [19, 2, 1, "", "update"]], "trimesh.caching.DiskCache": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "get"]], "trimesh.caching.TrackedArray": [[19, 2, 1, "", "byteswap"], [19, 2, 1, "", "fill"], [19, 2, 1, "", "itemset"], [19, 3, 1, "", "mutable"], [19, 2, 1, "", "partition"], [19, 2, 1, "", "put"], [19, 2, 1, "", "setflags"], [19, 2, 1, "", "sort"]], "trimesh.collision": [[20, 1, 1, "", "CollisionManager"], [20, 1, 1, "", "ContactData"], [20, 1, 1, "", "DistanceData"], [20, 4, 1, "", "mesh_to_BVH"], [20, 4, 1, "", "mesh_to_convex"], [20, 4, 1, "", "scene_to_collision"]], "trimesh.collision.CollisionManager": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "add_object"], [20, 2, 1, "", "in_collision_internal"], [20, 2, 1, "", "in_collision_other"], [20, 2, 1, "", "in_collision_single"], [20, 2, 1, "", "min_distance_internal"], [20, 2, 1, "", "min_distance_other"], [20, 2, 1, "", "min_distance_single"], [20, 2, 1, "", "remove_object"], [20, 2, 1, "", "set_transform"]], "trimesh.collision.ContactData": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "depth"], [20, 2, 1, "", "index"], [20, 3, 1, "", "normal"], [20, 3, 1, "", "point"]], "trimesh.collision.DistanceData": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "distance"], [20, 2, 1, "", "index"], [20, 2, 1, "", "point"]], "trimesh.comparison": [[21, 4, 1, "", "identifier_hash"], [21, 4, 1, "", "identifier_simple"]], "trimesh.constants": [[22, 1, 1, "", "ResolutionPath"], [22, 1, 1, "", "ToleranceMesh"], [22, 1, 1, "", "TolerancePath"], [22, 4, 1, "", "log_time"]], "trimesh.constants.ResolutionPath": [[22, 2, 1, "", "__init__"], [22, 5, 1, "", "export"], [22, 5, 1, "", "max_sections"], [22, 5, 1, "", "min_sections"], [22, 5, 1, "", "seg_angle"], [22, 5, 1, "", "seg_frac"]], "trimesh.constants.ToleranceMesh": [[22, 2, 1, "", "__init__"], [22, 5, 1, "", "facet_threshold"], [22, 5, 1, "", "merge"], [22, 5, 1, "", "planar"], [22, 5, 1, "", "strict"], [22, 5, 1, "", "zero"]], "trimesh.constants.TolerancePath": [[22, 2, 1, "", "__init__"], [22, 5, 1, "", "aspect_frac"], [22, 5, 1, "", "merge"], [22, 5, 1, "", "planar"], [22, 5, 1, "", "radius_frac"], [22, 5, 1, "", "radius_max"], [22, 5, 1, "", "radius_min"], [22, 5, 1, "", "seg_angle"], [22, 5, 1, "", "seg_angle_frac"], [22, 5, 1, "", "seg_angle_min"], [22, 5, 1, "", "seg_frac"], [22, 5, 1, "", "strict"], [22, 5, 1, "", "tangent"], [22, 5, 1, "", "zero"]], "trimesh.convex": [[23, 4, 1, "", "adjacency_projections"], [23, 4, 1, "", "convex_hull"], [23, 4, 1, "", "hull_points"], [23, 4, 1, "", "is_convex"]], "trimesh.creation": [[24, 4, 1, "", "annulus"], [24, 4, 1, "", "axis"], [24, 4, 1, "", "box"], [24, 4, 1, "", "camera_marker"], [24, 4, 1, "", "capsule"], [24, 4, 1, "", "cone"], [24, 4, 1, "", "cylinder"], [24, 4, 1, "", "extrude_polygon"], [24, 4, 1, "", "extrude_triangulation"], [24, 4, 1, "", "icosahedron"], [24, 4, 1, "", "icosphere"], [24, 4, 1, "", "random_soup"], [24, 4, 1, "", "revolve"], [24, 4, 1, "", "sweep_polygon"], [24, 4, 1, "", "torus"], [24, 4, 1, "", "triangulate_polygon"], [24, 4, 1, "", "truncated_prisms"], [24, 4, 1, "", "uv_sphere"]], "trimesh.curvature": [[25, 4, 1, "", "discrete_gaussian_curvature_measure"], [25, 4, 1, "", "discrete_mean_curvature_measure"], [25, 4, 1, "", "face_angles_sparse"], [25, 4, 1, "", "line_ball_intersection"], [25, 4, 1, "", "sphere_ball_intersection"], [25, 4, 1, "", "vertex_defects"]], "trimesh.decomposition": [[26, 4, 1, "", "convex_decomposition"]], "trimesh.exceptions": [[27, 1, 1, "", "ExceptionWrapper"]], "trimesh.exceptions.ExceptionWrapper": [[27, 2, 1, "", "__init__"]], "trimesh.exchange": [[29, 0, 0, "-", "binvox"], [30, 0, 0, "-", "cascade"], [31, 0, 0, "-", "dae"], [32, 0, 0, "-", "export"], [33, 0, 0, "-", "gltf"], [34, 0, 0, "-", "load"], [35, 0, 0, "-", "misc"], [36, 0, 0, "-", "obj"], [37, 0, 0, "-", "off"], [38, 0, 0, "-", "ply"], [39, 0, 0, "-", "stl"], [40, 0, 0, "-", "threedxml"], [41, 0, 0, "-", "threemf"], [42, 0, 0, "-", "urdf"], [43, 0, 0, "-", "xaml"], [44, 0, 0, "-", "xyz"]], "trimesh.exchange.binvox": [[29, 1, 1, "", "Binvox"], [29, 1, 1, "", "Binvoxer"], [29, 4, 1, "", "binvox_bytes"], [29, 4, 1, "", "binvox_header"], [29, 4, 1, "", "export_binvox"], [29, 4, 1, "", "load_binvox"], [29, 4, 1, "", "parse_binvox"], [29, 4, 1, "", "parse_binvox_header"], [29, 4, 1, "", "voxel_from_binvox"], [29, 4, 1, "", "voxelize_mesh"]], "trimesh.exchange.binvox.Binvox": [[29, 5, 1, "", "rle_data"], [29, 5, 1, "", "scale"], [29, 5, 1, "", "shape"], [29, 5, 1, "", "translate"]], "trimesh.exchange.binvox.Binvoxer": [[29, 5, 1, "", "SUPPORTED_INPUT_TYPES"], [29, 5, 1, "", "SUPPORTED_OUTPUT_TYPES"], [29, 2, 1, "", "__init__"], [29, 3, 1, "", "file_type"]], "trimesh.exchange.cascade": [[30, 4, 1, "", "load_step"]], "trimesh.exchange.dae": [[31, 4, 1, "", "export_collada"], [31, 4, 1, "", "load_collada"], [31, 4, 1, "", "load_zae"]], "trimesh.exchange.export": [[32, 4, 1, "", "export_dict"], [32, 4, 1, "", "export_dict64"], [32, 4, 1, "", "export_mesh"], [32, 4, 1, "", "export_scene"], [32, 4, 1, "", "scene_to_dict"]], "trimesh.exchange.gltf": [[33, 4, 1, "", "export_glb"], [33, 4, 1, "", "export_gltf"], [33, 4, 1, "", "get_schema"], [33, 4, 1, "", "load_glb"], [33, 4, 1, "", "load_gltf"], [33, 4, 1, "", "validate"]], "trimesh.exchange.load": [[34, 4, 1, "", "available_formats"], [34, 4, 1, "", "load"], [34, 4, 1, "", "load_compressed"], [34, 4, 1, "", "load_kwargs"], [34, 4, 1, "", "load_mesh"], [34, 4, 1, "", "load_remote"], [34, 4, 1, "", "mesh_formats"]], "trimesh.exchange.misc": [[35, 4, 1, "", "load_dict"], [35, 4, 1, "", "load_meshio"]], "trimesh.exchange.obj": [[36, 4, 1, "", "export_obj"], [36, 4, 1, "", "load_obj"], [36, 4, 1, "", "parse_mtl"]], "trimesh.exchange.off": [[37, 4, 1, "", "export_off"], [37, 4, 1, "", "load_off"]], "trimesh.exchange.ply": [[38, 4, 1, "", "export_draco"], [38, 4, 1, "", "export_ply"], [38, 4, 1, "", "load_draco"], [38, 4, 1, "", "load_ply"]], "trimesh.exchange.stl": [[39, 6, 1, "", "HeaderError"], [39, 4, 1, "", "export_stl"], [39, 4, 1, "", "export_stl_ascii"], [39, 4, 1, "", "load_stl"], [39, 4, 1, "", "load_stl_ascii"], [39, 4, 1, "", "load_stl_binary"]], "trimesh.exchange.threedxml": [[40, 4, 1, "", "load_3DXML"], [40, 4, 1, "", "print_element"]], "trimesh.exchange.threemf": [[41, 4, 1, "", "export_3MF"], [41, 4, 1, "", "load_3MF"]], "trimesh.exchange.urdf": [[42, 4, 1, "", "export_urdf"]], "trimesh.exchange.xaml": [[43, 4, 1, "", "load_XAML"]], "trimesh.exchange.xyz": [[44, 4, 1, "", "export_xyz"], [44, 4, 1, "", "load_xyz"]], "trimesh.geometry": [[45, 4, 1, "", "align_vectors"], [45, 4, 1, "", "faces_to_edges"], [45, 4, 1, "", "index_sparse"], [45, 4, 1, "", "mean_vertex_normals"], [45, 4, 1, "", "plane_transform"], [45, 4, 1, "", "triangulate_quads"], [45, 4, 1, "", "vector_angle"], [45, 4, 1, "", "vertex_face_indices"], [45, 4, 1, "", "weighted_vertex_normals"]], "trimesh.graph": [[46, 4, 1, "", "connected_component_labels"], [46, 4, 1, "", "connected_components"], [46, 4, 1, "", "edges_to_coo"], [46, 4, 1, "", "face_adjacency"], [46, 4, 1, "", "face_adjacency_radius"], [46, 4, 1, "", "face_adjacency_unshared"], [46, 4, 1, "", "face_neighborhood"], [46, 4, 1, "", "facets"], [46, 4, 1, "", "fill_traversals"], [46, 4, 1, "", "graph_to_svg"], [46, 4, 1, "", "is_watertight"], [46, 4, 1, "", "multigraph_collect"], [46, 4, 1, "", "multigraph_paths"], [46, 4, 1, "", "neighbors"], [46, 4, 1, "", "shared_edges"], [46, 4, 1, "", "smooth_shade"], [46, 4, 1, "", "smoothed"], [46, 4, 1, "", "split"], [46, 4, 1, "", "split_traversal"], [46, 4, 1, "", "traversals"], [46, 4, 1, "", "vertex_adjacency_graph"]], "trimesh.grouping": [[47, 4, 1, "", "blocks"], [47, 4, 1, "", "boolean_rows"], [47, 4, 1, "", "clusters"], [47, 4, 1, "", "float_to_int"], [47, 4, 1, "", "group"], [47, 4, 1, "", "group_distance"], [47, 4, 1, "", "group_min"], [47, 4, 1, "", "group_rows"], [47, 4, 1, "", "group_vectors"], [47, 4, 1, "", "hashable_rows"], [47, 4, 1, "", "merge_runs"], [47, 4, 1, "", "merge_vertices"], [47, 4, 1, "", "unique_bincount"], [47, 4, 1, "", "unique_float"], [47, 4, 1, "", "unique_ordered"], [47, 4, 1, "", "unique_rows"], [47, 4, 1, "", "unique_value_in_row"]], "trimesh.inertia": [[48, 4, 1, "", "cylinder_inertia"], [48, 4, 1, "", "principal_axis"], [48, 4, 1, "", "radial_symmetry"], [48, 4, 1, "", "scene_inertia"], [48, 4, 1, "", "sphere_inertia"], [48, 4, 1, "", "transform_inertia"]], "trimesh.interfaces": [[50, 0, 0, "-", "blender"], [51, 0, 0, "-", "generic"], [52, 0, 0, "-", "gmsh"]], "trimesh.interfaces.blender": [[50, 4, 1, "", "boolean"], [50, 4, 1, "", "unwrap"]], "trimesh.interfaces.generic": [[51, 1, 1, "", "MeshScript"]], "trimesh.interfaces.generic.MeshScript": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "run"]], "trimesh.interfaces.gmsh": [[52, 4, 1, "", "load_gmsh"], [52, 4, 1, "", "to_volume"]], "trimesh.intersections": [[53, 4, 1, "", "mesh_multiplane"], [53, 4, 1, "", "mesh_plane"], [53, 4, 1, "", "plane_lines"], [53, 4, 1, "", "planes_lines"], [53, 4, 1, "", "slice_faces_plane"], [53, 4, 1, "", "slice_mesh_plane"]], "trimesh.interval": [[54, 4, 1, "", "intersection"], [54, 4, 1, "", "union"]], "trimesh.nsphere": [[55, 4, 1, "", "fit_nsphere"], [55, 4, 1, "", "is_nsphere"], [55, 4, 1, "", "minimum_nsphere"]], "trimesh.parent": [[56, 1, 1, "", "Geometry"], [56, 1, 1, "", "Geometry3D"]], "trimesh.parent.Geometry": [[56, 2, 1, "", "apply_scale"], [56, 2, 1, "", "apply_transform"], [56, 2, 1, "", "apply_translation"], [56, 3, 1, "", "bounds"], [56, 2, 1, "", "copy"], [56, 2, 1, "", "export"], [56, 3, 1, "", "extents"], [56, 3, 1, "", "is_empty"], [56, 5, 1, "", "metadata"], [56, 3, 1, "", "scale"], [56, 2, 1, "", "show"], [56, 3, 1, "", "units"]], "trimesh.parent.Geometry3D": [[56, 2, 1, "", "apply_obb"], [56, 3, 1, "", "bounding_box"], [56, 3, 1, "", "bounding_box_oriented"], [56, 3, 1, "", "bounding_cylinder"], [56, 3, 1, "", "bounding_primitive"], [56, 3, 1, "", "bounding_sphere"]], "trimesh.path": [[57, 1, 1, "", "Path2D"], [57, 1, 1, "", "Path3D"], [58, 0, 0, "-", "arc"], [59, 0, 0, "-", "creation"], [60, 0, 0, "-", "curve"], [61, 0, 0, "-", "entities"], [62, 0, 0, "-", "exchange"], [68, 0, 0, "-", "intersections"], [69, 0, 0, "-", "packing"], [70, 0, 0, "-", "path"], [71, 0, 0, "-", "polygons"], [72, 0, 0, "-", "raster"], [73, 0, 0, "-", "repair"], [74, 0, 0, "-", "segments"], [75, 0, 0, "-", "simplify"], [76, 0, 0, "-", "traversal"], [77, 0, 0, "-", "util"]], "trimesh.path.Path2D": [[57, 2, 1, "", "apply_obb"], [57, 2, 1, "", "apply_scale"], [57, 3, 1, "", "area"], [57, 3, 1, "", "body_count"], [57, 2, 1, "", "connected_paths"], [57, 3, 1, "", "enclosure"], [57, 3, 1, "", "enclosure_directed"], [57, 3, 1, "", "enclosure_shell"], [57, 2, 1, "", "extrude"], [57, 3, 1, "", "identifier"], [57, 3, 1, "", "identifier_hash"], [57, 2, 1, "", "medial_axis"], [57, 3, 1, "", "obb"], [57, 3, 1, "", "path_valid"], [57, 2, 1, "", "plot_discrete"], [57, 2, 1, "", "plot_entities"], [57, 3, 1, "", "polygons_closed"], [57, 3, 1, "", "polygons_full"], [57, 2, 1, "", "rasterize"], [57, 3, 1, "", "root"], [57, 2, 1, "", "sample"], [57, 2, 1, "", "show"], [57, 2, 1, "", "simplify"], [57, 2, 1, "", "simplify_spline"], [57, 2, 1, "", "split"], [57, 2, 1, "", "to_3D"], [57, 2, 1, "", "triangulate"]], "trimesh.path.Path3D": [[57, 2, 1, "", "show"], [57, 2, 1, "", "to_planar"]], "trimesh.path.arc": [[58, 1, 1, "", "ArcInfo"], [58, 4, 1, "", "arc_center"], [58, 4, 1, "", "discretize_arc"], [58, 4, 1, "", "to_threepoint"]], "trimesh.path.arc.ArcInfo": [[58, 2, 1, "", "__init__"], [58, 5, 1, "", "angles"], [58, 5, 1, "", "center"], [58, 5, 1, "", "normal"], [58, 5, 1, "", "radius"], [58, 5, 1, "", "span"]], "trimesh.path.creation": [[59, 4, 1, "", "box_outline"], [59, 4, 1, "", "circle"], [59, 4, 1, "", "circle_pattern"], [59, 4, 1, "", "grid"], [59, 4, 1, "", "rectangle"]], "trimesh.path.curve": [[60, 4, 1, "", "binomial"], [60, 4, 1, "", "discretize_bezier"], [60, 4, 1, "", "discretize_bspline"]], "trimesh.path.entities": [[61, 1, 1, "", "Arc"], [61, 1, 1, "", "BSpline"], [61, 1, 1, "", "Bezier"], [61, 1, 1, "", "Curve"], [61, 1, 1, "", "Entity"], [61, 1, 1, "", "Line"], [61, 1, 1, "", "Text"]], "trimesh.path.entities.Arc": [[61, 2, 1, "", "bounds"], [61, 2, 1, "", "center"], [61, 3, 1, "", "closed"], [61, 2, 1, "", "discrete"], [61, 3, 1, "", "is_valid"], [61, 2, 1, "", "length"]], "trimesh.path.entities.BSpline": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "discrete"], [61, 2, 1, "", "to_dict"]], "trimesh.path.entities.Bezier": [[61, 2, 1, "", "discrete"]], "trimesh.path.entities.Curve": [[61, 3, 1, "", "nodes"]], "trimesh.path.entities.Entity": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "bounds"], [61, 3, 1, "", "closed"], [61, 2, 1, "", "copy"], [61, 3, 1, "", "end_points"], [61, 2, 1, "", "explode"], [61, 3, 1, "", "is_valid"], [61, 3, 1, "", "layer"], [61, 2, 1, "", "length"], [61, 3, 1, "", "metadata"], [61, 3, 1, "", "nodes"], [61, 2, 1, "", "reverse"], [61, 2, 1, "", "to_dict"]], "trimesh.path.entities.Line": [[61, 2, 1, "", "discrete"], [61, 2, 1, "", "explode"], [61, 3, 1, "", "is_valid"]], "trimesh.path.entities.Text": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "angle"], [61, 3, 1, "", "closed"], [61, 2, 1, "", "discrete"], [61, 3, 1, "", "end_points"], [61, 3, 1, "", "is_valid"], [61, 2, 1, "", "length"], [61, 3, 1, "", "nodes"], [61, 3, 1, "", "normal"], [61, 3, 1, "", "origin"], [61, 2, 1, "", "plot"], [61, 3, 1, "", "vector"]], "trimesh.path.exchange": [[63, 0, 0, "-", "dxf"], [64, 0, 0, "-", "export"], [65, 0, 0, "-", "load"], [66, 0, 0, "-", "misc"], [67, 0, 0, "-", "svg_io"]], "trimesh.path.exchange.dxf": [[63, 4, 1, "", "bulge_to_arcs"], [63, 4, 1, "", "convert_entities"], [63, 4, 1, "", "export_dxf"], [63, 4, 1, "", "get_key"], [63, 4, 1, "", "load_dxf"]], "trimesh.path.exchange.export": [[64, 4, 1, "", "export_dict"], [64, 4, 1, "", "export_path"]], "trimesh.path.exchange.load": [[65, 4, 1, "", "load_path"], [65, 4, 1, "", "path_formats"]], "trimesh.path.exchange.misc": [[66, 4, 1, "", "dict_to_path"], [66, 4, 1, "", "edges_to_path"], [66, 4, 1, "", "faces_to_path"], [66, 4, 1, "", "lines_to_path"], [66, 4, 1, "", "linestrings_to_path"], [66, 4, 1, "", "polygon_to_path"]], "trimesh.path.exchange.svg_io": [[67, 4, 1, "", "export_svg"], [67, 4, 1, "", "svg_to_path"], [67, 4, 1, "", "transform_to_matrices"]], "trimesh.path.intersections": [[68, 4, 1, "", "line_line"]], "trimesh.path.packing": [[69, 1, 1, "", "RectangleBin"], [69, 4, 1, "", "bounds_overlap"], [69, 4, 1, "", "images"], [69, 4, 1, "", "meshes"], [69, 4, 1, "", "paths"], [69, 4, 1, "", "polygons"], [69, 4, 1, "", "rectangles"], [69, 4, 1, "", "rectangles_single"], [69, 4, 1, "", "roll_transform"], [69, 4, 1, "", "visualize"]], "trimesh.path.packing.RectangleBin": [[69, 2, 1, "", "__init__"], [69, 3, 1, "", "extents"], [69, 2, 1, "", "insert"]], "trimesh.path.path": [[70, 1, 1, "", "Path"], [70, 1, 1, "", "Path2D"], [70, 1, 1, "", "Path3D"]], "trimesh.path.path.Path": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "apply_layer"], [70, 2, 1, "", "apply_transform"], [70, 3, 1, "", "bounds"], [70, 3, 1, "", "centroid"], [70, 3, 1, "", "colors"], [70, 2, 1, "", "convert_units"], [70, 2, 1, "", "copy"], [70, 3, 1, "", "dangling"], [70, 3, 1, "", "discrete"], [70, 3, 1, "", "entities"], [70, 2, 1, "", "explode"], [70, 2, 1, "", "export"], [70, 3, 1, "", "extents"], [70, 2, 1, "", "fill_gaps"], [70, 3, 1, "", "is_closed"], [70, 3, 1, "", "is_empty"], [70, 3, 1, "", "kdtree"], [70, 3, 1, "", "layers"], [70, 3, 1, "", "length"], [70, 2, 1, "", "merge_vertices"], [70, 3, 1, "", "paths"], [70, 2, 1, "", "process"], [70, 3, 1, "", "referenced_vertices"], [70, 2, 1, "", "remove_duplicate_entities"], [70, 2, 1, "", "remove_entities"], [70, 2, 1, "", "remove_invalid"], [70, 2, 1, "", "remove_unreferenced_vertices"], [70, 2, 1, "", "replace_vertex_references"], [70, 2, 1, "", "rezero"], [70, 2, 1, "", "scene"], [70, 2, 1, "", "to_dict"], [70, 3, 1, "", "vertex_graph"], [70, 3, 1, "", "vertex_nodes"], [70, 3, 1, "", "vertices"]], "trimesh.path.path.Path2D": [[70, 2, 1, "", "apply_obb"], [70, 2, 1, "", "apply_scale"], [70, 3, 1, "", "area"], [70, 3, 1, "", "body_count"], [70, 2, 1, "", "connected_paths"], [70, 3, 1, "", "enclosure"], [70, 3, 1, "", "enclosure_directed"], [70, 3, 1, "", "enclosure_shell"], [70, 2, 1, "", "extrude"], [70, 3, 1, "", "identifier"], [70, 3, 1, "", "identifier_hash"], [70, 2, 1, "", "medial_axis"], [70, 3, 1, "", "obb"], [70, 3, 1, "", "path_valid"], [70, 2, 1, "", "plot_discrete"], [70, 2, 1, "", "plot_entities"], [70, 3, 1, "", "polygons_closed"], [70, 3, 1, "", "polygons_full"], [70, 2, 1, "", "rasterize"], [70, 3, 1, "", "root"], [70, 2, 1, "", "sample"], [70, 2, 1, "", "show"], [70, 2, 1, "", "simplify"], [70, 2, 1, "", "simplify_spline"], [70, 2, 1, "", "split"], [70, 2, 1, "", "to_3D"], [70, 2, 1, "", "triangulate"]], "trimesh.path.path.Path3D": [[70, 2, 1, "", "show"], [70, 2, 1, "", "to_planar"]], "trimesh.path.polygons": [[71, 4, 1, "", "edges_to_polygons"], [71, 4, 1, "", "enclosure_tree"], [71, 4, 1, "", "identifier"], [71, 4, 1, "", "medial_axis"], [71, 4, 1, "", "paths_to_polygons"], [71, 4, 1, "", "plot"], [71, 4, 1, "", "polygon_bounds"], [71, 4, 1, "", "polygon_obb"], [71, 4, 1, "", "polygon_scale"], [71, 4, 1, "", "polygons_obb"], [71, 4, 1, "", "projected"], [71, 4, 1, "", "random_polygon"], [71, 4, 1, "", "repair_invalid"], [71, 4, 1, "", "resample_boundaries"], [71, 4, 1, "", "sample"], [71, 4, 1, "", "second_moments"], [71, 4, 1, "", "stack_boundaries"], [71, 4, 1, "", "transform_polygon"]], "trimesh.path.raster": [[72, 4, 1, "", "rasterize"]], "trimesh.path.repair": [[73, 4, 1, "", "fill_gaps"]], "trimesh.path.segments": [[74, 4, 1, "", "clean"], [74, 4, 1, "", "colinear_pairs"], [74, 4, 1, "", "extrude"], [74, 4, 1, "", "length"], [74, 4, 1, "", "parameters_to_segments"], [74, 4, 1, "", "resample"], [74, 4, 1, "", "segments_to_parameters"], [74, 4, 1, "", "split"], [74, 4, 1, "", "to_svg"], [74, 4, 1, "", "unique"]], "trimesh.path.simplify": [[75, 4, 1, "", "fit_circle_check"], [75, 4, 1, "", "is_circle"], [75, 4, 1, "", "merge_colinear"], [75, 4, 1, "", "points_to_spline_entity"], [75, 4, 1, "", "resample_spline"], [75, 4, 1, "", "simplify_basic"], [75, 4, 1, "", "simplify_spline"]], "trimesh.path.traversal": [[76, 1, 1, "", "PathSample"], [76, 4, 1, "", "closed_paths"], [76, 4, 1, "", "discretize_path"], [76, 4, 1, "", "resample_path"], [76, 4, 1, "", "split"], [76, 4, 1, "", "vertex_graph"], [76, 4, 1, "", "vertex_to_entity_path"]], "trimesh.path.traversal.PathSample": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "sample"], [76, 2, 1, "", "truncate"]], "trimesh.path.util": [[77, 4, 1, "", "concatenate"]], "trimesh.permutate": [[78, 1, 1, "", "Permutator"], [78, 4, 1, "", "noise"], [78, 4, 1, "", "tessellation"], [78, 4, 1, "", "transform"]], "trimesh.permutate.Permutator": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "noise"], [78, 2, 1, "", "tessellation"], [78, 2, 1, "", "transform"]], "trimesh.points": [[79, 1, 1, "", "PointCloud"], [79, 4, 1, "", "k_means"], [79, 4, 1, "", "major_axis"], [79, 4, 1, "", "plane_fit"], [79, 4, 1, "", "plot_points"], [79, 4, 1, "", "point_plane_distance"], [79, 4, 1, "", "project_to_plane"], [79, 4, 1, "", "radial_sort"], [79, 4, 1, "", "remove_close"], [79, 4, 1, "", "tsp"]], "trimesh.points.PointCloud": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "apply_transform"], [79, 3, 1, "", "bounds"], [79, 3, 1, "", "centroid"], [79, 3, 1, "", "colors"], [79, 3, 1, "", "convex_hull"], [79, 2, 1, "", "copy"], [79, 2, 1, "", "crc"], [79, 2, 1, "", "export"], [79, 3, 1, "", "extents"], [79, 2, 1, "", "hash"], [79, 3, 1, "", "is_empty"], [79, 3, 1, "", "kdtree"], [79, 2, 1, "", "merge_vertices"], [79, 2, 1, "", "query"], [79, 2, 1, "", "scene"], [79, 3, 1, "", "shape"], [79, 2, 1, "", "show"], [79, 3, 1, "", "vertices"]], "trimesh.poses": [[80, 4, 1, "", "compute_stable_poses"]], "trimesh.primitives": [[81, 1, 1, "", "Box"], [81, 1, 1, "", "Capsule"], [81, 1, 1, "", "Cylinder"], [81, 1, 1, "", "Extrusion"], [81, 1, 1, "", "Primitive"], [81, 1, 1, "", "PrimitiveAttributes"], [81, 1, 1, "", "Sphere"]], "trimesh.primitives.Box": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "as_outline"], [81, 3, 1, "", "is_oriented"], [81, 2, 1, "", "sample_grid"], [81, 2, 1, "", "sample_volume"], [81, 2, 1, "", "to_dict"], [81, 3, 1, "", "transform"], [81, 3, 1, "", "volume"]], "trimesh.primitives.Capsule": [[81, 2, 1, "", "__init__"], [81, 3, 1, "", "direction"], [81, 2, 1, "", "to_dict"], [81, 3, 1, "", "transform"]], "trimesh.primitives.Cylinder": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "buffer"], [81, 3, 1, "", "direction"], [81, 3, 1, "", "moment_inertia"], [81, 3, 1, "", "segment"], [81, 2, 1, "", "to_dict"], [81, 3, 1, "", "volume"]], "trimesh.primitives.Extrusion": [[81, 2, 1, "", "__init__"], [81, 3, 1, "", "area"], [81, 3, 1, "", "bounding_box_oriented"], [81, 2, 1, "", "buffer"], [81, 3, 1, "", "direction"], [81, 3, 1, "", "origin"], [81, 2, 1, "", "slide"], [81, 2, 1, "", "to_dict"], [81, 3, 1, "", "transform"], [81, 3, 1, "", "volume"]], "trimesh.primitives.Primitive": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "apply_transform"], [81, 2, 1, "", "copy"], [81, 3, 1, "", "face_normals"], [81, 3, 1, "", "faces"], [81, 2, 1, "", "to_dict"], [81, 2, 1, "", "to_mesh"], [81, 3, 1, "", "transform"], [81, 3, 1, "", "vertices"]], "trimesh.primitives.PrimitiveAttributes": [[81, 2, 1, "", "__init__"]], "trimesh.primitives.Sphere": [[81, 2, 1, "", "__init__"], [81, 3, 1, "", "area"], [81, 3, 1, "", "bounding_box_oriented"], [81, 3, 1, "", "bounds"], [81, 3, 1, "", "center"], [81, 3, 1, "", "moment_inertia"], [81, 2, 1, "", "to_dict"], [81, 3, 1, "", "volume"]], "trimesh.proximity": [[82, 1, 1, "", "NearestQueryResult"], [82, 1, 1, "", "ProximityQuery"], [82, 4, 1, "", "closest_point"], [82, 4, 1, "", "closest_point_naive"], [82, 4, 1, "", "longest_ray"], [82, 4, 1, "", "max_tangent_sphere"], [82, 4, 1, "", "nearby_faces"], [82, 4, 1, "", "signed_distance"], [82, 4, 1, "", "thickness"]], "trimesh.proximity.NearestQueryResult": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "has_normals"]], "trimesh.proximity.ProximityQuery": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "on_surface"], [82, 2, 1, "", "signed_distance"], [82, 2, 1, "", "vertex"]], "trimesh.ray": [[84, 0, 0, "-", "ray_pyembree"], [85, 0, 0, "-", "ray_triangle"], [86, 0, 0, "-", "ray_util"]], "trimesh.ray.ray_pyembree": [[84, 1, 1, "", "RayMeshIntersector"]], "trimesh.ray.ray_pyembree.RayMeshIntersector": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "contains_points"], [84, 2, 1, "", "intersects_any"], [84, 2, 1, "", "intersects_first"], [84, 2, 1, "", "intersects_id"], [84, 2, 1, "", "intersects_location"]], "trimesh.ray.ray_triangle": [[85, 1, 1, "", "RayMeshIntersector"], [85, 4, 1, "", "ray_bounds"], [85, 4, 1, "", "ray_triangle_candidates"], [85, 4, 1, "", "ray_triangle_id"]], "trimesh.ray.ray_triangle.RayMeshIntersector": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "contains_points"], [85, 2, 1, "", "intersects_any"], [85, 2, 1, "", "intersects_first"], [85, 2, 1, "", "intersects_id"], [85, 2, 1, "", "intersects_location"]], "trimesh.registration": [[87, 4, 1, "", "icp"], [87, 4, 1, "", "mesh_other"], [87, 4, 1, "", "nricp_amberg"], [87, 4, 1, "", "nricp_sumner"], [87, 4, 1, "", "procrustes"]], "trimesh.remesh": [[88, 4, 1, "", "subdivide"], [88, 4, 1, "", "subdivide_loop"], [88, 4, 1, "", "subdivide_to_size"]], "trimesh.rendering": [[89, 4, 1, "", "colors_to_gl"], [89, 4, 1, "", "convert_to_vertexlist"], [89, 4, 1, "", "light_to_gl"], [89, 4, 1, "", "material_to_texture"], [89, 4, 1, "", "matrix_to_gl"], [89, 4, 1, "", "mesh_to_vertexlist"], [89, 4, 1, "", "path_to_vertexlist"], [89, 4, 1, "", "points_to_vertexlist"], [89, 4, 1, "", "vector_to_gl"]], "trimesh.repair": [[90, 4, 1, "", "broken_faces"], [90, 4, 1, "", "fill_holes"], [90, 4, 1, "", "fix_inversion"], [90, 4, 1, "", "fix_normals"], [90, 4, 1, "", "fix_winding"], [90, 4, 1, "", "stitch"]], "trimesh.resolvers": [[91, 1, 1, "", "FilePathResolver"], [91, 1, 1, "", "GithubResolver"], [91, 1, 1, "", "Resolver"], [91, 1, 1, "", "WebResolver"], [91, 1, 1, "", "ZipResolver"], [91, 4, 1, "", "nearby_names"]], "trimesh.resolvers.FilePathResolver": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "get"], [91, 2, 1, "", "keys"], [91, 2, 1, "", "namespaced"], [91, 2, 1, "", "write"]], "trimesh.resolvers.GithubResolver": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "get"], [91, 2, 1, "", "keys"], [91, 2, 1, "", "namespaced"], [91, 2, 1, "", "write"], [91, 3, 1, "", "zipped"]], "trimesh.resolvers.Resolver": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "get"], [91, 2, 1, "", "namespaced"], [91, 2, 1, "", "write"]], "trimesh.resolvers.WebResolver": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "get"], [91, 2, 1, "", "namespaced"], [91, 2, 1, "", "write"]], "trimesh.resolvers.ZipResolver": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "export"], [91, 2, 1, "", "get"], [91, 2, 1, "", "keys"], [91, 2, 1, "", "namespaced"], [91, 2, 1, "", "write"]], "trimesh.resources": [[92, 4, 1, "", "get"], [92, 4, 1, "", "get_bytes"], [92, 4, 1, "", "get_json"], [92, 4, 1, "", "get_schema"], [92, 4, 1, "", "get_stream"], [92, 4, 1, "", "get_string"]], "trimesh.sample": [[93, 4, 1, "", "sample_surface"], [93, 4, 1, "", "sample_surface_even"], [93, 4, 1, "", "sample_surface_sphere"], [93, 4, 1, "", "volume_mesh"], [93, 4, 1, "", "volume_rectangular"]], "trimesh.scene": [[94, 1, 1, "", "Camera"], [94, 1, 1, "", "Scene"], [95, 0, 0, "-", "cameras"], [96, 0, 0, "-", "lighting"], [97, 0, 0, "-", "scene"], [94, 4, 1, "", "split_scene"], [98, 0, 0, "-", "transforms"]], "trimesh.scene.Camera": [[94, 3, 1, "", "K"], [94, 2, 1, "", "__init__"], [94, 2, 1, "", "angles"], [94, 2, 1, "", "copy"], [94, 3, 1, "", "focal"], [94, 3, 1, "", "fov"], [94, 2, 1, "", "look_at"], [94, 3, 1, "", "resolution"], [94, 2, 1, "", "to_rays"]], "trimesh.scene.Scene": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "add_geometry"], [94, 2, 1, "", "apply_transform"], [94, 3, 1, "", "area"], [94, 3, 1, "", "bounds"], [94, 3, 1, "", "bounds_corners"], [94, 3, 1, "", "camera"], [94, 2, 1, "", "camera_rays"], [94, 3, 1, "", "camera_transform"], [94, 3, 1, "", "center_mass"], [94, 3, 1, "", "centroid"], [94, 2, 1, "", "convert_units"], [94, 3, 1, "", "convex_hull"], [94, 2, 1, "", "copy"], [94, 2, 1, "", "deduplicated"], [94, 2, 1, "", "delete_geometry"], [94, 2, 1, "", "dump"], [94, 3, 1, "", "duplicate_nodes"], [94, 2, 1, "", "explode"], [94, 2, 1, "", "export"], [94, 3, 1, "", "extents"], [94, 3, 1, "", "geometry_identifiers"], [94, 3, 1, "", "has_camera"], [94, 3, 1, "", "is_empty"], [94, 3, 1, "", "is_valid"], [94, 3, 1, "", "lights"], [94, 3, 1, "", "moment_inertia"], [94, 2, 1, "", "moment_inertia_frame"], [94, 2, 1, "", "rezero"], [94, 2, 1, "", "save_image"], [94, 3, 1, "", "scale"], [94, 2, 1, "", "scaled"], [94, 2, 1, "", "set_camera"], [94, 2, 1, "", "show"], [94, 2, 1, "", "strip_visuals"], [94, 2, 1, "", "subscene"], [94, 3, 1, "", "triangles"], [94, 3, 1, "", "triangles_node"], [94, 3, 1, "", "units"], [94, 3, 1, "", "volume"]], "trimesh.scene.cameras": [[95, 1, 1, "", "Camera"], [95, 4, 1, "", "camera_to_rays"], [95, 4, 1, "", "look_at"], [95, 4, 1, "", "ray_pixel_coords"]], "trimesh.scene.cameras.Camera": [[95, 3, 1, "", "K"], [95, 2, 1, "", "__init__"], [95, 2, 1, "", "angles"], [95, 2, 1, "", "copy"], [95, 3, 1, "", "focal"], [95, 3, 1, "", "fov"], [95, 2, 1, "", "look_at"], [95, 3, 1, "", "resolution"], [95, 2, 1, "", "to_rays"]], "trimesh.scene.lighting": [[96, 1, 1, "", "DirectionalLight"], [96, 1, 1, "", "Light"], [96, 1, 1, "", "PointLight"], [96, 1, 1, "", "SpotLight"], [96, 4, 1, "", "autolight"]], "trimesh.scene.lighting.DirectionalLight": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "color"], [96, 5, 1, "", "intensity"], [96, 5, 1, "", "name"], [96, 5, 1, "", "radius"]], "trimesh.scene.lighting.Light": [[96, 2, 1, "", "__init__"], [96, 3, 1, "id0", "color"], [96, 3, 1, "id1", "intensity"], [96, 5, 1, "", "name"], [96, 3, 1, "id2", "radius"]], "trimesh.scene.lighting.PointLight": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "color"], [96, 5, 1, "", "intensity"], [96, 5, 1, "", "name"], [96, 5, 1, "", "radius"]], "trimesh.scene.lighting.SpotLight": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "color"], [96, 3, 1, "id3", "innerConeAngle"], [96, 5, 1, "", "intensity"], [96, 5, 1, "", "name"], [96, 3, 1, "id4", "outerConeAngle"], [96, 5, 1, "", "radius"]], "trimesh.scene.scene": [[97, 1, 1, "", "Scene"], [97, 4, 1, "", "append_scenes"], [97, 4, 1, "", "split_scene"]], "trimesh.scene.scene.Scene": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "add_geometry"], [97, 2, 1, "", "apply_transform"], [97, 3, 1, "", "area"], [97, 3, 1, "", "bounds"], [97, 3, 1, "", "bounds_corners"], [97, 3, 1, "", "camera"], [97, 2, 1, "", "camera_rays"], [97, 3, 1, "", "camera_transform"], [97, 3, 1, "", "center_mass"], [97, 3, 1, "", "centroid"], [97, 2, 1, "", "convert_units"], [97, 3, 1, "", "convex_hull"], [97, 2, 1, "", "copy"], [97, 2, 1, "", "deduplicated"], [97, 2, 1, "", "delete_geometry"], [97, 2, 1, "", "dump"], [97, 3, 1, "", "duplicate_nodes"], [97, 2, 1, "", "explode"], [97, 2, 1, "", "export"], [97, 3, 1, "", "extents"], [97, 3, 1, "", "geometry_identifiers"], [97, 3, 1, "", "has_camera"], [97, 3, 1, "", "is_empty"], [97, 3, 1, "", "is_valid"], [97, 3, 1, "", "lights"], [97, 3, 1, "", "moment_inertia"], [97, 2, 1, "", "moment_inertia_frame"], [97, 2, 1, "", "rezero"], [97, 2, 1, "", "save_image"], [97, 3, 1, "", "scale"], [97, 2, 1, "", "scaled"], [97, 2, 1, "", "set_camera"], [97, 2, 1, "", "show"], [97, 2, 1, "", "strip_visuals"], [97, 2, 1, "", "subscene"], [97, 3, 1, "", "triangles"], [97, 3, 1, "", "triangles_node"], [97, 3, 1, "", "units"], [97, 3, 1, "", "volume"]], "trimesh.scene.transforms": [[98, 1, 1, "", "EnforcedForest"], [98, 1, 1, "", "SceneGraph"], [98, 4, 1, "", "kwargs_to_matrix"]], "trimesh.scene.transforms.EnforcedForest": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "add_edge"], [98, 3, 1, "", "children"], [98, 3, 1, "", "nodes"], [98, 2, 1, "", "remove_node"], [98, 2, 1, "", "shortest_path"], [98, 2, 1, "", "successors"]], "trimesh.scene.transforms.SceneGraph": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "clear"], [98, 2, 1, "", "copy"], [98, 2, 1, "", "from_edgelist"], [98, 3, 1, "", "geometry_nodes"], [98, 2, 1, "", "get"], [98, 2, 1, "", "load"], [98, 3, 1, "", "nodes"], [98, 3, 1, "", "nodes_geometry"], [98, 2, 1, "", "remove_geometries"], [98, 2, 1, "", "show"], [98, 2, 1, "", "to_edgelist"], [98, 2, 1, "", "to_flattened"], [98, 2, 1, "", "to_gltf"], [98, 2, 1, "", "to_networkx"], [98, 2, 1, "", "update"]], "trimesh.schemas": [[99, 4, 1, "", "resolve"]], "trimesh.smoothing": [[100, 4, 1, "", "dilate_slope"], [100, 4, 1, "", "filter_humphrey"], [100, 4, 1, "", "filter_laplacian"], [100, 4, 1, "", "filter_mut_dif_laplacian"], [100, 4, 1, "", "filter_taubin"], [100, 4, 1, "", "get_vertices_normals"], [100, 4, 1, "", "laplacian_calculation"]], "trimesh.transformations": [[101, 1, 1, "", "Arcball"], [101, 4, 1, "", "affine_matrix_from_points"], [101, 4, 1, "", "angle_between_vectors"], [101, 4, 1, "", "arcball_constrain_to_axis"], [101, 4, 1, "", "arcball_map_to_sphere"], [101, 4, 1, "", "arcball_nearest_axis"], [101, 4, 1, "", "clip_matrix"], [101, 4, 1, "", "compose_matrix"], [101, 4, 1, "", "concatenate_matrices"], [101, 4, 1, "", "decompose_matrix"], [101, 4, 1, "", "euler_from_matrix"], [101, 4, 1, "", "euler_from_quaternion"], [101, 4, 1, "", "euler_matrix"], [101, 4, 1, "", "fix_rigid"], [101, 4, 1, "", "flips_winding"], [101, 4, 1, "", "identity_matrix"], [101, 4, 1, "", "inverse_matrix"], [101, 4, 1, "", "is_rigid"], [101, 4, 1, "", "is_same_quaternion"], [101, 4, 1, "", "is_same_transform"], [101, 4, 1, "", "orthogonalization_matrix"], [101, 4, 1, "", "planar_matrix"], [101, 4, 1, "", "planar_matrix_to_3D"], [101, 4, 1, "", "projection_from_matrix"], [101, 4, 1, "", "projection_matrix"], [101, 4, 1, "", "quaternion_about_axis"], [101, 4, 1, "", "quaternion_conjugate"], [101, 4, 1, "", "quaternion_from_euler"], [101, 4, 1, "", "quaternion_from_matrix"], [101, 4, 1, "", "quaternion_imag"], [101, 4, 1, "", "quaternion_inverse"], [101, 4, 1, "", "quaternion_matrix"], [101, 4, 1, "", "quaternion_multiply"], [101, 4, 1, "", "quaternion_real"], [101, 4, 1, "", "quaternion_slerp"], [101, 4, 1, "", "random_quaternion"], [101, 4, 1, "", "random_rotation_matrix"], [101, 4, 1, "", "random_vector"], [101, 4, 1, "", "reflection_from_matrix"], [101, 4, 1, "", "reflection_matrix"], [101, 4, 1, "", "rotation_from_matrix"], [101, 4, 1, "", "rotation_matrix"], [101, 4, 1, "", "scale_and_translate"], [101, 4, 1, "", "scale_from_matrix"], [101, 4, 1, "", "scale_matrix"], [101, 4, 1, "", "shear_from_matrix"], [101, 4, 1, "", "shear_matrix"], [101, 4, 1, "", "spherical_matrix"], [101, 4, 1, "", "superimposition_matrix"], [101, 4, 1, "", "transform_around"], [101, 4, 1, "", "transform_points"], [101, 4, 1, "", "translation_from_matrix"], [101, 4, 1, "", "translation_matrix"], [101, 4, 1, "", "unit_vector"], [101, 4, 1, "", "vector_norm"], [101, 4, 1, "", "vector_product"]], "trimesh.transformations.Arcball": [[101, 2, 1, "", "__init__"], [101, 3, 1, "", "constrain"], [101, 2, 1, "", "down"], [101, 2, 1, "", "drag"], [101, 2, 1, "", "matrix"], [101, 2, 1, "", "next"], [101, 2, 1, "", "place"], [101, 2, 1, "", "setaxes"]], "trimesh.triangles": [[102, 1, 1, "", "MassProperties"], [102, 4, 1, "", "all_coplanar"], [102, 4, 1, "", "angles"], [102, 4, 1, "", "any_coplanar"], [102, 4, 1, "", "area"], [102, 4, 1, "", "barycentric_to_points"], [102, 4, 1, "", "bounds_tree"], [102, 4, 1, "", "closest_point"], [102, 4, 1, "", "cross"], [102, 4, 1, "", "extents"], [102, 4, 1, "", "mass_properties"], [102, 4, 1, "", "nondegenerate"], [102, 4, 1, "", "normals"], [102, 4, 1, "", "points_to_barycentric"], [102, 4, 1, "", "to_kwargs"], [102, 4, 1, "", "windings_aligned"]], "trimesh.triangles.MassProperties": [[102, 2, 1, "", "__init__"], [102, 5, 1, "", "center_mass"], [102, 5, 1, "", "density"], [102, 5, 1, "", "inertia"], [102, 5, 1, "", "mass"], [102, 5, 1, "", "volume"]], "trimesh.typed": [[103, 1, 1, "", "Any"], [103, 1, 1, "", "BinaryIO"], [103, 5, 1, "", "Dict"], [103, 1, 1, "", "IO"], [103, 1, 1, "", "Iterable"], [103, 5, 1, "", "List"], [103, 1, 1, "", "Sequence"], [103, 5, 1, "", "Tuple"], [103, 1, 1, "", "float64"], [103, 1, 1, "", "int64"]], "trimesh.typed.BinaryIO": [[103, 2, 1, "", "write"]], "trimesh.typed.IO": [[103, 2, 1, "", "close"], [103, 3, 1, "", "closed"], [103, 2, 1, "", "fileno"], [103, 2, 1, "", "flush"], [103, 2, 1, "", "isatty"], [103, 3, 1, "", "mode"], [103, 3, 1, "", "name"], [103, 2, 1, "", "read"], [103, 2, 1, "", "readable"], [103, 2, 1, "", "readline"], [103, 2, 1, "", "readlines"], [103, 2, 1, "", "seek"], [103, 2, 1, "", "seekable"], [103, 2, 1, "", "tell"], [103, 2, 1, "", "truncate"], [103, 2, 1, "", "writable"], [103, 2, 1, "", "write"], [103, 2, 1, "", "writelines"]], "trimesh.typed.Sequence": [[103, 2, 1, "", "count"], [103, 2, 1, "", "index"]], "trimesh.typed.float64": [[103, 2, 1, "", "as_integer_ratio"], [103, 2, 1, "", "is_integer"]], "trimesh.typed.int64": [[103, 2, 1, "", "bit_count"]], "trimesh.units": [[104, 4, 1, "", "keys"], [104, 4, 1, "", "to_inch"], [104, 4, 1, "", "unit_conversion"], [104, 4, 1, "", "units_from_metadata"]], "trimesh.util": [[105, 1, 1, "", "FunctionRegistry"], [105, 4, 1, "", "allclose"], [105, 4, 1, "", "append_faces"], [105, 4, 1, "", "array_to_encoded"], [105, 4, 1, "", "array_to_string"], [105, 4, 1, "", "attach_to_log"], [105, 4, 1, "", "bounds_tree"], [105, 4, 1, "", "comment_strip"], [105, 4, 1, "", "compress"], [105, 4, 1, "", "concatenate"], [105, 4, 1, "", "convert_like"], [105, 4, 1, "", "decimal_to_digits"], [105, 4, 1, "", "decode_keys"], [105, 4, 1, "", "decode_text"], [105, 4, 1, "", "decompress"], [105, 4, 1, "", "diagonal_dot"], [105, 4, 1, "", "distance_to_end"], [105, 4, 1, "", "encoded_to_array"], [105, 4, 1, "", "euclidean"], [105, 4, 1, "", "generate_basis"], [105, 4, 1, "", "grid_arange"], [105, 4, 1, "", "grid_linspace"], [105, 4, 1, "", "has_module"], [105, 4, 1, "", "is_binary_file"], [105, 4, 1, "", "is_ccw"], [105, 4, 1, "", "is_file"], [105, 4, 1, "", "is_instance_named"], [105, 4, 1, "", "is_none"], [105, 4, 1, "", "is_pathlib"], [105, 4, 1, "", "is_sequence"], [105, 4, 1, "", "is_shape"], [105, 4, 1, "", "is_string"], [105, 4, 1, "", "isclose"], [105, 4, 1, "", "jsonify"], [105, 4, 1, "", "make_sequence"], [105, 4, 1, "", "multi_dict"], [105, 4, 1, "", "pairwise"], [105, 4, 1, "", "row_norm"], [105, 4, 1, "", "sigfig_int"], [105, 4, 1, "", "sigfig_round"], [105, 4, 1, "", "spherical_to_vector"], [105, 4, 1, "", "split_extension"], [105, 4, 1, "", "stack_3D"], [105, 4, 1, "", "stack_lines"], [105, 4, 1, "", "structured_array_to_string"], [105, 4, 1, "", "submesh"], [105, 4, 1, "", "to_ascii"], [105, 4, 1, "", "tolist"], [105, 4, 1, "", "triangle_fans_to_faces"], [105, 4, 1, "", "triangle_strips_to_faces"], [105, 4, 1, "", "type_bases"], [105, 4, 1, "", "type_named"], [105, 4, 1, "", "unique_id"], [105, 4, 1, "", "unique_name"], [105, 4, 1, "", "unitize"], [105, 4, 1, "", "vector_hemisphere"], [105, 4, 1, "", "vector_to_spherical"], [105, 4, 1, "", "vstack_empty"], [105, 4, 1, "", "wrap_as_stream"], [105, 4, 1, "", "write_encoded"], [105, 4, 1, "", "zero_pad"]], "trimesh.util.FunctionRegistry": [[105, 2, 1, "", "__init__"]], "trimesh.viewer": [[107, 4, 1, "", "in_notebook"], [108, 0, 0, "-", "notebook"], [107, 4, 1, "", "scene_to_html"], [107, 4, 1, "", "scene_to_notebook"], [109, 0, 0, "-", "trackball"]], "trimesh.viewer.notebook": [[108, 4, 1, "", "in_notebook"], [108, 4, 1, "", "scene_to_html"], [108, 4, 1, "", "scene_to_notebook"]], "trimesh.viewer.trackball": [[109, 1, 1, "", "Trackball"]], "trimesh.viewer.trackball.Trackball": [[109, 5, 1, "", "STATE_PAN"], [109, 5, 1, "", "STATE_ROLL"], [109, 5, 1, "", "STATE_ROTATE"], [109, 5, 1, "", "STATE_ZOOM"], [109, 2, 1, "", "__init__"], [109, 2, 1, "", "down"], [109, 2, 1, "", "drag"], [109, 3, 1, "", "pose"], [109, 2, 1, "", "resize"], [109, 2, 1, "", "rotate"], [109, 2, 1, "", "scroll"], [109, 2, 1, "", "set_state"]], "trimesh.visual": [[112, 1, 1, "", "ColorVisuals"], [112, 1, 1, "", "TextureVisuals"], [113, 0, 0, "-", "base"], [114, 0, 0, "-", "color"], [112, 4, 1, "", "create_visual"], [115, 0, 0, "-", "gloss"], [112, 4, 1, "", "interpolate"], [112, 4, 1, "", "linear_color_map"], [116, 0, 0, "-", "material"], [117, 0, 0, "-", "objects"], [112, 4, 1, "", "random_color"], [118, 0, 0, "-", "texture"], [112, 4, 1, "", "to_rgba"], [112, 4, 1, "", "uv_to_color"], [112, 4, 1, "", "uv_to_interpolated_color"]], "trimesh.visual.ColorVisuals": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "concatenate"], [112, 2, 1, "", "copy"], [112, 3, 1, "", "defined"], [112, 3, 1, "", "face_colors"], [112, 2, 1, "", "face_subset"], [112, 3, 1, "", "kind"], [112, 3, 1, "", "main_color"], [112, 2, 1, "", "to_texture"], [112, 3, 1, "", "transparency"], [112, 2, 1, "", "update_faces"], [112, 2, 1, "", "update_vertices"], [112, 3, 1, "", "vertex_colors"]], "trimesh.visual.TextureVisuals": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "concatenate"], [112, 2, 1, "", "copy"], [112, 3, 1, "", "defined"], [112, 2, 1, "", "face_subset"], [112, 3, 1, "", "kind"], [112, 2, 1, "", "to_color"], [112, 2, 1, "", "update_faces"], [112, 2, 1, "", "update_vertices"], [112, 3, 1, "", "uv"]], "trimesh.visual.base": [[113, 1, 1, "", "Visuals"]], "trimesh.visual.base.Visuals": [[113, 2, 1, "", "concatenate"], [113, 2, 1, "", "copy"], [113, 3, 1, "", "kind"], [113, 2, 1, "", "update_faces"], [113, 2, 1, "", "update_vertices"]], "trimesh.visual.color": [[114, 1, 1, "", "ColorVisuals"], [114, 1, 1, "", "VertexColor"], [114, 4, 1, "", "color_to_uv"], [114, 4, 1, "", "colors_to_materials"], [114, 4, 1, "", "face_to_vertex_color"], [114, 4, 1, "", "hex_to_rgba"], [114, 4, 1, "", "interpolate"], [114, 4, 1, "", "linear_color_map"], [114, 4, 1, "", "random_color"], [114, 4, 1, "", "to_float"], [114, 4, 1, "", "to_rgba"], [114, 4, 1, "", "uv_to_color"], [114, 4, 1, "", "uv_to_interpolated_color"], [114, 4, 1, "", "vertex_to_face_color"]], "trimesh.visual.color.ColorVisuals": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "concatenate"], [114, 2, 1, "", "copy"], [114, 3, 1, "", "defined"], [114, 3, 1, "", "face_colors"], [114, 2, 1, "", "face_subset"], [114, 3, 1, "", "kind"], [114, 3, 1, "", "main_color"], [114, 2, 1, "", "to_texture"], [114, 3, 1, "", "transparency"], [114, 2, 1, "", "update_faces"], [114, 2, 1, "", "update_vertices"], [114, 3, 1, "", "vertex_colors"]], "trimesh.visual.color.VertexColor": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "concatenate"], [114, 2, 1, "", "copy"], [114, 3, 1, "", "kind"], [114, 2, 1, "", "update_faces"], [114, 2, 1, "", "update_vertices"], [114, 3, 1, "", "vertex_colors"]], "trimesh.visual.gloss": [[115, 4, 1, "", "specular_to_pbr"]], "trimesh.visual.material": [[116, 1, 1, "", "Material"], [116, 1, 1, "", "MultiMaterial"], [116, 1, 1, "", "PBRMaterial"], [116, 1, 1, "", "SimpleMaterial"], [116, 4, 1, "", "color_image"], [116, 4, 1, "", "empty_material"], [116, 4, 1, "", "pack"]], "trimesh.visual.material.Material": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "copy"], [116, 3, 1, "", "main_color"], [116, 3, 1, "", "name"]], "trimesh.visual.material.MultiMaterial": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "add"], [116, 2, 1, "", "get"], [116, 3, 1, "", "main_color"], [116, 2, 1, "", "to_pbr"]], "trimesh.visual.material.PBRMaterial": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "alphaCutoff"], [116, 3, 1, "", "alphaMode"], [116, 3, 1, "", "baseColorFactor"], [116, 3, 1, "", "baseColorTexture"], [116, 2, 1, "", "copy"], [116, 3, 1, "", "doubleSided"], [116, 3, 1, "", "emissiveFactor"], [116, 3, 1, "", "emissiveTexture"], [116, 3, 1, "", "main_color"], [116, 3, 1, "", "metallicFactor"], [116, 3, 1, "", "metallicRoughnessTexture"], [116, 3, 1, "", "name"], [116, 3, 1, "", "normalTexture"], [116, 3, 1, "", "occlusionTexture"], [116, 3, 1, "", "roughnessFactor"], [116, 2, 1, "", "to_color"], [116, 2, 1, "", "to_simple"]], "trimesh.visual.material.SimpleMaterial": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "glossiness"], [116, 3, 1, "", "main_color"], [116, 2, 1, "", "to_color"], [116, 2, 1, "", "to_obj"], [116, 2, 1, "", "to_pbr"]], "trimesh.visual.objects": [[117, 4, 1, "", "concatenate"], [117, 4, 1, "", "create_visual"]], "trimesh.visual.texture": [[118, 1, 1, "", "TextureVisuals"], [118, 4, 1, "", "power_resize"], [118, 4, 1, "", "unmerge_faces"]], "trimesh.visual.texture.TextureVisuals": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "concatenate"], [118, 2, 1, "", "copy"], [118, 3, 1, "", "defined"], [118, 2, 1, "", "face_subset"], [118, 3, 1, "", "kind"], [118, 2, 1, "", "to_color"], [118, 2, 1, "", "update_faces"], [118, 2, 1, "", "update_vertices"], [118, 3, 1, "", "uv"]], "trimesh.voxel": [[119, 1, 1, "", "VoxelGrid"], [120, 0, 0, "-", "base"], [121, 0, 0, "-", "creation"], [122, 0, 0, "-", "encoding"], [123, 0, 0, "-", "morphology"], [124, 0, 0, "-", "ops"], [125, 0, 0, "-", "runlength"], [126, 0, 0, "-", "transforms"]], "trimesh.voxel.VoxelGrid": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "apply_transform"], [119, 2, 1, "", "as_boxes"], [119, 3, 1, "", "bounds"], [119, 2, 1, "", "copy"], [119, 3, 1, "", "element_volume"], [119, 3, 1, "", "encoding"], [119, 2, 1, "", "export"], [119, 3, 1, "", "extents"], [119, 2, 1, "", "fill"], [119, 3, 1, "", "filled_count"], [119, 2, 1, "", "hollow"], [119, 2, 1, "", "indices_to_points"], [119, 3, 1, "", "is_empty"], [119, 2, 1, "", "is_filled"], [119, 3, 1, "", "marching_cubes"], [119, 3, 1, "", "matrix"], [119, 3, 1, "", "pitch"], [119, 3, 1, "", "points"], [119, 2, 1, "", "points_to_indices"], [119, 2, 1, "", "revoxelized"], [119, 3, 1, "", "scale"], [119, 3, 1, "", "shape"], [119, 2, 1, "", "show"], [119, 3, 1, "", "sparse_indices"], [119, 2, 1, "", "strip"], [119, 3, 1, "", "transform"], [119, 3, 1, "", "translation"], [119, 3, 1, "", "volume"]], "trimesh.voxel.base": [[120, 1, 1, "", "VoxelGrid"]], "trimesh.voxel.base.VoxelGrid": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "apply_transform"], [120, 2, 1, "", "as_boxes"], [120, 3, 1, "", "bounds"], [120, 2, 1, "", "copy"], [120, 3, 1, "", "element_volume"], [120, 3, 1, "", "encoding"], [120, 2, 1, "", "export"], [120, 3, 1, "", "extents"], [120, 2, 1, "", "fill"], [120, 3, 1, "", "filled_count"], [120, 2, 1, "", "hollow"], [120, 2, 1, "", "indices_to_points"], [120, 3, 1, "", "is_empty"], [120, 2, 1, "", "is_filled"], [120, 3, 1, "", "marching_cubes"], [120, 3, 1, "", "matrix"], [120, 3, 1, "", "pitch"], [120, 3, 1, "", "points"], [120, 2, 1, "", "points_to_indices"], [120, 2, 1, "", "revoxelized"], [120, 3, 1, "", "scale"], [120, 3, 1, "", "shape"], [120, 2, 1, "", "show"], [120, 3, 1, "", "sparse_indices"], [120, 2, 1, "", "strip"], [120, 3, 1, "", "transform"], [120, 3, 1, "", "translation"], [120, 3, 1, "", "volume"]], "trimesh.voxel.creation": [[121, 4, 1, "", "local_voxelize"], [121, 4, 1, "", "voxelize"]], "trimesh.voxel.encoding": [[122, 1, 1, "", "BinaryRunLengthEncoding"], [122, 1, 1, "", "DenseEncoding"], [122, 1, 1, "", "Encoding"], [122, 1, 1, "", "FlattenedEncoding"], [122, 1, 1, "", "FlippedEncoding"], [122, 1, 1, "", "LazyIndexMap"], [122, 1, 1, "", "RunLengthEncoding"], [122, 1, 1, "", "ShapedEncoding"], [122, 4, 1, "", "SparseBinaryEncoding"], [122, 1, 1, "", "SparseEncoding"], [122, 1, 1, "", "TransposedEncoding"]], "trimesh.voxel.encoding.BinaryRunLengthEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "binary_run_length_data"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 2, 1, "", "from_brle"], [122, 2, 1, "", "from_dense"], [122, 2, 1, "", "from_rle"], [122, 2, 1, "", "gather"], [122, 2, 1, "", "gather_nd"], [122, 3, 1, "", "is_empty"], [122, 2, 1, "", "mask"], [122, 2, 1, "", "run_length_data"], [122, 3, 1, "", "size"], [122, 2, 1, "", "sorted_gather"], [122, 3, 1, "", "sparse_components"], [122, 3, 1, "", "sparse_indices"], [122, 3, 1, "", "sparse_values"], [122, 3, 1, "", "stripped"], [122, 3, 1, "", "sum"]], "trimesh.voxel.encoding.DenseEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 3, 1, "", "dtype"], [122, 3, 1, "", "flat"], [122, 2, 1, "", "gather"], [122, 2, 1, "", "gather_nd"], [122, 2, 1, "", "get_value"], [122, 3, 1, "", "is_empty"], [122, 2, 1, "", "mask"], [122, 2, 1, "", "reshape"], [122, 3, 1, "", "shape"], [122, 3, 1, "", "size"], [122, 3, 1, "", "sparse_components"], [122, 3, 1, "", "sparse_indices"], [122, 3, 1, "", "sparse_values"], [122, 3, 1, "", "sum"]], "trimesh.voxel.encoding.Encoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "binary_run_length_data"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "data"], [122, 3, 1, "", "dense"], [122, 3, 1, "", "dtype"], [122, 3, 1, "", "flat"], [122, 2, 1, "", "flip"], [122, 2, 1, "", "gather_nd"], [122, 2, 1, "", "get_value"], [122, 3, 1, "", "is_empty"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "mutable"], [122, 3, 1, "", "ndims"], [122, 2, 1, "", "reshape"], [122, 2, 1, "", "run_length_data"], [122, 3, 1, "", "shape"], [122, 3, 1, "", "size"], [122, 3, 1, "", "sparse_components"], [122, 3, 1, "", "sparse_indices"], [122, 3, 1, "", "sparse_values"], [122, 3, 1, "", "stripped"], [122, 3, 1, "", "sum"], [122, 2, 1, "", "transpose"]], "trimesh.voxel.encoding.FlattenedEncoding": [[122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 3, 1, "", "flat"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "shape"]], "trimesh.voxel.encoding.FlippedEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 2, 1, "", "flip"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "shape"]], "trimesh.voxel.encoding.LazyIndexMap": [[122, 3, 1, "", "dtype"], [122, 2, 1, "", "gather_nd"], [122, 2, 1, "", "get_value"], [122, 3, 1, "", "is_empty"], [122, 3, 1, "", "size"], [122, 3, 1, "", "sparse_indices"], [122, 3, 1, "", "sparse_values"], [122, 3, 1, "", "sum"]], "trimesh.voxel.encoding.RunLengthEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "binary_run_length_data"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 3, 1, "", "dtype"], [122, 2, 1, "", "from_brle"], [122, 2, 1, "", "from_dense"], [122, 2, 1, "", "from_rle"], [122, 2, 1, "", "gather"], [122, 2, 1, "", "gather_nd"], [122, 2, 1, "", "get_value"], [122, 3, 1, "", "is_empty"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "ndims"], [122, 2, 1, "", "run_length_data"], [122, 3, 1, "", "shape"], [122, 3, 1, "", "size"], [122, 2, 1, "", "sorted_gather"], [122, 3, 1, "", "sparse_components"], [122, 3, 1, "", "sparse_indices"], [122, 3, 1, "", "sparse_values"], [122, 3, 1, "", "stripped"], [122, 3, 1, "", "sum"]], "trimesh.voxel.encoding.ShapedEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 3, 1, "", "flat"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "shape"]], "trimesh.voxel.encoding.SparseEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "dense"], [122, 3, 1, "", "dtype"], [122, 2, 1, "", "from_dense"], [122, 2, 1, "", "gather_nd"], [122, 2, 1, "", "get_value"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "ndims"], [122, 3, 1, "", "shape"], [122, 3, 1, "", "size"], [122, 3, 1, "", "sparse_components"], [122, 3, 1, "", "sparse_indices"], [122, 3, 1, "", "sparse_values"], [122, 3, 1, "", "stripped"], [122, 3, 1, "", "sum"]], "trimesh.voxel.encoding.TransposedEncoding": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "data"], [122, 3, 1, "", "dense"], [122, 2, 1, "", "gather"], [122, 2, 1, "", "get_value"], [122, 2, 1, "", "mask"], [122, 3, 1, "", "perm"], [122, 3, 1, "", "shape"], [122, 2, 1, "", "transpose"]], "trimesh.voxel.morphology": [[123, 4, 1, "", "binary_closing"], [123, 4, 1, "", "binary_dilation"], [123, 4, 1, "", "fill"], [123, 4, 1, "", "surface"]], "trimesh.voxel.ops": [[124, 4, 1, "", "boolean_sparse"], [124, 4, 1, "", "fill_base"], [124, 4, 1, "", "fill_orthographic"], [124, 4, 1, "", "fill_voxelization"], [124, 4, 1, "", "indices_to_points"], [124, 4, 1, "", "matrix_to_marching_cubes"], [124, 4, 1, "", "matrix_to_points"], [124, 4, 1, "", "multibox"], [124, 4, 1, "", "points_to_indices"], [124, 4, 1, "", "points_to_marching_cubes"], [124, 4, 1, "", "sparse_to_matrix"], [124, 4, 1, "", "strip_array"]], "trimesh.voxel.runlength": [[125, 4, 1, "", "brle_gather_1d"], [125, 4, 1, "", "brle_gatherer_1d"], [125, 4, 1, "", "brle_length"], [125, 4, 1, "", "brle_logical_not"], [125, 4, 1, "", "brle_mask"], [125, 4, 1, "", "brle_reverse"], [125, 4, 1, "", "brle_strip"], [125, 4, 1, "", "brle_to_brle"], [125, 4, 1, "", "brle_to_dense"], [125, 4, 1, "", "brle_to_rle"], [125, 4, 1, "", "brle_to_sparse"], [125, 4, 1, "", "dense_to_brle"], [125, 4, 1, "", "dense_to_rle"], [125, 4, 1, "", "merge_brle_lengths"], [125, 4, 1, "", "merge_rle_lengths"], [125, 4, 1, "", "rle_gather_1d"], [125, 4, 1, "", "rle_gatherer_1d"], [125, 4, 1, "", "rle_length"], [125, 4, 1, "", "rle_mask"], [125, 4, 1, "", "rle_reverse"], [125, 4, 1, "", "rle_strip"], [125, 4, 1, "", "rle_to_brle"], [125, 4, 1, "", "rle_to_dense"], [125, 4, 1, "", "rle_to_rle"], [125, 4, 1, "", "rle_to_sparse"], [125, 4, 1, "", "sorted_brle_gather_1d"], [125, 4, 1, "", "sorted_rle_gather_1d"], [125, 4, 1, "", "split_long_brle_lengths"], [125, 4, 1, "", "split_long_rle_lengths"]], "trimesh.voxel.transforms": [[126, 1, 1, "", "Transform"]], "trimesh.voxel.transforms.Transform": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "apply_scale"], [126, 2, 1, "", "apply_transform"], [126, 2, 1, "", "apply_translation"], [126, 2, 1, "", "copy"], [126, 3, 1, "", "inverse_matrix"], [126, 2, 1, "", "inverse_transform_points"], [126, 3, 1, "", "is_identity"], [126, 3, 1, "", "matrix"], [126, 3, 1, "", "pitch"], [126, 3, 1, "", "scale"], [126, 2, 1, "", "transform_points"], [126, 3, 1, "", "translation"], [126, 3, 1, "", "unit_volume"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"basic": [0, 4, 6], "instal": [0, 6, 7], "quick": [0, 2, 6, 10], "start": [0, 2, 6, 10], "featur": [0, 6], "viewer": [0, 6, 107, 108, 109, 110, 111], "project": [0, 6], "us": [0, 4, 6], "trimesh": [0, 2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "which": [0, 6], "mesh": [0, 6], "format": [0, 2, 6], "should": [0, 6], "i": [0, 6], "how": [0, 6, 9], "can": [0, 6], "cite": [0, 6], "thi": [0, 6], "librari": [0, 6], "contain": [0, 6], "color": [1, 114], "contribut": [2, 6], "To": 2, "develop": 2, "automat": 2, "docstr": 2, "gener": [2, 51], "tip": 2, "help": 2, "try": 2, "avoid": 2, "curvatur": [3, 25], "write": 4, "docker": [4, 6], "imag": 4, "pip": 4, "prebuilt": 4, "build": 4, "exampl": [5, 6, 9], "link": 6, "api": 6, "refer": [6, 9], "conda": 7, "packag": 7, "depend": 7, "overview": 7, "ad": 7, "A": 7, "nearest": 8, "non": 9, "rigid": 9, "registr": [9, 87], "deform": 9, "transfer": 9, "nricp": 9, "nricp_sumn": 9, "work": 9, "number": 9, "iter": 9, "robust": 9, "outlier": 9, "summari": 9, "optim": 9, "step": 9, "nricp_amberg": 9, "comparison": [9, 21], "two": 9, "method": 9, "acknowledg": 9, "rai": [11, 83, 84, 85, 86], "section": 12, "shortest": 13, "textur": [14, 118], "http": 15, "github": [15, 16], "com": [15, 16], "mikedh": [15, 16], "base": [16, 113, 120], "boolean": 17, "py": [17, 19, 21, 24, 25, 27, 33, 40, 43, 46, 47, 48, 53, 54, 55, 56, 61, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 93, 96, 99, 102, 104, 105, 108, 113, 114, 116, 117, 120], "bound": 18, "cach": 19, "collis": 20, "constant": 22, "convex": 23, "creation": [24, 59, 121], "decomposit": 26, "name": 26, "default": 26, "except": 27, "exchang": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 62, 63, 64, 65, 66, 67], "binvox": 29, "cascad": 30, "dae": 31, "export": [32, 64], "gltf": 33, "load": [34, 65], "misc": [35, 66], "obj": 36, "off": 37, "ply": 38, "stl": 39, "threedxml": 40, "threemf": 41, "urdf": 42, "xaml": 43, "xyz": 44, "geometri": 45, "graph": 46, "group": 47, "inertia": 48, "interfac": [49, 50, 51, 52], "blender": 50, "gmsh": 52, "intersect": [53, 68], "interv": 54, "nsphere": 55, "parent": 56, "path": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "arc": 58, "curv": 60, "entiti": 61, "paramet": 61, "dxf": 63, "svg_io": 67, "pack": 69, "polygon": 71, "raster": 72, "repair": [73, 90], "segment": 74, "simplifi": 75, "travers": 76, "util": [77, 105], "permut": 78, "point": 79, "pose": 80, "primit": 81, "proxim": 82, "ray_pyembre": 84, "ray_triangl": 85, "ray_util": 86, "remesh": 88, "render": 89, "resolv": 91, "resourc": 92, "sampl": 93, "scene": [94, 95, 96, 97, 98], "camera": 95, "light": 96, "transform": [98, 101, 126], "schema": 99, "smooth": 100, "requir": 101, "triangl": 102, "type": 103, "unit": 104, "version": 106, "notebook": 108, "trackbal": 109, "widget": 110, "window": 111, "visual": [112, 113, 114, 115, 116, 117, 118], "goal": 114, "gloss": 115, "materi": 116, "object": 117, "voxel": [119, 120, 121, 122, 123, 124, 125, 126], "encod": 122, "morphologi": 123, "op": 124, "runlength": 125}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Basic Installation": [[0, "basic-installation"], [6, "basic-installation"]], "Quick Start": [[0, "quick-start"], [6, "quick-start"], [10, "quick-start"]], "Features": [[0, "features"], [6, "features"]], "Viewer": [[0, "viewer"], [6, "viewer"]], "Projects Using Trimesh": [[0, "projects-using-trimesh"], [6, "projects-using-trimesh"]], "Which Mesh Format Should I Use?": [[0, "which-mesh-format-should-i-use"], [6, "which-mesh-format-should-i-use"]], "How can I cite this library?": [[0, "how-can-i-cite-this-library"], [6, "how-can-i-cite-this-library"]], "Containers": [[0, "containers"], [6, "containers"]], "Colors": [[1, "colors"]], "Contributing To Trimesh": [[2, "contributing-to-trimesh"]], "Developer Quick Start": [[2, "developer-quick-start"]], "Automatic Formatting": [[2, "automatic-formatting"]], "Docstrings": [[2, "docstrings"]], "General Tips": [[2, "general-tips"]], "Helpful": [[2, "helpful"]], "Try To Avoid": [[2, "try-to-avoid"]], "Curvature": [[3, "curvature"]], "Writing Docker Images": [[4, "writing-docker-images"]], "Docker Basics": [[4, "docker-basics"]], "Using pip": [[4, "using-pip"]], "Using Prebuilt Images": [[4, "using-prebuilt-images"]], "Building Trimesh Images": [[4, "building-trimesh-images"]], "Examples": [[5, "examples"], [6, "examples"], [9, "examples"]], "Links": [[6, "links"]], "Install": [[6, "install"]], "Contributing": [[6, "contributing"]], "Docker": [[6, "docker"]], "API Reference": [[6, "api-reference"]], "Installation": [[7, "installation"]], "Conda Packages": [[7, "conda-packages"]], "Dependency Overview": [[7, "dependency-overview"]], "Adding A Dependency": [[7, "adding-a-dependency"]], "Nearest": [[8, "nearest"]], "Non-Rigid Registration": [[9, "non-rigid-registration"]], "Deformation Transfer NRICP (nricp_sumner)": [[9, "deformation-transfer-nricp-nricp-sumner"]], "How it works": [[9, "how-it-works"], [9, "id1"]], "Number of iterations": [[9, "number-of-iterations"], [9, "id2"]], "Robustness to outliers": [[9, "robustness-to-outliers"], [9, "id3"]], "Summary": [[9, "summary"], [9, "id4"]], "Optimal Step NRICP (nricp_amberg)": [[9, "optimal-step-nricp-nricp-amberg"]], "Comparison of the two methods": [[9, "comparison-of-the-two-methods"]], "Acknowledgments": [[9, "acknowledgments"]], "References": [[9, "references"]], "Ray": [[11, "ray"]], "Section": [[12, "section"]], "Shortest": [[13, "shortest"]], "Texture": [[14, "texture"]], "trimesh": [[15, "trimesh"]], "https://github.com/mikedh/trimesh": [[15, "https-github-com-mikedh-trimesh"]], "trimesh.base": [[16, "module-trimesh.base"]], "github.com/mikedh/trimesh": [[16, "github-com-mikedh-trimesh"]], "trimesh.boolean": [[17, "module-trimesh.boolean"]], "boolean.py": [[17, "boolean-py"]], "trimesh.bounds": [[18, "module-trimesh.bounds"]], "trimesh.caching": [[19, "module-trimesh.caching"]], "caching.py": [[19, "caching-py"]], "trimesh.collision": [[20, "module-trimesh.collision"]], "trimesh.comparison": [[21, "module-trimesh.comparison"]], "comparison.py": [[21, "comparison-py"]], "trimesh.constants": [[22, "module-trimesh.constants"]], "trimesh.convex": [[23, "module-trimesh.convex"]], "trimesh.creation": [[24, "module-trimesh.creation"]], "creation.py": [[24, "creation-py"]], "trimesh.curvature": [[25, "module-trimesh.curvature"]], "curvature.py": [[25, "curvature-py"]], "trimesh.decomposition": [[26, "module-trimesh.decomposition"]], "Name                              Default": [[26, "name-default"]], "trimesh.exceptions": [[27, "module-trimesh.exceptions"]], "exceptions.py": [[27, "exceptions-py"]], "trimesh.exchange": [[28, "trimesh-exchange"]], "trimesh/exchange": [[28, "module-trimesh.exchange"]], "trimesh.exchange.binvox": [[29, "module-trimesh.exchange.binvox"]], "trimesh.exchange.cascade": [[30, "module-trimesh.exchange.cascade"]], "trimesh.exchange.dae": [[31, "module-trimesh.exchange.dae"]], "trimesh.exchange.export": [[32, "module-trimesh.exchange.export"]], "trimesh.exchange.gltf": [[33, "module-trimesh.exchange.gltf"]], "gltf.py": [[33, "gltf-py"]], "trimesh.exchange.load": [[34, "module-trimesh.exchange.load"]], "trimesh.exchange.misc": [[35, "module-trimesh.exchange.misc"]], "trimesh.exchange.obj": [[36, "module-trimesh.exchange.obj"]], "trimesh.exchange.off": [[37, "module-trimesh.exchange.off"]], "trimesh.exchange.ply": [[38, "module-trimesh.exchange.ply"]], "trimesh.exchange.stl": [[39, "module-trimesh.exchange.stl"]], "trimesh.exchange.threedxml": [[40, "module-trimesh.exchange.threedxml"]], "threedxml.py": [[40, "threedxml-py"]], "trimesh.exchange.threemf": [[41, "module-trimesh.exchange.threemf"]], "trimesh.exchange.urdf": [[42, "module-trimesh.exchange.urdf"]], "trimesh.exchange.xaml": [[43, "module-trimesh.exchange.xaml"]], "xaml.py": [[43, "xaml-py"]], "trimesh.exchange.xyz": [[44, "module-trimesh.exchange.xyz"]], "trimesh.geometry": [[45, "module-trimesh.geometry"]], "trimesh.graph": [[46, "module-trimesh.graph"]], "graph.py": [[46, "graph-py"]], "trimesh.grouping": [[47, "module-trimesh.grouping"]], "grouping.py": [[47, "grouping-py"]], "trimesh.inertia": [[48, "module-trimesh.inertia"]], "inertia.py": [[48, "inertia-py"]], "trimesh.interfaces": [[49, "trimesh-interfaces"]], "trimesh.interfaces.blender": [[50, "module-trimesh.interfaces.blender"]], "trimesh.interfaces.generic": [[51, "module-trimesh.interfaces.generic"]], "trimesh.interfaces.gmsh": [[52, "module-trimesh.interfaces.gmsh"]], "trimesh.intersections": [[53, "module-trimesh.intersections"]], "intersections.py": [[53, "intersections-py"]], "trimesh.interval": [[54, "module-trimesh.interval"]], "interval.py": [[54, "interval-py"]], "trimesh.nsphere": [[55, "module-trimesh.nsphere"]], "nsphere.py": [[55, "nsphere-py"]], "trimesh.parent": [[56, "module-trimesh.parent"]], "parent.py": [[56, "parent-py"]], "trimesh.path": [[57, "trimesh-path"], [57, "module-trimesh.path"]], "trimesh.path.arc": [[58, "module-trimesh.path.arc"]], "trimesh.path.creation": [[59, "module-trimesh.path.creation"]], "trimesh.path.curve": [[60, "module-trimesh.path.curve"]], "trimesh.path.entities": [[61, "module-trimesh.path.entities"]], "entities.py": [[61, "entities-py"]], "Parameter": [[61, "parameter"]], "trimesh.path.exchange": [[62, "trimesh-path-exchange"]], "trimesh.path.exchange.dxf": [[63, "module-trimesh.path.exchange.dxf"]], "trimesh.path.exchange.export": [[64, "module-trimesh.path.exchange.export"]], "trimesh.path.exchange.load": [[65, "module-trimesh.path.exchange.load"]], "trimesh.path.exchange.misc": [[66, "module-trimesh.path.exchange.misc"]], "trimesh.path.exchange.svg_io": [[67, "module-trimesh.path.exchange.svg_io"]], "trimesh.path.intersections": [[68, "module-trimesh.path.intersections"]], "trimesh.path.packing": [[69, "module-trimesh.path.packing"]], "packing.py": [[69, "packing-py"]], "trimesh.path.path": [[70, "module-trimesh.path.path"]], "path.py": [[70, "path-py"]], "trimesh.path.polygons": [[71, "module-trimesh.path.polygons"]], "trimesh.path.raster": [[72, "module-trimesh.path.raster"]], "raster.py": [[72, "raster-py"]], "trimesh.path.repair": [[73, "module-trimesh.path.repair"]], "repair.py": [[73, "repair-py"], [90, "repair-py"]], "trimesh.path.segments": [[74, "module-trimesh.path.segments"]], "segments.py": [[74, "segments-py"]], "trimesh.path.simplify": [[75, "module-trimesh.path.simplify"]], "trimesh.path.traversal": [[76, "module-trimesh.path.traversal"]], "trimesh.path.util": [[77, "module-trimesh.path.util"]], "trimesh.permutate": [[78, "module-trimesh.permutate"]], "permutate.py": [[78, "permutate-py"]], "trimesh.points": [[79, "module-trimesh.points"]], "points.py": [[79, "points-py"]], "trimesh.poses": [[80, "module-trimesh.poses"]], "poses.py": [[80, "poses-py"]], "trimesh.primitives": [[81, "module-trimesh.primitives"]], "primitives.py": [[81, "primitives-py"]], "trimesh.proximity": [[82, "module-trimesh.proximity"]], "proximity.py": [[82, "proximity-py"]], "trimesh.ray": [[83, "trimesh-ray"]], "trimesh.ray.ray_pyembree": [[84, "module-trimesh.ray.ray_pyembree"]], "trimesh.ray.ray_triangle": [[85, "module-trimesh.ray.ray_triangle"]], "trimesh.ray.ray_util": [[86, "module-trimesh.ray.ray_util"]], "trimesh.registration": [[87, "module-trimesh.registration"]], "registration.py": [[87, "registration-py"]], "trimesh.remesh": [[88, "module-trimesh.remesh"]], "remesh.py": [[88, "remesh-py"]], "trimesh.rendering": [[89, "module-trimesh.rendering"]], "rendering.py": [[89, "rendering-py"]], "trimesh.repair": [[90, "module-trimesh.repair"]], "trimesh.resolvers": [[91, "module-trimesh.resolvers"]], "resolvers.py": [[91, "resolvers-py"]], "trimesh.resources": [[92, "module-trimesh.resources"]], "trimesh.sample": [[93, "module-trimesh.sample"]], "sample.py": [[93, "sample-py"]], "trimesh.scene": [[94, "trimesh-scene"]], "trimesh.scene.cameras": [[95, "module-trimesh.scene.cameras"]], "trimesh.scene.lighting": [[96, "module-trimesh.scene.lighting"]], "lighting.py": [[96, "lighting-py"]], "trimesh.scene.scene": [[97, "module-trimesh.scene.scene"]], "trimesh.scene.transforms": [[98, "module-trimesh.scene.transforms"]], "trimesh.schemas": [[99, "module-trimesh.schemas"]], "schemas.py": [[99, "schemas-py"]], "trimesh.smoothing": [[100, "module-trimesh.smoothing"]], "trimesh.transformations": [[101, "module-trimesh.transformations"]], "Requirements": [[101, "requirements"]], "trimesh.triangles": [[102, "module-trimesh.triangles"]], "triangles.py": [[102, "triangles-py"]], "trimesh.typed": [[103, "module-trimesh.typed"]], "trimesh.units": [[104, "module-trimesh.units"]], "units.py": [[104, "units-py"]], "trimesh.util": [[105, "module-trimesh.util"]], "util.py": [[105, "util-py"]], "trimesh.version": [[106, "module-trimesh.version"]], "trimesh.viewer": [[107, "trimesh-viewer"]], "viewer": [[107, "viewer"]], "trimesh.viewer.notebook": [[108, "module-trimesh.viewer.notebook"]], "notebook.py": [[108, "notebook-py"]], "trimesh.viewer.trackball": [[109, "module-trimesh.viewer.trackball"]], "trimesh.viewer.widget": [[110, "trimesh-viewer-widget"]], "trimesh.viewer.windowed": [[111, "trimesh-viewer-windowed"]], "trimesh.visual": [[112, "trimesh-visual"]], "visual": [[112, "visual"]], "trimesh.visual.base": [[113, "module-trimesh.visual.base"]], "base.py": [[113, "base-py"]], "trimesh.visual.color": [[114, "module-trimesh.visual.color"]], "color.py": [[114, "color-py"]], "Goals": [[114, "goals"]], "trimesh.visual.gloss": [[115, "module-trimesh.visual.gloss"]], "trimesh.visual.material": [[116, "module-trimesh.visual.material"]], "material.py": [[116, "material-py"]], "trimesh.visual.objects": [[117, "module-trimesh.visual.objects"]], "objects.py": [[117, "objects-py"]], "trimesh.visual.texture": [[118, "module-trimesh.visual.texture"]], "trimesh.voxel": [[119, "trimesh-voxel"]], "trimesh.voxel.base": [[120, "module-trimesh.voxel.base"]], "voxel.py": [[120, "voxel-py"]], "trimesh.voxel.creation": [[121, "module-trimesh.voxel.creation"]], "trimesh.voxel.encoding": [[122, "module-trimesh.voxel.encoding"]], "trimesh.voxel.morphology": [[123, "module-trimesh.voxel.morphology"]], "trimesh.voxel.ops": [[124, "module-trimesh.voxel.ops"]], "trimesh.voxel.runlength": [[125, "module-trimesh.voxel.runlength"]], "trimesh.voxel.transforms": [[126, "module-trimesh.voxel.transforms"]]}, "indexentries": {"pointcloud (class in trimesh)": [[15, "trimesh.PointCloud"]], "scene (class in trimesh)": [[15, "trimesh.Scene"]], "trimesh (class in trimesh)": [[15, "trimesh.Trimesh"]], "__init__() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.__init__"]], "__init__() (trimesh.scene method)": [[15, "trimesh.Scene.__init__"]], "__init__() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.__init__"]], "add_geometry() (trimesh.scene method)": [[15, "trimesh.Scene.add_geometry"]], "apply_transform() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.apply_transform"]], "apply_transform() (trimesh.scene method)": [[15, "trimesh.Scene.apply_transform"]], "apply_transform() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.apply_transform"]], "area (trimesh.scene property)": [[15, "trimesh.Scene.area"]], "area (trimesh.trimesh property)": [[15, "trimesh.Trimesh.area"]], "area_faces (trimesh.trimesh property)": [[15, "trimesh.Trimesh.area_faces"]], "as_open3d (trimesh.trimesh property)": [[15, "trimesh.Trimesh.as_open3d"]], "available_formats() (in module trimesh)": [[15, "trimesh.available_formats"]], "body_count (trimesh.trimesh property)": [[15, "trimesh.Trimesh.body_count"]], "bounds (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.bounds"]], "bounds (trimesh.scene property)": [[15, "trimesh.Scene.bounds"]], "bounds (trimesh.trimesh property)": [[15, "trimesh.Trimesh.bounds"]], "bounds_corners (trimesh.scene property)": [[15, "trimesh.Scene.bounds_corners"]], "camera (trimesh.scene property)": [[15, "trimesh.Scene.camera"]], "camera_rays() (trimesh.scene method)": [[15, "trimesh.Scene.camera_rays"]], "camera_transform (trimesh.scene property)": [[15, "trimesh.Scene.camera_transform"]], "center_mass (trimesh.scene property)": [[15, "trimesh.Scene.center_mass"]], "center_mass (trimesh.trimesh property)": [[15, "trimesh.Trimesh.center_mass"]], "centroid (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.centroid"]], "centroid (trimesh.scene property)": [[15, "trimesh.Scene.centroid"]], "centroid (trimesh.trimesh property)": [[15, "trimesh.Trimesh.centroid"]], "colors (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.colors"]], "compute_stable_poses() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.compute_stable_poses"]], "contains() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.contains"]], "convert_units() (trimesh.scene method)": [[15, "trimesh.Scene.convert_units"]], "convert_units() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.convert_units"]], "convex_decomposition() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.convex_decomposition"]], "convex_hull (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.convex_hull"]], "convex_hull (trimesh.scene property)": [[15, "trimesh.Scene.convex_hull"]], "convex_hull (trimesh.trimesh property)": [[15, "trimesh.Trimesh.convex_hull"]], "copy() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.copy"]], "copy() (trimesh.scene method)": [[15, "trimesh.Scene.copy"]], "copy() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.copy"]], "crc() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.crc"]], "deduplicated() (trimesh.scene method)": [[15, "trimesh.Scene.deduplicated"]], "delete_geometry() (trimesh.scene method)": [[15, "trimesh.Scene.delete_geometry"]], "density (trimesh.trimesh property)": [[15, "trimesh.Trimesh.density"]], "difference() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.difference"]], "dump() (trimesh.scene method)": [[15, "trimesh.Scene.dump"]], "duplicate_nodes (trimesh.scene property)": [[15, "trimesh.Scene.duplicate_nodes"]], "edges (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges"]], "edges_face (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_face"]], "edges_sorted (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_sorted"]], "edges_sorted_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_sorted_tree"]], "edges_sparse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_sparse"]], "edges_unique (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_unique"]], "edges_unique_inverse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_unique_inverse"]], "edges_unique_length (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_unique_length"]], "euler_number (trimesh.trimesh property)": [[15, "trimesh.Trimesh.euler_number"]], "eval_cached() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.eval_cached"]], "explode() (trimesh.scene method)": [[15, "trimesh.Scene.explode"]], "export() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.export"]], "export() (trimesh.scene method)": [[15, "trimesh.Scene.export"]], "export() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.export"]], "extents (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.extents"]], "extents (trimesh.scene property)": [[15, "trimesh.Scene.extents"]], "extents (trimesh.trimesh property)": [[15, "trimesh.Trimesh.extents"]], "face_adjacency (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency"]], "face_adjacency_angles (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_angles"]], "face_adjacency_convex (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_convex"]], "face_adjacency_edges (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_edges"]], "face_adjacency_edges_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_edges_tree"]], "face_adjacency_projections (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_projections"]], "face_adjacency_radius (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_radius"]], "face_adjacency_span (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_span"]], "face_adjacency_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_tree"]], "face_adjacency_unshared (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_unshared"]], "face_angles (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_angles"]], "face_angles_sparse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_angles_sparse"]], "face_neighborhood (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_neighborhood"]], "face_normals (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_normals"]], "faces (trimesh.trimesh property)": [[15, "trimesh.Trimesh.faces"]], "faces_sparse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.faces_sparse"]], "faces_unique_edges (trimesh.trimesh property)": [[15, "trimesh.Trimesh.faces_unique_edges"]], "facets (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets"]], "facets_area (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_area"]], "facets_boundary (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_boundary"]], "facets_normal (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_normal"]], "facets_on_hull (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_on_hull"]], "facets_origin (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_origin"]], "fill_holes() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.fill_holes"]], "fix_normals() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.fix_normals"]], "geometry_identifiers (trimesh.scene property)": [[15, "trimesh.Scene.geometry_identifiers"]], "has_camera (trimesh.scene property)": [[15, "trimesh.Scene.has_camera"]], "hash() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.hash"]], "identifier (trimesh.trimesh property)": [[15, "trimesh.Trimesh.identifier"]], "identifier_hash (trimesh.trimesh property)": [[15, "trimesh.Trimesh.identifier_hash"]], "integral_mean_curvature (trimesh.trimesh property)": [[15, "trimesh.Trimesh.integral_mean_curvature"]], "intersection() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.intersection"]], "invert() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.invert"]], "is_convex (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_convex"]], "is_empty (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.is_empty"]], "is_empty (trimesh.scene property)": [[15, "trimesh.Scene.is_empty"]], "is_empty (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_empty"]], "is_valid (trimesh.scene property)": [[15, "trimesh.Scene.is_valid"]], "is_volume (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_volume"]], "is_watertight (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_watertight"]], "is_winding_consistent (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_winding_consistent"]], "kdtree (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.kdtree"]], "kdtree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.kdtree"]], "lights (trimesh.scene property)": [[15, "trimesh.Scene.lights"]], "load() (in module trimesh)": [[15, "trimesh.load"]], "load_mesh() (in module trimesh)": [[15, "trimesh.load_mesh"]], "load_path() (in module trimesh)": [[15, "trimesh.load_path"]], "load_remote() (in module trimesh)": [[15, "trimesh.load_remote"]], "mass (trimesh.trimesh property)": [[15, "trimesh.Trimesh.mass"]], "mass_properties (trimesh.trimesh property)": [[15, "trimesh.Trimesh.mass_properties"]], "merge_vertices() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.merge_vertices"]], "merge_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.merge_vertices"]], "module": [[15, "module-trimesh"], [16, "module-trimesh.base"], [17, "module-trimesh.boolean"], [18, "module-trimesh.bounds"], [19, "module-trimesh.caching"], [20, "module-trimesh.collision"], [21, "module-trimesh.comparison"], [22, "module-trimesh.constants"], [23, "module-trimesh.convex"], [24, "module-trimesh.creation"], [25, "module-trimesh.curvature"], [26, "module-trimesh.decomposition"], [27, "module-trimesh.exceptions"], [28, "module-trimesh.exchange"], [29, "module-trimesh.exchange.binvox"], [30, "module-trimesh.exchange.cascade"], [31, "module-trimesh.exchange.dae"], [32, "module-trimesh.exchange.export"], [33, "module-trimesh.exchange.gltf"], [34, "module-trimesh.exchange.load"], [35, "module-trimesh.exchange.misc"], [36, "module-trimesh.exchange.obj"], [37, "module-trimesh.exchange.off"], [38, "module-trimesh.exchange.ply"], [39, "module-trimesh.exchange.stl"], [40, "module-trimesh.exchange.threedxml"], [41, "module-trimesh.exchange.threemf"], [42, "module-trimesh.exchange.urdf"], [43, "module-trimesh.exchange.xaml"], [44, "module-trimesh.exchange.xyz"], [45, "module-trimesh.geometry"], [46, "module-trimesh.graph"], [47, "module-trimesh.grouping"], [48, "module-trimesh.inertia"], [49, "module-trimesh.interfaces"], [50, "module-trimesh.interfaces.blender"], [51, "module-trimesh.interfaces.generic"], [52, "module-trimesh.interfaces.gmsh"], [53, "module-trimesh.intersections"], [54, "module-trimesh.interval"], [55, "module-trimesh.nsphere"], [56, "module-trimesh.parent"], [57, "module-trimesh.path"], [58, "module-trimesh.path.arc"], [59, "module-trimesh.path.creation"], [60, "module-trimesh.path.curve"], [61, "module-trimesh.path.entities"], [62, "module-trimesh.path.exchange"], [63, "module-trimesh.path.exchange.dxf"], [64, "module-trimesh.path.exchange.export"], [65, "module-trimesh.path.exchange.load"], [66, "module-trimesh.path.exchange.misc"], [67, "module-trimesh.path.exchange.svg_io"], [68, "module-trimesh.path.intersections"], [69, "module-trimesh.path.packing"], [70, "module-trimesh.path.path"], [71, "module-trimesh.path.polygons"], [72, "module-trimesh.path.raster"], [73, "module-trimesh.path.repair"], [74, "module-trimesh.path.segments"], [75, "module-trimesh.path.simplify"], [76, "module-trimesh.path.traversal"], [77, "module-trimesh.path.util"], [78, "module-trimesh.permutate"], [79, "module-trimesh.points"], [80, "module-trimesh.poses"], [81, "module-trimesh.primitives"], [82, "module-trimesh.proximity"], [83, "module-trimesh.ray"], [84, "module-trimesh.ray.ray_pyembree"], [85, "module-trimesh.ray.ray_triangle"], [86, "module-trimesh.ray.ray_util"], [87, "module-trimesh.registration"], [88, "module-trimesh.remesh"], [89, "module-trimesh.rendering"], [90, "module-trimesh.repair"], [91, "module-trimesh.resolvers"], [92, "module-trimesh.resources"], [93, "module-trimesh.sample"], [94, "module-trimesh.scene"], [95, "module-trimesh.scene.cameras"], [96, "module-trimesh.scene.lighting"], [97, "module-trimesh.scene.scene"], [98, "module-trimesh.scene.transforms"], [99, "module-trimesh.schemas"], [100, "module-trimesh.smoothing"], [101, "module-trimesh.transformations"], [102, "module-trimesh.triangles"], [103, "module-trimesh.typed"], [104, "module-trimesh.units"], [105, "module-trimesh.util"], [106, "module-trimesh.version"], [107, "module-trimesh.viewer"], [108, "module-trimesh.viewer.notebook"], [109, "module-trimesh.viewer.trackball"], [112, "module-trimesh.visual"], [113, "module-trimesh.visual.base"], [114, "module-trimesh.visual.color"], [115, "module-trimesh.visual.gloss"], [116, "module-trimesh.visual.material"], [117, "module-trimesh.visual.objects"], [118, "module-trimesh.visual.texture"], [119, "module-trimesh.voxel"], [120, "module-trimesh.voxel.base"], [121, "module-trimesh.voxel.creation"], [122, "module-trimesh.voxel.encoding"], [123, "module-trimesh.voxel.morphology"], [124, "module-trimesh.voxel.ops"], [125, "module-trimesh.voxel.runlength"], [126, "module-trimesh.voxel.transforms"]], "moment_inertia (trimesh.scene property)": [[15, "trimesh.Scene.moment_inertia"]], "moment_inertia (trimesh.trimesh property)": [[15, "trimesh.Trimesh.moment_inertia"]], "moment_inertia_frame() (trimesh.scene method)": [[15, "trimesh.Scene.moment_inertia_frame"]], "moment_inertia_frame() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.moment_inertia_frame"]], "mutable (trimesh.trimesh property)": [[15, "trimesh.Trimesh.mutable"]], "nondegenerate_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.nondegenerate_faces"]], "outline() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.outline"]], "principal_inertia_components (trimesh.trimesh property)": [[15, "trimesh.Trimesh.principal_inertia_components"]], "principal_inertia_transform (trimesh.trimesh property)": [[15, "trimesh.Trimesh.principal_inertia_transform"]], "principal_inertia_vectors (trimesh.trimesh property)": [[15, "trimesh.Trimesh.principal_inertia_vectors"]], "process() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.process"]], "projected() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.projected"]], "query() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.query"]], "referenced_vertices (trimesh.trimesh property)": [[15, "trimesh.Trimesh.referenced_vertices"]], "register() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.register"]], "remove_degenerate_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_degenerate_faces"]], "remove_duplicate_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_duplicate_faces"]], "remove_infinite_values() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_infinite_values"]], "remove_unreferenced_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_unreferenced_vertices"]], "rezero() (trimesh.scene method)": [[15, "trimesh.Scene.rezero"]], "rezero() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.rezero"]], "sample() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.sample"]], "save_image() (trimesh.scene method)": [[15, "trimesh.Scene.save_image"]], "scale (trimesh.scene property)": [[15, "trimesh.Scene.scale"]], "scaled() (trimesh.scene method)": [[15, "trimesh.Scene.scaled"]], "scene() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.scene"]], "scene() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.scene"]], "section() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.section"]], "section_multiplane() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.section_multiplane"]], "set_camera() (trimesh.scene method)": [[15, "trimesh.Scene.set_camera"]], "shape (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.shape"]], "show() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.show"]], "show() (trimesh.scene method)": [[15, "trimesh.Scene.show"]], "show() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.show"]], "simplify_quadratic_decimation() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.simplify_quadratic_decimation"]], "simplify_quadric_decimation() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.simplify_quadric_decimation"]], "slice_plane() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.slice_plane"]], "smooth_shaded (trimesh.trimesh property)": [[15, "trimesh.Trimesh.smooth_shaded"]], "smoothed() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.smoothed"]], "split() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.split"]], "strip_visuals() (trimesh.scene method)": [[15, "trimesh.Scene.strip_visuals"]], "subdivide() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.subdivide"]], "subdivide_loop() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.subdivide_loop"]], "subdivide_to_size() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.subdivide_to_size"]], "submesh() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.submesh"]], "subscene() (trimesh.scene method)": [[15, "trimesh.Scene.subscene"]], "symmetry (trimesh.trimesh property)": [[15, "trimesh.Trimesh.symmetry"]], "symmetry_axis (trimesh.trimesh property)": [[15, "trimesh.Trimesh.symmetry_axis"]], "symmetry_section (trimesh.trimesh property)": [[15, "trimesh.Trimesh.symmetry_section"]], "to_dict() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.to_dict"]], "transform_points() (in module trimesh)": [[15, "trimesh.transform_points"]], "triangles (trimesh.scene property)": [[15, "trimesh.Scene.triangles"]], "triangles (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles"]], "triangles_center (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles_center"]], "triangles_cross (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles_cross"]], "triangles_node (trimesh.scene property)": [[15, "trimesh.Scene.triangles_node"]], "triangles_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles_tree"]], "trimesh": [[15, "module-trimesh"]], "union() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.union"]], "unique_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.unique_faces"]], "unitize() (in module trimesh)": [[15, "trimesh.unitize"]], "units (trimesh.scene property)": [[15, "trimesh.Scene.units"]], "unmerge_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.unmerge_vertices"]], "unwrap() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.unwrap"]], "update_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.update_faces"]], "update_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.update_vertices"]], "vertex_adjacency_graph (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_adjacency_graph"]], "vertex_defects (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_defects"]], "vertex_degree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_degree"]], "vertex_faces (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_faces"]], "vertex_neighbors (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_neighbors"]], "vertex_normals (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_normals"]], "vertices (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.vertices"]], "vertices (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertices"]], "visual (trimesh.trimesh property)": [[15, "trimesh.Trimesh.visual"]], "volume (trimesh.scene property)": [[15, "trimesh.Scene.volume"]], "volume (trimesh.trimesh property)": [[15, "trimesh.Trimesh.volume"]], "voxelized() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.voxelized"]], "trimesh (class in trimesh.base)": [[16, "trimesh.base.Trimesh"]], "__init__() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.__init__"]], "apply_transform() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.apply_transform"]], "area (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.area"]], "area_faces (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.area_faces"]], "as_open3d (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.as_open3d"]], "body_count (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.body_count"]], "bounds (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.bounds"]], "center_mass (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.center_mass"]], "centroid (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.centroid"]], "compute_stable_poses() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.compute_stable_poses"]], "contains() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.contains"]], "convert_units() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.convert_units"]], "convex_decomposition() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.convex_decomposition"]], "convex_hull (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.convex_hull"]], "copy() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.copy"]], "density (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.density"]], "difference() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.difference"]], "edges (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges"]], "edges_face (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_face"]], "edges_sorted (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_sorted"]], "edges_sorted_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_sorted_tree"]], "edges_sparse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_sparse"]], "edges_unique (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_unique"]], "edges_unique_inverse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_unique_inverse"]], "edges_unique_length (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_unique_length"]], "euler_number (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.euler_number"]], "eval_cached() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.eval_cached"]], "export() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.export"]], "extents (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.extents"]], "face_adjacency (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency"]], "face_adjacency_angles (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_angles"]], "face_adjacency_convex (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_convex"]], "face_adjacency_edges (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_edges"]], "face_adjacency_edges_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_edges_tree"]], "face_adjacency_projections (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_projections"]], "face_adjacency_radius (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_radius"]], "face_adjacency_span (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_span"]], "face_adjacency_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_tree"]], "face_adjacency_unshared (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_unshared"]], "face_angles (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_angles"]], "face_angles_sparse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_angles_sparse"]], "face_neighborhood (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_neighborhood"]], "face_normals (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_normals"]], "faces (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.faces"]], "faces_sparse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.faces_sparse"]], "faces_unique_edges (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.faces_unique_edges"]], "facets (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets"]], "facets_area (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_area"]], "facets_boundary (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_boundary"]], "facets_normal (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_normal"]], "facets_on_hull (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_on_hull"]], "facets_origin (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_origin"]], "fill_holes() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.fill_holes"]], "fix_normals() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.fix_normals"]], "identifier (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.identifier"]], "identifier_hash (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.identifier_hash"]], "integral_mean_curvature (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.integral_mean_curvature"]], "intersection() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.intersection"]], "invert() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.invert"]], "is_convex (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_convex"]], "is_empty (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_empty"]], "is_volume (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_volume"]], "is_watertight (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_watertight"]], "is_winding_consistent (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_winding_consistent"]], "kdtree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.kdtree"]], "mass (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.mass"]], "mass_properties (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.mass_properties"]], "merge_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.merge_vertices"]], "moment_inertia (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.moment_inertia"]], "moment_inertia_frame() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.moment_inertia_frame"]], "mutable (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.mutable"]], "nondegenerate_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.nondegenerate_faces"]], "outline() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.outline"]], "principal_inertia_components (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.principal_inertia_components"]], "principal_inertia_transform (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.principal_inertia_transform"]], "principal_inertia_vectors (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.principal_inertia_vectors"]], "process() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.process"]], "projected() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.projected"]], "referenced_vertices (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.referenced_vertices"]], "register() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.register"]], "remove_degenerate_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_degenerate_faces"]], "remove_duplicate_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_duplicate_faces"]], "remove_infinite_values() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_infinite_values"]], "remove_unreferenced_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_unreferenced_vertices"]], "rezero() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.rezero"]], "sample() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.sample"]], "scene() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.scene"]], "section() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.section"]], "section_multiplane() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.section_multiplane"]], "show() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.show"]], "simplify_quadratic_decimation() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.simplify_quadratic_decimation"]], "simplify_quadric_decimation() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.simplify_quadric_decimation"]], "slice_plane() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.slice_plane"]], "smooth_shaded (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.smooth_shaded"]], "smoothed() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.smoothed"]], "split() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.split"]], "subdivide() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.subdivide"]], "subdivide_loop() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.subdivide_loop"]], "subdivide_to_size() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.subdivide_to_size"]], "submesh() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.submesh"]], "symmetry (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.symmetry"]], "symmetry_axis (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.symmetry_axis"]], "symmetry_section (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.symmetry_section"]], "to_dict() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.to_dict"]], "triangles (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles"]], "triangles_center (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles_center"]], "triangles_cross (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles_cross"]], "triangles_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles_tree"]], "trimesh.base": [[16, "module-trimesh.base"]], "union() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.union"]], "unique_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.unique_faces"]], "unmerge_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.unmerge_vertices"]], "unwrap() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.unwrap"]], "update_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.update_faces"]], "update_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.update_vertices"]], "vertex_adjacency_graph (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_adjacency_graph"]], "vertex_defects (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_defects"]], "vertex_degree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_degree"]], "vertex_faces (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_faces"]], "vertex_neighbors (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_neighbors"]], "vertex_normals (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_normals"]], "vertices (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertices"]], "visual (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.visual"]], "volume (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.volume"]], "voxelized() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.voxelized"]], "boolean_manifold() (in module trimesh.boolean)": [[17, "trimesh.boolean.boolean_manifold"]], "difference() (in module trimesh.boolean)": [[17, "trimesh.boolean.difference"]], "intersection() (in module trimesh.boolean)": [[17, "trimesh.boolean.intersection"]], "trimesh.boolean": [[17, "module-trimesh.boolean"]], "union() (in module trimesh.boolean)": [[17, "trimesh.boolean.union"]], "contains() (in module trimesh.bounds)": [[18, "trimesh.bounds.contains"]], "corners() (in module trimesh.bounds)": [[18, "trimesh.bounds.corners"]], "minimum_cylinder() (in module trimesh.bounds)": [[18, "trimesh.bounds.minimum_cylinder"]], "oriented_bounds() (in module trimesh.bounds)": [[18, "trimesh.bounds.oriented_bounds"]], "oriented_bounds_2d() (in module trimesh.bounds)": [[18, "trimesh.bounds.oriented_bounds_2D"]], "to_extents() (in module trimesh.bounds)": [[18, "trimesh.bounds.to_extents"]], "trimesh.bounds": [[18, "module-trimesh.bounds"]], "cache (class in trimesh.caching)": [[19, "trimesh.caching.Cache"]], "datastore (class in trimesh.caching)": [[19, "trimesh.caching.DataStore"]], "diskcache (class in trimesh.caching)": [[19, "trimesh.caching.DiskCache"]], "trackedarray (class in trimesh.caching)": [[19, "trimesh.caching.TrackedArray"]], "__init__() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.__init__"]], "__init__() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.__init__"]], "__init__() (trimesh.caching.diskcache method)": [[19, "trimesh.caching.DiskCache.__init__"]], "byteswap() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.byteswap"]], "cache_decorator() (in module trimesh.caching)": [[19, "trimesh.caching.cache_decorator"]], "clear() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.clear"]], "clear() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.clear"]], "delete() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.delete"]], "fill() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.fill"]], "get() (trimesh.caching.diskcache method)": [[19, "trimesh.caching.DiskCache.get"]], "hash_fallback() (in module trimesh.caching)": [[19, "trimesh.caching.hash_fallback"]], "id_set() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.id_set"]], "is_empty() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.is_empty"]], "itemset() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.itemset"]], "mutable (trimesh.caching.datastore property)": [[19, "trimesh.caching.DataStore.mutable"]], "mutable (trimesh.caching.trackedarray property)": [[19, "trimesh.caching.TrackedArray.mutable"]], "partition() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.partition"]], "pop() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.pop"]], "put() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.put"]], "setflags() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.setflags"]], "sha256() (in module trimesh.caching)": [[19, "trimesh.caching.sha256"]], "sort() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.sort"]], "tracked_array() (in module trimesh.caching)": [[19, "trimesh.caching.tracked_array"]], "trimesh.caching": [[19, "module-trimesh.caching"]], "update() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.update"]], "update() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.update"]], "verify() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.verify"]], "collisionmanager (class in trimesh.collision)": [[20, "trimesh.collision.CollisionManager"]], "contactdata (class in trimesh.collision)": [[20, "trimesh.collision.ContactData"]], "distancedata (class in trimesh.collision)": [[20, "trimesh.collision.DistanceData"]], "__init__() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.__init__"]], "__init__() (trimesh.collision.contactdata method)": [[20, "trimesh.collision.ContactData.__init__"]], "__init__() (trimesh.collision.distancedata method)": [[20, "trimesh.collision.DistanceData.__init__"]], "add_object() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.add_object"]], "depth (trimesh.collision.contactdata property)": [[20, "trimesh.collision.ContactData.depth"]], "distance (trimesh.collision.distancedata property)": [[20, "trimesh.collision.DistanceData.distance"]], "in_collision_internal() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.in_collision_internal"]], "in_collision_other() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.in_collision_other"]], "in_collision_single() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.in_collision_single"]], "index() (trimesh.collision.contactdata method)": [[20, "trimesh.collision.ContactData.index"]], "index() (trimesh.collision.distancedata method)": [[20, "trimesh.collision.DistanceData.index"]], "mesh_to_bvh() (in module trimesh.collision)": [[20, "trimesh.collision.mesh_to_BVH"]], "mesh_to_convex() (in module trimesh.collision)": [[20, "trimesh.collision.mesh_to_convex"]], "min_distance_internal() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.min_distance_internal"]], "min_distance_other() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.min_distance_other"]], "min_distance_single() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.min_distance_single"]], "normal (trimesh.collision.contactdata property)": [[20, "trimesh.collision.ContactData.normal"]], "point (trimesh.collision.contactdata property)": [[20, "trimesh.collision.ContactData.point"]], "point() (trimesh.collision.distancedata method)": [[20, "trimesh.collision.DistanceData.point"]], "remove_object() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.remove_object"]], "scene_to_collision() (in module trimesh.collision)": [[20, "trimesh.collision.scene_to_collision"]], "set_transform() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.set_transform"]], "trimesh.collision": [[20, "module-trimesh.collision"]], "identifier_hash() (in module trimesh.comparison)": [[21, "trimesh.comparison.identifier_hash"]], "identifier_simple() (in module trimesh.comparison)": [[21, "trimesh.comparison.identifier_simple"]], "trimesh.comparison": [[21, "module-trimesh.comparison"]], "resolutionpath (class in trimesh.constants)": [[22, "trimesh.constants.ResolutionPath"]], "tolerancemesh (class in trimesh.constants)": [[22, "trimesh.constants.ToleranceMesh"]], "tolerancepath (class in trimesh.constants)": [[22, "trimesh.constants.TolerancePath"]], "__init__() (trimesh.constants.resolutionpath method)": [[22, "trimesh.constants.ResolutionPath.__init__"]], "__init__() (trimesh.constants.tolerancemesh method)": [[22, "trimesh.constants.ToleranceMesh.__init__"]], "__init__() (trimesh.constants.tolerancepath method)": [[22, "trimesh.constants.TolerancePath.__init__"]], "aspect_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.aspect_frac"]], "export (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.export"]], "facet_threshold (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.facet_threshold"]], "log_time() (in module trimesh.constants)": [[22, "trimesh.constants.log_time"]], "max_sections (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.max_sections"]], "merge (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.merge"]], "merge (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.merge"]], "min_sections (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.min_sections"]], "planar (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.planar"]], "planar (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.planar"]], "radius_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.radius_frac"]], "radius_max (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.radius_max"]], "radius_min (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.radius_min"]], "seg_angle (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.seg_angle"]], "seg_angle (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_angle"]], "seg_angle_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_angle_frac"]], "seg_angle_min (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_angle_min"]], "seg_frac (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.seg_frac"]], "seg_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_frac"]], "strict (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.strict"]], "strict (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.strict"]], "tangent (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.tangent"]], "trimesh.constants": [[22, "module-trimesh.constants"]], "zero (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.zero"]], "zero (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.zero"]], "adjacency_projections() (in module trimesh.convex)": [[23, "trimesh.convex.adjacency_projections"]], "convex_hull() (in module trimesh.convex)": [[23, "trimesh.convex.convex_hull"]], "hull_points() (in module trimesh.convex)": [[23, "trimesh.convex.hull_points"]], "is_convex() (in module trimesh.convex)": [[23, "trimesh.convex.is_convex"]], "trimesh.convex": [[23, "module-trimesh.convex"]], "annulus() (in module trimesh.creation)": [[24, "trimesh.creation.annulus"]], "axis() (in module trimesh.creation)": [[24, "trimesh.creation.axis"]], "box() (in module trimesh.creation)": [[24, "trimesh.creation.box"]], "camera_marker() (in module trimesh.creation)": [[24, "trimesh.creation.camera_marker"]], "capsule() (in module trimesh.creation)": [[24, "trimesh.creation.capsule"]], "cone() (in module trimesh.creation)": [[24, "trimesh.creation.cone"]], "cylinder() (in module trimesh.creation)": [[24, "trimesh.creation.cylinder"]], "extrude_polygon() (in module trimesh.creation)": [[24, "trimesh.creation.extrude_polygon"]], "extrude_triangulation() (in module trimesh.creation)": [[24, "trimesh.creation.extrude_triangulation"]], "icosahedron() (in module trimesh.creation)": [[24, "trimesh.creation.icosahedron"]], "icosphere() (in module trimesh.creation)": [[24, "trimesh.creation.icosphere"]], "random_soup() (in module trimesh.creation)": [[24, "trimesh.creation.random_soup"]], "revolve() (in module trimesh.creation)": [[24, "trimesh.creation.revolve"]], "sweep_polygon() (in module trimesh.creation)": [[24, "trimesh.creation.sweep_polygon"]], "torus() (in module trimesh.creation)": [[24, "trimesh.creation.torus"]], "triangulate_polygon() (in module trimesh.creation)": [[24, "trimesh.creation.triangulate_polygon"]], "trimesh.creation": [[24, "module-trimesh.creation"]], "truncated_prisms() (in module trimesh.creation)": [[24, "trimesh.creation.truncated_prisms"]], "uv_sphere() (in module trimesh.creation)": [[24, "trimesh.creation.uv_sphere"]], "discrete_gaussian_curvature_measure() (in module trimesh.curvature)": [[25, "trimesh.curvature.discrete_gaussian_curvature_measure"]], "discrete_mean_curvature_measure() (in module trimesh.curvature)": [[25, "trimesh.curvature.discrete_mean_curvature_measure"]], "face_angles_sparse() (in module trimesh.curvature)": [[25, "trimesh.curvature.face_angles_sparse"]], "line_ball_intersection() (in module trimesh.curvature)": [[25, "trimesh.curvature.line_ball_intersection"]], "sphere_ball_intersection() (in module trimesh.curvature)": [[25, "trimesh.curvature.sphere_ball_intersection"]], "trimesh.curvature": [[25, "module-trimesh.curvature"]], "vertex_defects() (in module trimesh.curvature)": [[25, "trimesh.curvature.vertex_defects"]], "convex_decomposition() (in module trimesh.decomposition)": [[26, "trimesh.decomposition.convex_decomposition"]], "trimesh.decomposition": [[26, "module-trimesh.decomposition"]], "exceptionwrapper (class in trimesh.exceptions)": [[27, "trimesh.exceptions.ExceptionWrapper"]], "__init__() (trimesh.exceptions.exceptionwrapper method)": [[27, "trimesh.exceptions.ExceptionWrapper.__init__"]], "trimesh.exceptions": [[27, "module-trimesh.exceptions"]], "trimesh.exchange": [[28, "module-trimesh.exchange"]], "binvox (class in trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.Binvox"]], "binvoxer (class in trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.Binvoxer"]], "supported_input_types (trimesh.exchange.binvox.binvoxer attribute)": [[29, "trimesh.exchange.binvox.Binvoxer.SUPPORTED_INPUT_TYPES"]], "supported_output_types (trimesh.exchange.binvox.binvoxer attribute)": [[29, "trimesh.exchange.binvox.Binvoxer.SUPPORTED_OUTPUT_TYPES"]], "__init__() (trimesh.exchange.binvox.binvoxer method)": [[29, "trimesh.exchange.binvox.Binvoxer.__init__"]], "binvox_bytes() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.binvox_bytes"]], "binvox_header() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.binvox_header"]], "export_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.export_binvox"]], "file_type (trimesh.exchange.binvox.binvoxer property)": [[29, "trimesh.exchange.binvox.Binvoxer.file_type"]], "load_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.load_binvox"]], "parse_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.parse_binvox"]], "parse_binvox_header() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.parse_binvox_header"]], "rle_data (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.rle_data"]], "scale (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.scale"]], "shape (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.shape"]], "translate (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.translate"]], "trimesh.exchange.binvox": [[29, "module-trimesh.exchange.binvox"]], "voxel_from_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.voxel_from_binvox"]], "voxelize_mesh() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.voxelize_mesh"]], "load_step() (in module trimesh.exchange.cascade)": [[30, "trimesh.exchange.cascade.load_step"]], "trimesh.exchange.cascade": [[30, "module-trimesh.exchange.cascade"]], "export_collada() (in module trimesh.exchange.dae)": [[31, "trimesh.exchange.dae.export_collada"]], "load_collada() (in module trimesh.exchange.dae)": [[31, "trimesh.exchange.dae.load_collada"]], "load_zae() (in module trimesh.exchange.dae)": [[31, "trimesh.exchange.dae.load_zae"]], "trimesh.exchange.dae": [[31, "module-trimesh.exchange.dae"]], "export_dict() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_dict"]], "export_dict64() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_dict64"]], "export_mesh() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_mesh"]], "export_scene() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_scene"]], "scene_to_dict() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.scene_to_dict"]], "trimesh.exchange.export": [[32, "module-trimesh.exchange.export"]], "export_glb() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.export_glb"]], "export_gltf() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.export_gltf"]], "get_schema() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.get_schema"]], "load_glb() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.load_glb"]], "load_gltf() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.load_gltf"]], "trimesh.exchange.gltf": [[33, "module-trimesh.exchange.gltf"]], "validate() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.validate"]], "available_formats() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.available_formats"]], "load() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load"]], "load_compressed() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_compressed"]], "load_kwargs() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_kwargs"]], "load_mesh() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_mesh"]], "load_remote() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_remote"]], "mesh_formats() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.mesh_formats"]], "trimesh.exchange.load": [[34, "module-trimesh.exchange.load"]], "load_dict() (in module trimesh.exchange.misc)": [[35, "trimesh.exchange.misc.load_dict"]], "load_meshio() (in module trimesh.exchange.misc)": [[35, "trimesh.exchange.misc.load_meshio"]], "trimesh.exchange.misc": [[35, "module-trimesh.exchange.misc"]], "export_obj() (in module trimesh.exchange.obj)": [[36, "trimesh.exchange.obj.export_obj"]], "load_obj() (in module trimesh.exchange.obj)": [[36, "trimesh.exchange.obj.load_obj"]], "parse_mtl() (in module trimesh.exchange.obj)": [[36, "trimesh.exchange.obj.parse_mtl"]], "trimesh.exchange.obj": [[36, "module-trimesh.exchange.obj"]], "export_off() (in module trimesh.exchange.off)": [[37, "trimesh.exchange.off.export_off"]], "load_off() (in module trimesh.exchange.off)": [[37, "trimesh.exchange.off.load_off"]], "trimesh.exchange.off": [[37, "module-trimesh.exchange.off"]], "export_draco() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.export_draco"]], "export_ply() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.export_ply"]], "load_draco() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.load_draco"]], "load_ply() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.load_ply"]], "trimesh.exchange.ply": [[38, "module-trimesh.exchange.ply"]], "headererror": [[39, "trimesh.exchange.stl.HeaderError"]], "export_stl() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.export_stl"]], "export_stl_ascii() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.export_stl_ascii"]], "load_stl() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.load_stl"]], "load_stl_ascii() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.load_stl_ascii"]], "load_stl_binary() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.load_stl_binary"]], "trimesh.exchange.stl": [[39, "module-trimesh.exchange.stl"]], "load_3dxml() (in module trimesh.exchange.threedxml)": [[40, "trimesh.exchange.threedxml.load_3DXML"]], "print_element() (in module trimesh.exchange.threedxml)": [[40, "trimesh.exchange.threedxml.print_element"]], "trimesh.exchange.threedxml": [[40, "module-trimesh.exchange.threedxml"]], "export_3mf() (in module trimesh.exchange.threemf)": [[41, "trimesh.exchange.threemf.export_3MF"]], "load_3mf() (in module trimesh.exchange.threemf)": [[41, "trimesh.exchange.threemf.load_3MF"]], "trimesh.exchange.threemf": [[41, "module-trimesh.exchange.threemf"]], "export_urdf() (in module trimesh.exchange.urdf)": [[42, "trimesh.exchange.urdf.export_urdf"]], "trimesh.exchange.urdf": [[42, "module-trimesh.exchange.urdf"]], "load_xaml() (in module trimesh.exchange.xaml)": [[43, "trimesh.exchange.xaml.load_XAML"]], "trimesh.exchange.xaml": [[43, "module-trimesh.exchange.xaml"]], "export_xyz() (in module trimesh.exchange.xyz)": [[44, "trimesh.exchange.xyz.export_xyz"]], "load_xyz() (in module trimesh.exchange.xyz)": [[44, "trimesh.exchange.xyz.load_xyz"]], "trimesh.exchange.xyz": [[44, "module-trimesh.exchange.xyz"]], "align_vectors() (in module trimesh.geometry)": [[45, "trimesh.geometry.align_vectors"]], "faces_to_edges() (in module trimesh.geometry)": [[45, "trimesh.geometry.faces_to_edges"]], "index_sparse() (in module trimesh.geometry)": [[45, "trimesh.geometry.index_sparse"]], "mean_vertex_normals() (in module trimesh.geometry)": [[45, "trimesh.geometry.mean_vertex_normals"]], "plane_transform() (in module trimesh.geometry)": [[45, "trimesh.geometry.plane_transform"]], "triangulate_quads() (in module trimesh.geometry)": [[45, "trimesh.geometry.triangulate_quads"]], "trimesh.geometry": [[45, "module-trimesh.geometry"]], "vector_angle() (in module trimesh.geometry)": [[45, "trimesh.geometry.vector_angle"]], "vertex_face_indices() (in module trimesh.geometry)": [[45, "trimesh.geometry.vertex_face_indices"]], "weighted_vertex_normals() (in module trimesh.geometry)": [[45, "trimesh.geometry.weighted_vertex_normals"]], "connected_component_labels() (in module trimesh.graph)": [[46, "trimesh.graph.connected_component_labels"]], "connected_components() (in module trimesh.graph)": [[46, "trimesh.graph.connected_components"]], "edges_to_coo() (in module trimesh.graph)": [[46, "trimesh.graph.edges_to_coo"]], "face_adjacency() (in module trimesh.graph)": [[46, "trimesh.graph.face_adjacency"]], "face_adjacency_radius() (in module trimesh.graph)": [[46, "trimesh.graph.face_adjacency_radius"]], "face_adjacency_unshared() (in module trimesh.graph)": [[46, "trimesh.graph.face_adjacency_unshared"]], "face_neighborhood() (in module trimesh.graph)": [[46, "trimesh.graph.face_neighborhood"]], "facets() (in module trimesh.graph)": [[46, "trimesh.graph.facets"]], "fill_traversals() (in module trimesh.graph)": [[46, "trimesh.graph.fill_traversals"]], "graph_to_svg() (in module trimesh.graph)": [[46, "trimesh.graph.graph_to_svg"]], "is_watertight() (in module trimesh.graph)": [[46, "trimesh.graph.is_watertight"]], "multigraph_collect() (in module trimesh.graph)": [[46, "trimesh.graph.multigraph_collect"]], "multigraph_paths() (in module trimesh.graph)": [[46, "trimesh.graph.multigraph_paths"]], "neighbors() (in module trimesh.graph)": [[46, "trimesh.graph.neighbors"]], "shared_edges() (in module trimesh.graph)": [[46, "trimesh.graph.shared_edges"]], "smooth_shade() (in module trimesh.graph)": [[46, "trimesh.graph.smooth_shade"]], "smoothed() (in module trimesh.graph)": [[46, "trimesh.graph.smoothed"]], "split() (in module trimesh.graph)": [[46, "trimesh.graph.split"]], "split_traversal() (in module trimesh.graph)": [[46, "trimesh.graph.split_traversal"]], "traversals() (in module trimesh.graph)": [[46, "trimesh.graph.traversals"]], "trimesh.graph": [[46, "module-trimesh.graph"]], "vertex_adjacency_graph() (in module trimesh.graph)": [[46, "trimesh.graph.vertex_adjacency_graph"]], "blocks() (in module trimesh.grouping)": [[47, "trimesh.grouping.blocks"]], "boolean_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.boolean_rows"]], "clusters() (in module trimesh.grouping)": [[47, "trimesh.grouping.clusters"]], "float_to_int() (in module trimesh.grouping)": [[47, "trimesh.grouping.float_to_int"]], "group() (in module trimesh.grouping)": [[47, "trimesh.grouping.group"]], "group_distance() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_distance"]], "group_min() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_min"]], "group_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_rows"]], "group_vectors() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_vectors"]], "hashable_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.hashable_rows"]], "merge_runs() (in module trimesh.grouping)": [[47, "trimesh.grouping.merge_runs"]], "merge_vertices() (in module trimesh.grouping)": [[47, "trimesh.grouping.merge_vertices"]], "trimesh.grouping": [[47, "module-trimesh.grouping"]], "unique_bincount() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_bincount"]], "unique_float() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_float"]], "unique_ordered() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_ordered"]], "unique_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_rows"]], "unique_value_in_row() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_value_in_row"]], "cylinder_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.cylinder_inertia"]], "principal_axis() (in module trimesh.inertia)": [[48, "trimesh.inertia.principal_axis"]], "radial_symmetry() (in module trimesh.inertia)": [[48, "trimesh.inertia.radial_symmetry"]], "scene_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.scene_inertia"]], "sphere_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.sphere_inertia"]], "transform_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.transform_inertia"]], "trimesh.inertia": [[48, "module-trimesh.inertia"]], "trimesh.interfaces": [[49, "module-trimesh.interfaces"]], "boolean() (in module trimesh.interfaces.blender)": [[50, "trimesh.interfaces.blender.boolean"]], "trimesh.interfaces.blender": [[50, "module-trimesh.interfaces.blender"]], "unwrap() (in module trimesh.interfaces.blender)": [[50, "trimesh.interfaces.blender.unwrap"]], "meshscript (class in trimesh.interfaces.generic)": [[51, "trimesh.interfaces.generic.MeshScript"]], "__init__() (trimesh.interfaces.generic.meshscript method)": [[51, "trimesh.interfaces.generic.MeshScript.__init__"]], "run() (trimesh.interfaces.generic.meshscript method)": [[51, "trimesh.interfaces.generic.MeshScript.run"]], "trimesh.interfaces.generic": [[51, "module-trimesh.interfaces.generic"]], "load_gmsh() (in module trimesh.interfaces.gmsh)": [[52, "trimesh.interfaces.gmsh.load_gmsh"]], "to_volume() (in module trimesh.interfaces.gmsh)": [[52, "trimesh.interfaces.gmsh.to_volume"]], "trimesh.interfaces.gmsh": [[52, "module-trimesh.interfaces.gmsh"]], "mesh_multiplane() (in module trimesh.intersections)": [[53, "trimesh.intersections.mesh_multiplane"]], "mesh_plane() (in module trimesh.intersections)": [[53, "trimesh.intersections.mesh_plane"]], "plane_lines() (in module trimesh.intersections)": [[53, "trimesh.intersections.plane_lines"]], "planes_lines() (in module trimesh.intersections)": [[53, "trimesh.intersections.planes_lines"]], "slice_faces_plane() (in module trimesh.intersections)": [[53, "trimesh.intersections.slice_faces_plane"]], "slice_mesh_plane() (in module trimesh.intersections)": [[53, "trimesh.intersections.slice_mesh_plane"]], "trimesh.intersections": [[53, "module-trimesh.intersections"]], "intersection() (in module trimesh.interval)": [[54, "trimesh.interval.intersection"]], "trimesh.interval": [[54, "module-trimesh.interval"]], "union() (in module trimesh.interval)": [[54, "trimesh.interval.union"]], "fit_nsphere() (in module trimesh.nsphere)": [[55, "trimesh.nsphere.fit_nsphere"]], "is_nsphere() (in module trimesh.nsphere)": [[55, "trimesh.nsphere.is_nsphere"]], "minimum_nsphere() (in module trimesh.nsphere)": [[55, "trimesh.nsphere.minimum_nsphere"]], "trimesh.nsphere": [[55, "module-trimesh.nsphere"]], "geometry (class in trimesh.parent)": [[56, "trimesh.parent.Geometry"]], "geometry3d (class in trimesh.parent)": [[56, "trimesh.parent.Geometry3D"]], "apply_obb() (trimesh.parent.geometry3d method)": [[56, "trimesh.parent.Geometry3D.apply_obb"]], "apply_scale() (trimesh.parent.geometry method)": [[56, "trimesh.parent.Geometry.apply_scale"]], "apply_transform() (trimesh.parent.geometry method)": [[56, "trimesh.parent.Geometry.apply_transform"]], "apply_translation() (trimesh.parent.geometry method)": [[56, "trimesh.parent.Geometry.apply_translation"]], "bounding_box (trimesh.parent.geometry3d property)": [[56, "trimesh.parent.Geometry3D.bounding_box"]], "bounding_box_oriented (trimesh.parent.geometry3d property)": [[56, "trimesh.parent.Geometry3D.bounding_box_oriented"]], "bounding_cylinder (trimesh.parent.geometry3d property)": [[56, "trimesh.parent.Geometry3D.bounding_cylinder"]], "bounding_primitive (trimesh.parent.geometry3d property)": [[56, "trimesh.parent.Geometry3D.bounding_primitive"]], "bounding_sphere (trimesh.parent.geometry3d property)": [[56, "trimesh.parent.Geometry3D.bounding_sphere"]], "bounds (trimesh.parent.geometry property)": [[56, "trimesh.parent.Geometry.bounds"]], "copy() (trimesh.parent.geometry method)": [[56, "trimesh.parent.Geometry.copy"]], "export() (trimesh.parent.geometry method)": [[56, "trimesh.parent.Geometry.export"]], "extents (trimesh.parent.geometry property)": [[56, "trimesh.parent.Geometry.extents"]], "is_empty (trimesh.parent.geometry property)": [[56, "trimesh.parent.Geometry.is_empty"]], "metadata (trimesh.parent.geometry attribute)": [[56, "trimesh.parent.Geometry.metadata"]], "scale (trimesh.parent.geometry property)": [[56, "trimesh.parent.Geometry.scale"]], "show() (trimesh.parent.geometry method)": [[56, "trimesh.parent.Geometry.show"]], "trimesh.parent": [[56, "module-trimesh.parent"]], "units (trimesh.parent.geometry property)": [[56, "trimesh.parent.Geometry.units"]], "path2d (class in trimesh.path)": [[57, "trimesh.path.Path2D"]], "path3d (class in trimesh.path)": [[57, "trimesh.path.Path3D"]], "apply_obb() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.apply_obb"]], "apply_scale() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.apply_scale"]], "area (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.area"]], "body_count (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.body_count"]], "connected_paths() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.connected_paths"]], "enclosure (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.enclosure"]], "enclosure_directed (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.enclosure_directed"]], "enclosure_shell (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.enclosure_shell"]], "extrude() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.extrude"]], "identifier (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.identifier"]], "identifier_hash (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.identifier_hash"]], "medial_axis() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.medial_axis"]], "obb (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.obb"]], "path_valid (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.path_valid"]], "plot_discrete() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.plot_discrete"]], "plot_entities() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.plot_entities"]], "polygons_closed (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.polygons_closed"]], "polygons_full (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.polygons_full"]], "rasterize() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.rasterize"]], "root (trimesh.path.path2d property)": [[57, "trimesh.path.Path2D.root"]], "sample() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.sample"]], "show() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.show"]], "show() (trimesh.path.path3d method)": [[57, "trimesh.path.Path3D.show"]], "simplify() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.simplify"]], "simplify_spline() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.simplify_spline"]], "split() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.split"]], "to_3d() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.to_3D"]], "to_planar() (trimesh.path.path3d method)": [[57, "trimesh.path.Path3D.to_planar"]], "triangulate() (trimesh.path.path2d method)": [[57, "trimesh.path.Path2D.triangulate"]], "trimesh.path": [[57, "module-trimesh.path"]], "arcinfo (class in trimesh.path.arc)": [[58, "trimesh.path.arc.ArcInfo"]], "__init__() (trimesh.path.arc.arcinfo method)": [[58, "trimesh.path.arc.ArcInfo.__init__"]], "angles (trimesh.path.arc.arcinfo attribute)": [[58, "trimesh.path.arc.ArcInfo.angles"]], "arc_center() (in module trimesh.path.arc)": [[58, "trimesh.path.arc.arc_center"]], "center (trimesh.path.arc.arcinfo attribute)": [[58, "trimesh.path.arc.ArcInfo.center"]], "discretize_arc() (in module trimesh.path.arc)": [[58, "trimesh.path.arc.discretize_arc"]], "normal (trimesh.path.arc.arcinfo attribute)": [[58, "trimesh.path.arc.ArcInfo.normal"]], "radius (trimesh.path.arc.arcinfo attribute)": [[58, "trimesh.path.arc.ArcInfo.radius"]], "span (trimesh.path.arc.arcinfo attribute)": [[58, "trimesh.path.arc.ArcInfo.span"]], "to_threepoint() (in module trimesh.path.arc)": [[58, "trimesh.path.arc.to_threepoint"]], "trimesh.path.arc": [[58, "module-trimesh.path.arc"]], "box_outline() (in module trimesh.path.creation)": [[59, "trimesh.path.creation.box_outline"]], "circle() (in module trimesh.path.creation)": [[59, "trimesh.path.creation.circle"]], "circle_pattern() (in module trimesh.path.creation)": [[59, "trimesh.path.creation.circle_pattern"]], "grid() (in module trimesh.path.creation)": [[59, "trimesh.path.creation.grid"]], "rectangle() (in module trimesh.path.creation)": [[59, "trimesh.path.creation.rectangle"]], "trimesh.path.creation": [[59, "module-trimesh.path.creation"]], "binomial() (in module trimesh.path.curve)": [[60, "trimesh.path.curve.binomial"]], "discretize_bezier() (in module trimesh.path.curve)": [[60, "trimesh.path.curve.discretize_bezier"]], "discretize_bspline() (in module trimesh.path.curve)": [[60, "trimesh.path.curve.discretize_bspline"]], "trimesh.path.curve": [[60, "module-trimesh.path.curve"]], "arc (class in trimesh.path.entities)": [[61, "trimesh.path.entities.Arc"]], "bspline (class in trimesh.path.entities)": [[61, "trimesh.path.entities.BSpline"]], "bezier (class in trimesh.path.entities)": [[61, "trimesh.path.entities.Bezier"]], "curve (class in trimesh.path.entities)": [[61, "trimesh.path.entities.Curve"]], "entity (class in trimesh.path.entities)": [[61, "trimesh.path.entities.Entity"]], "line (class in trimesh.path.entities)": [[61, "trimesh.path.entities.Line"]], "text (class in trimesh.path.entities)": [[61, "trimesh.path.entities.Text"]], "__init__() (trimesh.path.entities.bspline method)": [[61, "trimesh.path.entities.BSpline.__init__"]], "__init__() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.__init__"]], "__init__() (trimesh.path.entities.text method)": [[61, "trimesh.path.entities.Text.__init__"]], "angle() (trimesh.path.entities.text method)": [[61, "trimesh.path.entities.Text.angle"]], "bounds() (trimesh.path.entities.arc method)": [[61, "trimesh.path.entities.Arc.bounds"]], "bounds() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.bounds"]], "center() (trimesh.path.entities.arc method)": [[61, "trimesh.path.entities.Arc.center"]], "closed (trimesh.path.entities.arc property)": [[61, "trimesh.path.entities.Arc.closed"]], "closed (trimesh.path.entities.entity property)": [[61, "trimesh.path.entities.Entity.closed"]], "closed (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.closed"]], "copy() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.copy"]], "discrete() (trimesh.path.entities.arc method)": [[61, "trimesh.path.entities.Arc.discrete"]], "discrete() (trimesh.path.entities.bspline method)": [[61, "trimesh.path.entities.BSpline.discrete"]], "discrete() (trimesh.path.entities.bezier method)": [[61, "trimesh.path.entities.Bezier.discrete"]], "discrete() (trimesh.path.entities.line method)": [[61, "trimesh.path.entities.Line.discrete"]], "discrete() (trimesh.path.entities.text method)": [[61, "trimesh.path.entities.Text.discrete"]], "end_points (trimesh.path.entities.entity property)": [[61, "trimesh.path.entities.Entity.end_points"]], "end_points (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.end_points"]], "explode() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.explode"]], "explode() (trimesh.path.entities.line method)": [[61, "trimesh.path.entities.Line.explode"]], "is_valid (trimesh.path.entities.arc property)": [[61, "trimesh.path.entities.Arc.is_valid"]], "is_valid (trimesh.path.entities.entity property)": [[61, "trimesh.path.entities.Entity.is_valid"]], "is_valid (trimesh.path.entities.line property)": [[61, "trimesh.path.entities.Line.is_valid"]], "is_valid (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.is_valid"]], "layer (trimesh.path.entities.entity property)": [[61, "trimesh.path.entities.Entity.layer"]], "length() (trimesh.path.entities.arc method)": [[61, "trimesh.path.entities.Arc.length"]], "length() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.length"]], "length() (trimesh.path.entities.text method)": [[61, "trimesh.path.entities.Text.length"]], "metadata (trimesh.path.entities.entity property)": [[61, "trimesh.path.entities.Entity.metadata"]], "nodes (trimesh.path.entities.curve property)": [[61, "trimesh.path.entities.Curve.nodes"]], "nodes (trimesh.path.entities.entity property)": [[61, "trimesh.path.entities.Entity.nodes"]], "nodes (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.nodes"]], "normal (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.normal"]], "origin (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.origin"]], "plot() (trimesh.path.entities.text method)": [[61, "trimesh.path.entities.Text.plot"]], "reverse() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.reverse"]], "to_dict() (trimesh.path.entities.bspline method)": [[61, "trimesh.path.entities.BSpline.to_dict"]], "to_dict() (trimesh.path.entities.entity method)": [[61, "trimesh.path.entities.Entity.to_dict"]], "trimesh.path.entities": [[61, "module-trimesh.path.entities"]], "vector (trimesh.path.entities.text property)": [[61, "trimesh.path.entities.Text.vector"]], "trimesh.path.exchange": [[62, "module-trimesh.path.exchange"]], "bulge_to_arcs() (in module trimesh.path.exchange.dxf)": [[63, "trimesh.path.exchange.dxf.bulge_to_arcs"]], "convert_entities() (in module trimesh.path.exchange.dxf)": [[63, "trimesh.path.exchange.dxf.convert_entities"]], "export_dxf() (in module trimesh.path.exchange.dxf)": [[63, "trimesh.path.exchange.dxf.export_dxf"]], "get_key() (in module trimesh.path.exchange.dxf)": [[63, "trimesh.path.exchange.dxf.get_key"]], "load_dxf() (in module trimesh.path.exchange.dxf)": [[63, "trimesh.path.exchange.dxf.load_dxf"]], "trimesh.path.exchange.dxf": [[63, "module-trimesh.path.exchange.dxf"]], "export_dict() (in module trimesh.path.exchange.export)": [[64, "trimesh.path.exchange.export.export_dict"]], "export_path() (in module trimesh.path.exchange.export)": [[64, "trimesh.path.exchange.export.export_path"]], "trimesh.path.exchange.export": [[64, "module-trimesh.path.exchange.export"]], "load_path() (in module trimesh.path.exchange.load)": [[65, "trimesh.path.exchange.load.load_path"]], "path_formats() (in module trimesh.path.exchange.load)": [[65, "trimesh.path.exchange.load.path_formats"]], "trimesh.path.exchange.load": [[65, "module-trimesh.path.exchange.load"]], "dict_to_path() (in module trimesh.path.exchange.misc)": [[66, "trimesh.path.exchange.misc.dict_to_path"]], "edges_to_path() (in module trimesh.path.exchange.misc)": [[66, "trimesh.path.exchange.misc.edges_to_path"]], "faces_to_path() (in module trimesh.path.exchange.misc)": [[66, "trimesh.path.exchange.misc.faces_to_path"]], "lines_to_path() (in module trimesh.path.exchange.misc)": [[66, "trimesh.path.exchange.misc.lines_to_path"]], "linestrings_to_path() (in module trimesh.path.exchange.misc)": [[66, "trimesh.path.exchange.misc.linestrings_to_path"]], "polygon_to_path() (in module trimesh.path.exchange.misc)": [[66, "trimesh.path.exchange.misc.polygon_to_path"]], "trimesh.path.exchange.misc": [[66, "module-trimesh.path.exchange.misc"]], "export_svg() (in module trimesh.path.exchange.svg_io)": [[67, "trimesh.path.exchange.svg_io.export_svg"]], "svg_to_path() (in module trimesh.path.exchange.svg_io)": [[67, "trimesh.path.exchange.svg_io.svg_to_path"]], "transform_to_matrices() (in module trimesh.path.exchange.svg_io)": [[67, "trimesh.path.exchange.svg_io.transform_to_matrices"]], "trimesh.path.exchange.svg_io": [[67, "module-trimesh.path.exchange.svg_io"]], "line_line() (in module trimesh.path.intersections)": [[68, "trimesh.path.intersections.line_line"]], "trimesh.path.intersections": [[68, "module-trimesh.path.intersections"]], "rectanglebin (class in trimesh.path.packing)": [[69, "trimesh.path.packing.RectangleBin"]], "__init__() (trimesh.path.packing.rectanglebin method)": [[69, "trimesh.path.packing.RectangleBin.__init__"]], "bounds_overlap() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.bounds_overlap"]], "extents (trimesh.path.packing.rectanglebin property)": [[69, "trimesh.path.packing.RectangleBin.extents"]], "images() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.images"]], "insert() (trimesh.path.packing.rectanglebin method)": [[69, "trimesh.path.packing.RectangleBin.insert"]], "meshes() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.meshes"]], "paths() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.paths"]], "polygons() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.polygons"]], "rectangles() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.rectangles"]], "rectangles_single() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.rectangles_single"]], "roll_transform() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.roll_transform"]], "trimesh.path.packing": [[69, "module-trimesh.path.packing"]], "visualize() (in module trimesh.path.packing)": [[69, "trimesh.path.packing.visualize"]], "path (class in trimesh.path.path)": [[70, "trimesh.path.path.Path"]], "path2d (class in trimesh.path.path)": [[70, "trimesh.path.path.Path2D"]], "path3d (class in trimesh.path.path)": [[70, "trimesh.path.path.Path3D"]], "__init__() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.__init__"]], "apply_layer() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.apply_layer"]], "apply_obb() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.apply_obb"]], "apply_scale() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.apply_scale"]], "apply_transform() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.apply_transform"]], "area (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.area"]], "body_count (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.body_count"]], "bounds (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.bounds"]], "centroid (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.centroid"]], "colors (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.colors"]], "connected_paths() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.connected_paths"]], "convert_units() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.convert_units"]], "copy() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.copy"]], "dangling (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.dangling"]], "discrete (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.discrete"]], "enclosure (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.enclosure"]], "enclosure_directed (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.enclosure_directed"]], "enclosure_shell (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.enclosure_shell"]], "entities (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.entities"]], "explode() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.explode"]], "export() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.export"]], "extents (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.extents"]], "extrude() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.extrude"]], "fill_gaps() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.fill_gaps"]], "identifier (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.identifier"]], "identifier_hash (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.identifier_hash"]], "is_closed (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.is_closed"]], "is_empty (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.is_empty"]], "kdtree (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.kdtree"]], "layers (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.layers"]], "length (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.length"]], "medial_axis() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.medial_axis"]], "merge_vertices() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.merge_vertices"]], "obb (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.obb"]], "path_valid (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.path_valid"]], "paths (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.paths"]], "plot_discrete() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.plot_discrete"]], "plot_entities() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.plot_entities"]], "polygons_closed (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.polygons_closed"]], "polygons_full (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.polygons_full"]], "process() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.process"]], "rasterize() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.rasterize"]], "referenced_vertices (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.referenced_vertices"]], "remove_duplicate_entities() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.remove_duplicate_entities"]], "remove_entities() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.remove_entities"]], "remove_invalid() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.remove_invalid"]], "remove_unreferenced_vertices() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.remove_unreferenced_vertices"]], "replace_vertex_references() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.replace_vertex_references"]], "rezero() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.rezero"]], "root (trimesh.path.path.path2d property)": [[70, "trimesh.path.path.Path2D.root"]], "sample() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.sample"]], "scene() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.scene"]], "show() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.show"]], "show() (trimesh.path.path.path3d method)": [[70, "trimesh.path.path.Path3D.show"]], "simplify() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.simplify"]], "simplify_spline() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.simplify_spline"]], "split() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.split"]], "to_3d() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.to_3D"]], "to_dict() (trimesh.path.path.path method)": [[70, "trimesh.path.path.Path.to_dict"]], "to_planar() (trimesh.path.path.path3d method)": [[70, "trimesh.path.path.Path3D.to_planar"]], "triangulate() (trimesh.path.path.path2d method)": [[70, "trimesh.path.path.Path2D.triangulate"]], "trimesh.path.path": [[70, "module-trimesh.path.path"]], "vertex_graph (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.vertex_graph"]], "vertex_nodes (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.vertex_nodes"]], "vertices (trimesh.path.path.path property)": [[70, "trimesh.path.path.Path.vertices"]], "edges_to_polygons() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.edges_to_polygons"]], "enclosure_tree() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.enclosure_tree"]], "identifier() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.identifier"]], "medial_axis() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.medial_axis"]], "paths_to_polygons() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.paths_to_polygons"]], "plot() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.plot"]], "polygon_bounds() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.polygon_bounds"]], "polygon_obb() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.polygon_obb"]], "polygon_scale() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.polygon_scale"]], "polygons_obb() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.polygons_obb"]], "projected() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.projected"]], "random_polygon() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.random_polygon"]], "repair_invalid() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.repair_invalid"]], "resample_boundaries() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.resample_boundaries"]], "sample() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.sample"]], "second_moments() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.second_moments"]], "stack_boundaries() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.stack_boundaries"]], "transform_polygon() (in module trimesh.path.polygons)": [[71, "trimesh.path.polygons.transform_polygon"]], "trimesh.path.polygons": [[71, "module-trimesh.path.polygons"]], "rasterize() (in module trimesh.path.raster)": [[72, "trimesh.path.raster.rasterize"]], "trimesh.path.raster": [[72, "module-trimesh.path.raster"]], "fill_gaps() (in module trimesh.path.repair)": [[73, "trimesh.path.repair.fill_gaps"]], "trimesh.path.repair": [[73, "module-trimesh.path.repair"]], "clean() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.clean"]], "colinear_pairs() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.colinear_pairs"]], "extrude() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.extrude"]], "length() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.length"]], "parameters_to_segments() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.parameters_to_segments"]], "resample() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.resample"]], "segments_to_parameters() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.segments_to_parameters"]], "split() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.split"]], "to_svg() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.to_svg"]], "trimesh.path.segments": [[74, "module-trimesh.path.segments"]], "unique() (in module trimesh.path.segments)": [[74, "trimesh.path.segments.unique"]], "fit_circle_check() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.fit_circle_check"]], "is_circle() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.is_circle"]], "merge_colinear() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.merge_colinear"]], "points_to_spline_entity() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.points_to_spline_entity"]], "resample_spline() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.resample_spline"]], "simplify_basic() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.simplify_basic"]], "simplify_spline() (in module trimesh.path.simplify)": [[75, "trimesh.path.simplify.simplify_spline"]], "trimesh.path.simplify": [[75, "module-trimesh.path.simplify"]], "pathsample (class in trimesh.path.traversal)": [[76, "trimesh.path.traversal.PathSample"]], "__init__() (trimesh.path.traversal.pathsample method)": [[76, "trimesh.path.traversal.PathSample.__init__"]], "closed_paths() (in module trimesh.path.traversal)": [[76, "trimesh.path.traversal.closed_paths"]], "discretize_path() (in module trimesh.path.traversal)": [[76, "trimesh.path.traversal.discretize_path"]], "resample_path() (in module trimesh.path.traversal)": [[76, "trimesh.path.traversal.resample_path"]], "sample() (trimesh.path.traversal.pathsample method)": [[76, "trimesh.path.traversal.PathSample.sample"]], "split() (in module trimesh.path.traversal)": [[76, "trimesh.path.traversal.split"]], "trimesh.path.traversal": [[76, "module-trimesh.path.traversal"]], "truncate() (trimesh.path.traversal.pathsample method)": [[76, "trimesh.path.traversal.PathSample.truncate"]], "vertex_graph() (in module trimesh.path.traversal)": [[76, "trimesh.path.traversal.vertex_graph"]], "vertex_to_entity_path() (in module trimesh.path.traversal)": [[76, "trimesh.path.traversal.vertex_to_entity_path"]], "concatenate() (in module trimesh.path.util)": [[77, "trimesh.path.util.concatenate"]], "trimesh.path.util": [[77, "module-trimesh.path.util"]], "permutator (class in trimesh.permutate)": [[78, "trimesh.permutate.Permutator"]], "__init__() (trimesh.permutate.permutator method)": [[78, "trimesh.permutate.Permutator.__init__"]], "noise() (in module trimesh.permutate)": [[78, "trimesh.permutate.noise"]], "noise() (trimesh.permutate.permutator method)": [[78, "trimesh.permutate.Permutator.noise"]], "tessellation() (in module trimesh.permutate)": [[78, "trimesh.permutate.tessellation"]], "tessellation() (trimesh.permutate.permutator method)": [[78, "trimesh.permutate.Permutator.tessellation"]], "transform() (in module trimesh.permutate)": [[78, "trimesh.permutate.transform"]], "transform() (trimesh.permutate.permutator method)": [[78, "trimesh.permutate.Permutator.transform"]], "trimesh.permutate": [[78, "module-trimesh.permutate"]], "pointcloud (class in trimesh.points)": [[79, "trimesh.points.PointCloud"]], "__init__() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.__init__"]], "apply_transform() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.apply_transform"]], "bounds (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.bounds"]], "centroid (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.centroid"]], "colors (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.colors"]], "convex_hull (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.convex_hull"]], "copy() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.copy"]], "crc() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.crc"]], "export() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.export"]], "extents (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.extents"]], "hash() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.hash"]], "is_empty (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.is_empty"]], "k_means() (in module trimesh.points)": [[79, "trimesh.points.k_means"]], "kdtree (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.kdtree"]], "major_axis() (in module trimesh.points)": [[79, "trimesh.points.major_axis"]], "merge_vertices() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.merge_vertices"]], "plane_fit() (in module trimesh.points)": [[79, "trimesh.points.plane_fit"]], "plot_points() (in module trimesh.points)": [[79, "trimesh.points.plot_points"]], "point_plane_distance() (in module trimesh.points)": [[79, "trimesh.points.point_plane_distance"]], "project_to_plane() (in module trimesh.points)": [[79, "trimesh.points.project_to_plane"]], "query() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.query"]], "radial_sort() (in module trimesh.points)": [[79, "trimesh.points.radial_sort"]], "remove_close() (in module trimesh.points)": [[79, "trimesh.points.remove_close"]], "scene() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.scene"]], "shape (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.shape"]], "show() (trimesh.points.pointcloud method)": [[79, "trimesh.points.PointCloud.show"]], "trimesh.points": [[79, "module-trimesh.points"]], "tsp() (in module trimesh.points)": [[79, "trimesh.points.tsp"]], "vertices (trimesh.points.pointcloud property)": [[79, "trimesh.points.PointCloud.vertices"]], "compute_stable_poses() (in module trimesh.poses)": [[80, "trimesh.poses.compute_stable_poses"]], "trimesh.poses": [[80, "module-trimesh.poses"]], "box (class in trimesh.primitives)": [[81, "trimesh.primitives.Box"]], "capsule (class in trimesh.primitives)": [[81, "trimesh.primitives.Capsule"]], "cylinder (class in trimesh.primitives)": [[81, "trimesh.primitives.Cylinder"]], "extrusion (class in trimesh.primitives)": [[81, "trimesh.primitives.Extrusion"]], "primitive (class in trimesh.primitives)": [[81, "trimesh.primitives.Primitive"]], "primitiveattributes (class in trimesh.primitives)": [[81, "trimesh.primitives.PrimitiveAttributes"]], "sphere (class in trimesh.primitives)": [[81, "trimesh.primitives.Sphere"]], "__init__() (trimesh.primitives.box method)": [[81, "trimesh.primitives.Box.__init__"]], "__init__() (trimesh.primitives.capsule method)": [[81, "trimesh.primitives.Capsule.__init__"]], "__init__() (trimesh.primitives.cylinder method)": [[81, "trimesh.primitives.Cylinder.__init__"]], "__init__() (trimesh.primitives.extrusion method)": [[81, "trimesh.primitives.Extrusion.__init__"]], "__init__() (trimesh.primitives.primitive method)": [[81, "trimesh.primitives.Primitive.__init__"]], "__init__() (trimesh.primitives.primitiveattributes method)": [[81, "trimesh.primitives.PrimitiveAttributes.__init__"]], "__init__() (trimesh.primitives.sphere method)": [[81, "trimesh.primitives.Sphere.__init__"]], "apply_transform() (trimesh.primitives.primitive method)": [[81, "trimesh.primitives.Primitive.apply_transform"]], "area (trimesh.primitives.extrusion property)": [[81, "trimesh.primitives.Extrusion.area"]], "area (trimesh.primitives.sphere property)": [[81, "trimesh.primitives.Sphere.area"]], "as_outline() (trimesh.primitives.box method)": [[81, "trimesh.primitives.Box.as_outline"]], "bounding_box_oriented (trimesh.primitives.extrusion property)": [[81, "trimesh.primitives.Extrusion.bounding_box_oriented"]], "bounding_box_oriented (trimesh.primitives.sphere property)": [[81, "trimesh.primitives.Sphere.bounding_box_oriented"]], "bounds (trimesh.primitives.sphere property)": [[81, "trimesh.primitives.Sphere.bounds"]], "buffer() (trimesh.primitives.cylinder method)": [[81, "trimesh.primitives.Cylinder.buffer"]], "buffer() (trimesh.primitives.extrusion method)": [[81, "trimesh.primitives.Extrusion.buffer"]], "center (trimesh.primitives.sphere property)": [[81, "trimesh.primitives.Sphere.center"]], "copy() (trimesh.primitives.primitive method)": [[81, "trimesh.primitives.Primitive.copy"]], "direction (trimesh.primitives.capsule property)": [[81, "trimesh.primitives.Capsule.direction"]], "direction (trimesh.primitives.cylinder property)": [[81, "trimesh.primitives.Cylinder.direction"]], "direction (trimesh.primitives.extrusion property)": [[81, "trimesh.primitives.Extrusion.direction"]], "face_normals (trimesh.primitives.primitive property)": [[81, "trimesh.primitives.Primitive.face_normals"]], "faces (trimesh.primitives.primitive property)": [[81, "trimesh.primitives.Primitive.faces"]], "is_oriented (trimesh.primitives.box property)": [[81, "trimesh.primitives.Box.is_oriented"]], "moment_inertia (trimesh.primitives.cylinder property)": [[81, "trimesh.primitives.Cylinder.moment_inertia"]], "moment_inertia (trimesh.primitives.sphere property)": [[81, "trimesh.primitives.Sphere.moment_inertia"]], "origin (trimesh.primitives.extrusion property)": [[81, "trimesh.primitives.Extrusion.origin"]], "sample_grid() (trimesh.primitives.box method)": [[81, "trimesh.primitives.Box.sample_grid"]], "sample_volume() (trimesh.primitives.box method)": [[81, "trimesh.primitives.Box.sample_volume"]], "segment (trimesh.primitives.cylinder property)": [[81, "trimesh.primitives.Cylinder.segment"]], "slide() (trimesh.primitives.extrusion method)": [[81, "trimesh.primitives.Extrusion.slide"]], "to_dict() (trimesh.primitives.box method)": [[81, "trimesh.primitives.Box.to_dict"]], "to_dict() (trimesh.primitives.capsule method)": [[81, "trimesh.primitives.Capsule.to_dict"]], "to_dict() (trimesh.primitives.cylinder method)": [[81, "trimesh.primitives.Cylinder.to_dict"]], "to_dict() (trimesh.primitives.extrusion method)": [[81, "trimesh.primitives.Extrusion.to_dict"]], "to_dict() (trimesh.primitives.primitive method)": [[81, "trimesh.primitives.Primitive.to_dict"]], "to_dict() (trimesh.primitives.sphere method)": [[81, "trimesh.primitives.Sphere.to_dict"]], "to_mesh() (trimesh.primitives.primitive method)": [[81, "trimesh.primitives.Primitive.to_mesh"]], "transform (trimesh.primitives.box property)": [[81, "trimesh.primitives.Box.transform"]], "transform (trimesh.primitives.capsule property)": [[81, "trimesh.primitives.Capsule.transform"]], "transform (trimesh.primitives.extrusion property)": [[81, "trimesh.primitives.Extrusion.transform"]], "transform (trimesh.primitives.primitive property)": [[81, "trimesh.primitives.Primitive.transform"]], "trimesh.primitives": [[81, "module-trimesh.primitives"]], "vertices (trimesh.primitives.primitive property)": [[81, "trimesh.primitives.Primitive.vertices"]], "volume (trimesh.primitives.box property)": [[81, "trimesh.primitives.Box.volume"]], "volume (trimesh.primitives.cylinder property)": [[81, "trimesh.primitives.Cylinder.volume"]], "volume (trimesh.primitives.extrusion property)": [[81, "trimesh.primitives.Extrusion.volume"]], "volume (trimesh.primitives.sphere property)": [[81, "trimesh.primitives.Sphere.volume"]], "nearestqueryresult (class in trimesh.proximity)": [[82, "trimesh.proximity.NearestQueryResult"]], "proximityquery (class in trimesh.proximity)": [[82, "trimesh.proximity.ProximityQuery"]], "__init__() (trimesh.proximity.nearestqueryresult method)": [[82, "trimesh.proximity.NearestQueryResult.__init__"]], "__init__() (trimesh.proximity.proximityquery method)": [[82, "trimesh.proximity.ProximityQuery.__init__"]], "closest_point() (in module trimesh.proximity)": [[82, "trimesh.proximity.closest_point"]], "closest_point_naive() (in module trimesh.proximity)": [[82, "trimesh.proximity.closest_point_naive"]], "has_normals() (trimesh.proximity.nearestqueryresult method)": [[82, "trimesh.proximity.NearestQueryResult.has_normals"]], "longest_ray() (in module trimesh.proximity)": [[82, "trimesh.proximity.longest_ray"]], "max_tangent_sphere() (in module trimesh.proximity)": [[82, "trimesh.proximity.max_tangent_sphere"]], "nearby_faces() (in module trimesh.proximity)": [[82, "trimesh.proximity.nearby_faces"]], "on_surface() (trimesh.proximity.proximityquery method)": [[82, "trimesh.proximity.ProximityQuery.on_surface"]], "signed_distance() (in module trimesh.proximity)": [[82, "trimesh.proximity.signed_distance"]], "signed_distance() (trimesh.proximity.proximityquery method)": [[82, "trimesh.proximity.ProximityQuery.signed_distance"]], "thickness() (in module trimesh.proximity)": [[82, "trimesh.proximity.thickness"]], "trimesh.proximity": [[82, "module-trimesh.proximity"]], "vertex() (trimesh.proximity.proximityquery method)": [[82, "trimesh.proximity.ProximityQuery.vertex"]], "trimesh.ray": [[83, "module-trimesh.ray"]], "raymeshintersector (class in trimesh.ray.ray_pyembree)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector"]], "__init__() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector.__init__"]], "contains_points() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector.contains_points"]], "intersects_any() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_any"]], "intersects_first() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_first"]], "intersects_id() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_id"]], "intersects_location() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[84, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_location"]], "trimesh.ray.ray_pyembree": [[84, "module-trimesh.ray.ray_pyembree"]], "raymeshintersector (class in trimesh.ray.ray_triangle)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector"]], "__init__() (trimesh.ray.ray_triangle.raymeshintersector method)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector.__init__"]], "contains_points() (trimesh.ray.ray_triangle.raymeshintersector method)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector.contains_points"]], "intersects_any() (trimesh.ray.ray_triangle.raymeshintersector method)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_any"]], "intersects_first() (trimesh.ray.ray_triangle.raymeshintersector method)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_first"]], "intersects_id() (trimesh.ray.ray_triangle.raymeshintersector method)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_id"]], "intersects_location() (trimesh.ray.ray_triangle.raymeshintersector method)": [[85, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_location"]], "ray_bounds() (in module trimesh.ray.ray_triangle)": [[85, "trimesh.ray.ray_triangle.ray_bounds"]], "ray_triangle_candidates() (in module trimesh.ray.ray_triangle)": [[85, "trimesh.ray.ray_triangle.ray_triangle_candidates"]], "ray_triangle_id() (in module trimesh.ray.ray_triangle)": [[85, "trimesh.ray.ray_triangle.ray_triangle_id"]], "trimesh.ray.ray_triangle": [[85, "module-trimesh.ray.ray_triangle"]], "trimesh.ray.ray_util": [[86, "module-trimesh.ray.ray_util"]], "icp() (in module trimesh.registration)": [[87, "trimesh.registration.icp"]], "mesh_other() (in module trimesh.registration)": [[87, "trimesh.registration.mesh_other"]], "nricp_amberg() (in module trimesh.registration)": [[87, "trimesh.registration.nricp_amberg"]], "nricp_sumner() (in module trimesh.registration)": [[87, "trimesh.registration.nricp_sumner"]], "procrustes() (in module trimesh.registration)": [[87, "trimesh.registration.procrustes"]], "trimesh.registration": [[87, "module-trimesh.registration"]], "subdivide() (in module trimesh.remesh)": [[88, "trimesh.remesh.subdivide"]], "subdivide_loop() (in module trimesh.remesh)": [[88, "trimesh.remesh.subdivide_loop"]], "subdivide_to_size() (in module trimesh.remesh)": [[88, "trimesh.remesh.subdivide_to_size"]], "trimesh.remesh": [[88, "module-trimesh.remesh"]], "colors_to_gl() (in module trimesh.rendering)": [[89, "trimesh.rendering.colors_to_gl"]], "convert_to_vertexlist() (in module trimesh.rendering)": [[89, "trimesh.rendering.convert_to_vertexlist"]], "light_to_gl() (in module trimesh.rendering)": [[89, "trimesh.rendering.light_to_gl"]], "material_to_texture() (in module trimesh.rendering)": [[89, "trimesh.rendering.material_to_texture"]], "matrix_to_gl() (in module trimesh.rendering)": [[89, "trimesh.rendering.matrix_to_gl"]], "mesh_to_vertexlist() (in module trimesh.rendering)": [[89, "trimesh.rendering.mesh_to_vertexlist"]], "path_to_vertexlist() (in module trimesh.rendering)": [[89, "trimesh.rendering.path_to_vertexlist"]], "points_to_vertexlist() (in module trimesh.rendering)": [[89, "trimesh.rendering.points_to_vertexlist"]], "trimesh.rendering": [[89, "module-trimesh.rendering"]], "vector_to_gl() (in module trimesh.rendering)": [[89, "trimesh.rendering.vector_to_gl"]], "broken_faces() (in module trimesh.repair)": [[90, "trimesh.repair.broken_faces"]], "fill_holes() (in module trimesh.repair)": [[90, "trimesh.repair.fill_holes"]], "fix_inversion() (in module trimesh.repair)": [[90, "trimesh.repair.fix_inversion"]], "fix_normals() (in module trimesh.repair)": [[90, "trimesh.repair.fix_normals"]], "fix_winding() (in module trimesh.repair)": [[90, "trimesh.repair.fix_winding"]], "stitch() (in module trimesh.repair)": [[90, "trimesh.repair.stitch"]], "trimesh.repair": [[90, "module-trimesh.repair"]], "filepathresolver (class in trimesh.resolvers)": [[91, "trimesh.resolvers.FilePathResolver"]], "githubresolver (class in trimesh.resolvers)": [[91, "trimesh.resolvers.GithubResolver"]], "resolver (class in trimesh.resolvers)": [[91, "trimesh.resolvers.Resolver"]], "webresolver (class in trimesh.resolvers)": [[91, "trimesh.resolvers.WebResolver"]], "zipresolver (class in trimesh.resolvers)": [[91, "trimesh.resolvers.ZipResolver"]], "__init__() (trimesh.resolvers.filepathresolver method)": [[91, "trimesh.resolvers.FilePathResolver.__init__"]], "__init__() (trimesh.resolvers.githubresolver method)": [[91, "trimesh.resolvers.GithubResolver.__init__"]], "__init__() (trimesh.resolvers.resolver method)": [[91, "trimesh.resolvers.Resolver.__init__"]], "__init__() (trimesh.resolvers.webresolver method)": [[91, "trimesh.resolvers.WebResolver.__init__"]], "__init__() (trimesh.resolvers.zipresolver method)": [[91, "trimesh.resolvers.ZipResolver.__init__"]], "export() (trimesh.resolvers.zipresolver method)": [[91, "trimesh.resolvers.ZipResolver.export"]], "get() (trimesh.resolvers.filepathresolver method)": [[91, "trimesh.resolvers.FilePathResolver.get"]], "get() (trimesh.resolvers.githubresolver method)": [[91, "trimesh.resolvers.GithubResolver.get"]], "get() (trimesh.resolvers.resolver method)": [[91, "trimesh.resolvers.Resolver.get"]], "get() (trimesh.resolvers.webresolver method)": [[91, "trimesh.resolvers.WebResolver.get"]], "get() (trimesh.resolvers.zipresolver method)": [[91, "trimesh.resolvers.ZipResolver.get"]], "keys() (trimesh.resolvers.filepathresolver method)": [[91, "trimesh.resolvers.FilePathResolver.keys"]], "keys() (trimesh.resolvers.githubresolver method)": [[91, "trimesh.resolvers.GithubResolver.keys"]], "keys() (trimesh.resolvers.zipresolver method)": [[91, "trimesh.resolvers.ZipResolver.keys"]], "namespaced() (trimesh.resolvers.filepathresolver method)": [[91, "trimesh.resolvers.FilePathResolver.namespaced"]], "namespaced() (trimesh.resolvers.githubresolver method)": [[91, "trimesh.resolvers.GithubResolver.namespaced"]], "namespaced() (trimesh.resolvers.resolver method)": [[91, "trimesh.resolvers.Resolver.namespaced"]], "namespaced() (trimesh.resolvers.webresolver method)": [[91, "trimesh.resolvers.WebResolver.namespaced"]], "namespaced() (trimesh.resolvers.zipresolver method)": [[91, "trimesh.resolvers.ZipResolver.namespaced"]], "nearby_names() (in module trimesh.resolvers)": [[91, "trimesh.resolvers.nearby_names"]], "trimesh.resolvers": [[91, "module-trimesh.resolvers"]], "write() (trimesh.resolvers.filepathresolver method)": [[91, "trimesh.resolvers.FilePathResolver.write"]], "write() (trimesh.resolvers.githubresolver method)": [[91, "trimesh.resolvers.GithubResolver.write"]], "write() (trimesh.resolvers.resolver method)": [[91, "trimesh.resolvers.Resolver.write"]], "write() (trimesh.resolvers.webresolver method)": [[91, "trimesh.resolvers.WebResolver.write"]], "write() (trimesh.resolvers.zipresolver method)": [[91, "trimesh.resolvers.ZipResolver.write"]], "zipped (trimesh.resolvers.githubresolver property)": [[91, "trimesh.resolvers.GithubResolver.zipped"]], "get() (in module trimesh.resources)": [[92, "trimesh.resources.get"]], "get_bytes() (in module trimesh.resources)": [[92, "trimesh.resources.get_bytes"]], "get_json() (in module trimesh.resources)": [[92, "trimesh.resources.get_json"]], "get_schema() (in module trimesh.resources)": [[92, "trimesh.resources.get_schema"]], "get_stream() (in module trimesh.resources)": [[92, "trimesh.resources.get_stream"]], "get_string() (in module trimesh.resources)": [[92, "trimesh.resources.get_string"]], "trimesh.resources": [[92, "module-trimesh.resources"]], "sample_surface() (in module trimesh.sample)": [[93, "trimesh.sample.sample_surface"]], "sample_surface_even() (in module trimesh.sample)": [[93, "trimesh.sample.sample_surface_even"]], "sample_surface_sphere() (in module trimesh.sample)": [[93, "trimesh.sample.sample_surface_sphere"]], "trimesh.sample": [[93, "module-trimesh.sample"]], "volume_mesh() (in module trimesh.sample)": [[93, "trimesh.sample.volume_mesh"]], "volume_rectangular() (in module trimesh.sample)": [[93, "trimesh.sample.volume_rectangular"]], "camera (class in trimesh.scene)": [[94, "trimesh.scene.Camera"]], "k (trimesh.scene.camera property)": [[94, "trimesh.scene.Camera.K"]], "scene (class in trimesh.scene)": [[94, "trimesh.scene.Scene"]], "__init__() (trimesh.scene.camera method)": [[94, "trimesh.scene.Camera.__init__"]], "__init__() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.__init__"]], "add_geometry() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.add_geometry"]], "angles() (trimesh.scene.camera method)": [[94, "trimesh.scene.Camera.angles"]], "apply_transform() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.apply_transform"]], "area (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.area"]], "bounds (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.bounds"]], "bounds_corners (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.bounds_corners"]], "camera (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.camera"]], "camera_rays() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.camera_rays"]], "camera_transform (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.camera_transform"]], "center_mass (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.center_mass"]], "centroid (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.centroid"]], "convert_units() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.convert_units"]], "convex_hull (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.convex_hull"]], "copy() (trimesh.scene.camera method)": [[94, "trimesh.scene.Camera.copy"]], "copy() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.copy"]], "deduplicated() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.deduplicated"]], "delete_geometry() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.delete_geometry"]], "dump() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.dump"]], "duplicate_nodes (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.duplicate_nodes"]], "explode() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.explode"]], "export() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.export"]], "extents (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.extents"]], "focal (trimesh.scene.camera property)": [[94, "trimesh.scene.Camera.focal"]], "fov (trimesh.scene.camera property)": [[94, "trimesh.scene.Camera.fov"]], "geometry_identifiers (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.geometry_identifiers"]], "has_camera (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.has_camera"]], "is_empty (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.is_empty"]], "is_valid (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.is_valid"]], "lights (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.lights"]], "look_at() (trimesh.scene.camera method)": [[94, "trimesh.scene.Camera.look_at"]], "moment_inertia (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.moment_inertia"]], "moment_inertia_frame() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.moment_inertia_frame"]], "resolution (trimesh.scene.camera property)": [[94, "trimesh.scene.Camera.resolution"]], "rezero() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.rezero"]], "save_image() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.save_image"]], "scale (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.scale"]], "scaled() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.scaled"]], "set_camera() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.set_camera"]], "show() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.show"]], "split_scene() (in module trimesh.scene)": [[94, "trimesh.scene.split_scene"]], "strip_visuals() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.strip_visuals"]], "subscene() (trimesh.scene.scene method)": [[94, "trimesh.scene.Scene.subscene"]], "to_rays() (trimesh.scene.camera method)": [[94, "trimesh.scene.Camera.to_rays"]], "triangles (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.triangles"]], "triangles_node (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.triangles_node"]], "trimesh.scene": [[94, "module-trimesh.scene"]], "units (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.units"]], "volume (trimesh.scene.scene property)": [[94, "trimesh.scene.Scene.volume"]], "camera (class in trimesh.scene.cameras)": [[95, "trimesh.scene.cameras.Camera"]], "k (trimesh.scene.cameras.camera property)": [[95, "trimesh.scene.cameras.Camera.K"]], "__init__() (trimesh.scene.cameras.camera method)": [[95, "trimesh.scene.cameras.Camera.__init__"]], "angles() (trimesh.scene.cameras.camera method)": [[95, "trimesh.scene.cameras.Camera.angles"]], "camera_to_rays() (in module trimesh.scene.cameras)": [[95, "trimesh.scene.cameras.camera_to_rays"]], "copy() (trimesh.scene.cameras.camera method)": [[95, "trimesh.scene.cameras.Camera.copy"]], "focal (trimesh.scene.cameras.camera property)": [[95, "trimesh.scene.cameras.Camera.focal"]], "fov (trimesh.scene.cameras.camera property)": [[95, "trimesh.scene.cameras.Camera.fov"]], "look_at() (in module trimesh.scene.cameras)": [[95, "trimesh.scene.cameras.look_at"]], "look_at() (trimesh.scene.cameras.camera method)": [[95, "trimesh.scene.cameras.Camera.look_at"]], "ray_pixel_coords() (in module trimesh.scene.cameras)": [[95, "trimesh.scene.cameras.ray_pixel_coords"]], "resolution (trimesh.scene.cameras.camera property)": [[95, "trimesh.scene.cameras.Camera.resolution"]], "to_rays() (trimesh.scene.cameras.camera method)": [[95, "trimesh.scene.cameras.Camera.to_rays"]], "trimesh.scene.cameras": [[95, "module-trimesh.scene.cameras"]], "directionallight (class in trimesh.scene.lighting)": [[96, "trimesh.scene.lighting.DirectionalLight"]], "light (class in trimesh.scene.lighting)": [[96, "trimesh.scene.lighting.Light"]], "pointlight (class in trimesh.scene.lighting)": [[96, "trimesh.scene.lighting.PointLight"]], "spotlight (class in trimesh.scene.lighting)": [[96, "trimesh.scene.lighting.SpotLight"]], "__init__() (trimesh.scene.lighting.directionallight method)": [[96, "trimesh.scene.lighting.DirectionalLight.__init__"]], "__init__() (trimesh.scene.lighting.light method)": [[96, "trimesh.scene.lighting.Light.__init__"]], "__init__() (trimesh.scene.lighting.pointlight method)": [[96, "trimesh.scene.lighting.PointLight.__init__"]], "__init__() (trimesh.scene.lighting.spotlight method)": [[96, "trimesh.scene.lighting.SpotLight.__init__"]], "autolight() (in module trimesh.scene.lighting)": [[96, "trimesh.scene.lighting.autolight"]], "color (trimesh.scene.lighting.directionallight attribute)": [[96, "trimesh.scene.lighting.DirectionalLight.color"]], "color (trimesh.scene.lighting.light attribute)": [[96, "trimesh.scene.lighting.Light.color"]], "color (trimesh.scene.lighting.light property)": [[96, "id0"]], "color (trimesh.scene.lighting.pointlight attribute)": [[96, "trimesh.scene.lighting.PointLight.color"]], "color (trimesh.scene.lighting.spotlight attribute)": [[96, "trimesh.scene.lighting.SpotLight.color"]], "innerconeangle (trimesh.scene.lighting.spotlight attribute)": [[96, "trimesh.scene.lighting.SpotLight.innerConeAngle"]], "innerconeangle (trimesh.scene.lighting.spotlight property)": [[96, "id3"]], "intensity (trimesh.scene.lighting.directionallight attribute)": [[96, "trimesh.scene.lighting.DirectionalLight.intensity"]], "intensity (trimesh.scene.lighting.light attribute)": [[96, "trimesh.scene.lighting.Light.intensity"]], "intensity (trimesh.scene.lighting.light property)": [[96, "id1"]], "intensity (trimesh.scene.lighting.pointlight attribute)": [[96, "trimesh.scene.lighting.PointLight.intensity"]], "intensity (trimesh.scene.lighting.spotlight attribute)": [[96, "trimesh.scene.lighting.SpotLight.intensity"]], "name (trimesh.scene.lighting.directionallight attribute)": [[96, "trimesh.scene.lighting.DirectionalLight.name"]], "name (trimesh.scene.lighting.light attribute)": [[96, "trimesh.scene.lighting.Light.name"]], "name (trimesh.scene.lighting.pointlight attribute)": [[96, "trimesh.scene.lighting.PointLight.name"]], "name (trimesh.scene.lighting.spotlight attribute)": [[96, "trimesh.scene.lighting.SpotLight.name"]], "outerconeangle (trimesh.scene.lighting.spotlight attribute)": [[96, "trimesh.scene.lighting.SpotLight.outerConeAngle"]], "outerconeangle (trimesh.scene.lighting.spotlight property)": [[96, "id4"]], "radius (trimesh.scene.lighting.directionallight attribute)": [[96, "trimesh.scene.lighting.DirectionalLight.radius"]], "radius (trimesh.scene.lighting.light attribute)": [[96, "trimesh.scene.lighting.Light.radius"]], "radius (trimesh.scene.lighting.light property)": [[96, "id2"]], "radius (trimesh.scene.lighting.pointlight attribute)": [[96, "trimesh.scene.lighting.PointLight.radius"]], "radius (trimesh.scene.lighting.spotlight attribute)": [[96, "trimesh.scene.lighting.SpotLight.radius"]], "trimesh.scene.lighting": [[96, "module-trimesh.scene.lighting"]], "scene (class in trimesh.scene.scene)": [[97, "trimesh.scene.scene.Scene"]], "__init__() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.__init__"]], "add_geometry() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.add_geometry"]], "append_scenes() (in module trimesh.scene.scene)": [[97, "trimesh.scene.scene.append_scenes"]], "apply_transform() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.apply_transform"]], "area (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.area"]], "bounds (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.bounds"]], "bounds_corners (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.bounds_corners"]], "camera (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.camera"]], "camera_rays() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.camera_rays"]], "camera_transform (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.camera_transform"]], "center_mass (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.center_mass"]], "centroid (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.centroid"]], "convert_units() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.convert_units"]], "convex_hull (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.convex_hull"]], "copy() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.copy"]], "deduplicated() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.deduplicated"]], "delete_geometry() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.delete_geometry"]], "dump() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.dump"]], "duplicate_nodes (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.duplicate_nodes"]], "explode() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.explode"]], "export() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.export"]], "extents (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.extents"]], "geometry_identifiers (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.geometry_identifiers"]], "has_camera (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.has_camera"]], "is_empty (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.is_empty"]], "is_valid (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.is_valid"]], "lights (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.lights"]], "moment_inertia (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.moment_inertia"]], "moment_inertia_frame() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.moment_inertia_frame"]], "rezero() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.rezero"]], "save_image() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.save_image"]], "scale (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.scale"]], "scaled() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.scaled"]], "set_camera() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.set_camera"]], "show() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.show"]], "split_scene() (in module trimesh.scene.scene)": [[97, "trimesh.scene.scene.split_scene"]], "strip_visuals() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.strip_visuals"]], "subscene() (trimesh.scene.scene.scene method)": [[97, "trimesh.scene.scene.Scene.subscene"]], "triangles (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.triangles"]], "triangles_node (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.triangles_node"]], "trimesh.scene.scene": [[97, "module-trimesh.scene.scene"]], "units (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.units"]], "volume (trimesh.scene.scene.scene property)": [[97, "trimesh.scene.scene.Scene.volume"]], "enforcedforest (class in trimesh.scene.transforms)": [[98, "trimesh.scene.transforms.EnforcedForest"]], "scenegraph (class in trimesh.scene.transforms)": [[98, "trimesh.scene.transforms.SceneGraph"]], "__init__() (trimesh.scene.transforms.enforcedforest method)": [[98, "trimesh.scene.transforms.EnforcedForest.__init__"]], "__init__() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.__init__"]], "add_edge() (trimesh.scene.transforms.enforcedforest method)": [[98, "trimesh.scene.transforms.EnforcedForest.add_edge"]], "children (trimesh.scene.transforms.enforcedforest property)": [[98, "trimesh.scene.transforms.EnforcedForest.children"]], "clear() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.clear"]], "copy() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.copy"]], "from_edgelist() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.from_edgelist"]], "geometry_nodes (trimesh.scene.transforms.scenegraph property)": [[98, "trimesh.scene.transforms.SceneGraph.geometry_nodes"]], "get() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.get"]], "kwargs_to_matrix() (in module trimesh.scene.transforms)": [[98, "trimesh.scene.transforms.kwargs_to_matrix"]], "load() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.load"]], "nodes (trimesh.scene.transforms.enforcedforest property)": [[98, "trimesh.scene.transforms.EnforcedForest.nodes"]], "nodes (trimesh.scene.transforms.scenegraph property)": [[98, "trimesh.scene.transforms.SceneGraph.nodes"]], "nodes_geometry (trimesh.scene.transforms.scenegraph property)": [[98, "trimesh.scene.transforms.SceneGraph.nodes_geometry"]], "remove_geometries() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.remove_geometries"]], "remove_node() (trimesh.scene.transforms.enforcedforest method)": [[98, "trimesh.scene.transforms.EnforcedForest.remove_node"]], "shortest_path() (trimesh.scene.transforms.enforcedforest method)": [[98, "trimesh.scene.transforms.EnforcedForest.shortest_path"]], "show() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.show"]], "successors() (trimesh.scene.transforms.enforcedforest method)": [[98, "trimesh.scene.transforms.EnforcedForest.successors"]], "to_edgelist() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.to_edgelist"]], "to_flattened() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.to_flattened"]], "to_gltf() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.to_gltf"]], "to_networkx() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.to_networkx"]], "trimesh.scene.transforms": [[98, "module-trimesh.scene.transforms"]], "update() (trimesh.scene.transforms.scenegraph method)": [[98, "trimesh.scene.transforms.SceneGraph.update"]], "resolve() (in module trimesh.schemas)": [[99, "trimesh.schemas.resolve"]], "trimesh.schemas": [[99, "module-trimesh.schemas"]], "dilate_slope() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.dilate_slope"]], "filter_humphrey() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.filter_humphrey"]], "filter_laplacian() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.filter_laplacian"]], "filter_mut_dif_laplacian() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.filter_mut_dif_laplacian"]], "filter_taubin() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.filter_taubin"]], "get_vertices_normals() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.get_vertices_normals"]], "laplacian_calculation() (in module trimesh.smoothing)": [[100, "trimesh.smoothing.laplacian_calculation"]], "trimesh.smoothing": [[100, "module-trimesh.smoothing"]], "arcball (class in trimesh.transformations)": [[101, "trimesh.transformations.Arcball"]], "__init__() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.__init__"]], "affine_matrix_from_points() (in module trimesh.transformations)": [[101, "trimesh.transformations.affine_matrix_from_points"]], "angle_between_vectors() (in module trimesh.transformations)": [[101, "trimesh.transformations.angle_between_vectors"]], "arcball_constrain_to_axis() (in module trimesh.transformations)": [[101, "trimesh.transformations.arcball_constrain_to_axis"]], "arcball_map_to_sphere() (in module trimesh.transformations)": [[101, "trimesh.transformations.arcball_map_to_sphere"]], "arcball_nearest_axis() (in module trimesh.transformations)": [[101, "trimesh.transformations.arcball_nearest_axis"]], "clip_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.clip_matrix"]], "compose_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.compose_matrix"]], "concatenate_matrices() (in module trimesh.transformations)": [[101, "trimesh.transformations.concatenate_matrices"]], "constrain (trimesh.transformations.arcball property)": [[101, "trimesh.transformations.Arcball.constrain"]], "decompose_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.decompose_matrix"]], "down() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.down"]], "drag() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.drag"]], "euler_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.euler_from_matrix"]], "euler_from_quaternion() (in module trimesh.transformations)": [[101, "trimesh.transformations.euler_from_quaternion"]], "euler_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.euler_matrix"]], "fix_rigid() (in module trimesh.transformations)": [[101, "trimesh.transformations.fix_rigid"]], "flips_winding() (in module trimesh.transformations)": [[101, "trimesh.transformations.flips_winding"]], "identity_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.identity_matrix"]], "inverse_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.inverse_matrix"]], "is_rigid() (in module trimesh.transformations)": [[101, "trimesh.transformations.is_rigid"]], "is_same_quaternion() (in module trimesh.transformations)": [[101, "trimesh.transformations.is_same_quaternion"]], "is_same_transform() (in module trimesh.transformations)": [[101, "trimesh.transformations.is_same_transform"]], "matrix() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.matrix"]], "next() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.next"]], "orthogonalization_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.orthogonalization_matrix"]], "place() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.place"]], "planar_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.planar_matrix"]], "planar_matrix_to_3d() (in module trimesh.transformations)": [[101, "trimesh.transformations.planar_matrix_to_3D"]], "projection_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.projection_from_matrix"]], "projection_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.projection_matrix"]], "quaternion_about_axis() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_about_axis"]], "quaternion_conjugate() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_conjugate"]], "quaternion_from_euler() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_from_euler"]], "quaternion_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_from_matrix"]], "quaternion_imag() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_imag"]], "quaternion_inverse() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_inverse"]], "quaternion_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_matrix"]], "quaternion_multiply() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_multiply"]], "quaternion_real() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_real"]], "quaternion_slerp() (in module trimesh.transformations)": [[101, "trimesh.transformations.quaternion_slerp"]], "random_quaternion() (in module trimesh.transformations)": [[101, "trimesh.transformations.random_quaternion"]], "random_rotation_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.random_rotation_matrix"]], "random_vector() (in module trimesh.transformations)": [[101, "trimesh.transformations.random_vector"]], "reflection_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.reflection_from_matrix"]], "reflection_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.reflection_matrix"]], "rotation_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.rotation_from_matrix"]], "rotation_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.rotation_matrix"]], "scale_and_translate() (in module trimesh.transformations)": [[101, "trimesh.transformations.scale_and_translate"]], "scale_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.scale_from_matrix"]], "scale_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.scale_matrix"]], "setaxes() (trimesh.transformations.arcball method)": [[101, "trimesh.transformations.Arcball.setaxes"]], "shear_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.shear_from_matrix"]], "shear_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.shear_matrix"]], "spherical_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.spherical_matrix"]], "superimposition_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.superimposition_matrix"]], "transform_around() (in module trimesh.transformations)": [[101, "trimesh.transformations.transform_around"]], "transform_points() (in module trimesh.transformations)": [[101, "trimesh.transformations.transform_points"]], "translation_from_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.translation_from_matrix"]], "translation_matrix() (in module trimesh.transformations)": [[101, "trimesh.transformations.translation_matrix"]], "trimesh.transformations": [[101, "module-trimesh.transformations"]], "unit_vector() (in module trimesh.transformations)": [[101, "trimesh.transformations.unit_vector"]], "vector_norm() (in module trimesh.transformations)": [[101, "trimesh.transformations.vector_norm"]], "vector_product() (in module trimesh.transformations)": [[101, "trimesh.transformations.vector_product"]], "massproperties (class in trimesh.triangles)": [[102, "trimesh.triangles.MassProperties"]], "__init__() (trimesh.triangles.massproperties method)": [[102, "trimesh.triangles.MassProperties.__init__"]], "all_coplanar() (in module trimesh.triangles)": [[102, "trimesh.triangles.all_coplanar"]], "angles() (in module trimesh.triangles)": [[102, "trimesh.triangles.angles"]], "any_coplanar() (in module trimesh.triangles)": [[102, "trimesh.triangles.any_coplanar"]], "area() (in module trimesh.triangles)": [[102, "trimesh.triangles.area"]], "barycentric_to_points() (in module trimesh.triangles)": [[102, "trimesh.triangles.barycentric_to_points"]], "bounds_tree() (in module trimesh.triangles)": [[102, "trimesh.triangles.bounds_tree"]], "center_mass (trimesh.triangles.massproperties attribute)": [[102, "trimesh.triangles.MassProperties.center_mass"]], "closest_point() (in module trimesh.triangles)": [[102, "trimesh.triangles.closest_point"]], "cross() (in module trimesh.triangles)": [[102, "trimesh.triangles.cross"]], "density (trimesh.triangles.massproperties attribute)": [[102, "trimesh.triangles.MassProperties.density"]], "extents() (in module trimesh.triangles)": [[102, "trimesh.triangles.extents"]], "inertia (trimesh.triangles.massproperties attribute)": [[102, "trimesh.triangles.MassProperties.inertia"]], "mass (trimesh.triangles.massproperties attribute)": [[102, "trimesh.triangles.MassProperties.mass"]], "mass_properties() (in module trimesh.triangles)": [[102, "trimesh.triangles.mass_properties"]], "nondegenerate() (in module trimesh.triangles)": [[102, "trimesh.triangles.nondegenerate"]], "normals() (in module trimesh.triangles)": [[102, "trimesh.triangles.normals"]], "points_to_barycentric() (in module trimesh.triangles)": [[102, "trimesh.triangles.points_to_barycentric"]], "to_kwargs() (in module trimesh.triangles)": [[102, "trimesh.triangles.to_kwargs"]], "trimesh.triangles": [[102, "module-trimesh.triangles"]], "volume (trimesh.triangles.massproperties attribute)": [[102, "trimesh.triangles.MassProperties.volume"]], "windings_aligned() (in module trimesh.triangles)": [[102, "trimesh.triangles.windings_aligned"]], "any (class in trimesh.typed)": [[103, "trimesh.typed.Any"]], "binaryio (class in trimesh.typed)": [[103, "trimesh.typed.BinaryIO"]], "dict (in module trimesh.typed)": [[103, "trimesh.typed.Dict"]], "io (class in trimesh.typed)": [[103, "trimesh.typed.IO"]], "iterable (class in trimesh.typed)": [[103, "trimesh.typed.Iterable"]], "list (in module trimesh.typed)": [[103, "trimesh.typed.List"]], "sequence (class in trimesh.typed)": [[103, "trimesh.typed.Sequence"]], "tuple (in module trimesh.typed)": [[103, "trimesh.typed.Tuple"]], "as_integer_ratio() (trimesh.typed.float64 method)": [[103, "trimesh.typed.float64.as_integer_ratio"]], "bit_count() (trimesh.typed.int64 method)": [[103, "trimesh.typed.int64.bit_count"]], "close() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.close"]], "closed (trimesh.typed.io property)": [[103, "trimesh.typed.IO.closed"]], "count() (trimesh.typed.sequence method)": [[103, "trimesh.typed.Sequence.count"]], "fileno() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.fileno"]], "float64 (class in trimesh.typed)": [[103, "trimesh.typed.float64"]], "flush() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.flush"]], "index() (trimesh.typed.sequence method)": [[103, "trimesh.typed.Sequence.index"]], "int64 (class in trimesh.typed)": [[103, "trimesh.typed.int64"]], "is_integer() (trimesh.typed.float64 method)": [[103, "trimesh.typed.float64.is_integer"]], "isatty() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.isatty"]], "mode (trimesh.typed.io property)": [[103, "trimesh.typed.IO.mode"]], "name (trimesh.typed.io property)": [[103, "trimesh.typed.IO.name"]], "read() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.read"]], "readable() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.readable"]], "readline() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.readline"]], "readlines() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.readlines"]], "seek() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.seek"]], "seekable() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.seekable"]], "tell() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.tell"]], "trimesh.typed": [[103, "module-trimesh.typed"]], "truncate() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.truncate"]], "writable() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.writable"]], "write() (trimesh.typed.binaryio method)": [[103, "trimesh.typed.BinaryIO.write"]], "write() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.write"]], "writelines() (trimesh.typed.io method)": [[103, "trimesh.typed.IO.writelines"]], "keys() (in module trimesh.units)": [[104, "trimesh.units.keys"]], "to_inch() (in module trimesh.units)": [[104, "trimesh.units.to_inch"]], "trimesh.units": [[104, "module-trimesh.units"]], "unit_conversion() (in module trimesh.units)": [[104, "trimesh.units.unit_conversion"]], "units_from_metadata() (in module trimesh.units)": [[104, "trimesh.units.units_from_metadata"]], "functionregistry (class in trimesh.util)": [[105, "trimesh.util.FunctionRegistry"]], "__init__() (trimesh.util.functionregistry method)": [[105, "trimesh.util.FunctionRegistry.__init__"]], "allclose() (in module trimesh.util)": [[105, "trimesh.util.allclose"]], "append_faces() (in module trimesh.util)": [[105, "trimesh.util.append_faces"]], "array_to_encoded() (in module trimesh.util)": [[105, "trimesh.util.array_to_encoded"]], "array_to_string() (in module trimesh.util)": [[105, "trimesh.util.array_to_string"]], "attach_to_log() (in module trimesh.util)": [[105, "trimesh.util.attach_to_log"]], "bounds_tree() (in module trimesh.util)": [[105, "trimesh.util.bounds_tree"]], "comment_strip() (in module trimesh.util)": [[105, "trimesh.util.comment_strip"]], "compress() (in module trimesh.util)": [[105, "trimesh.util.compress"]], "concatenate() (in module trimesh.util)": [[105, "trimesh.util.concatenate"]], "convert_like() (in module trimesh.util)": [[105, "trimesh.util.convert_like"]], "decimal_to_digits() (in module trimesh.util)": [[105, "trimesh.util.decimal_to_digits"]], "decode_keys() (in module trimesh.util)": [[105, "trimesh.util.decode_keys"]], "decode_text() (in module trimesh.util)": [[105, "trimesh.util.decode_text"]], "decompress() (in module trimesh.util)": [[105, "trimesh.util.decompress"]], "diagonal_dot() (in module trimesh.util)": [[105, "trimesh.util.diagonal_dot"]], "distance_to_end() (in module trimesh.util)": [[105, "trimesh.util.distance_to_end"]], "encoded_to_array() (in module trimesh.util)": [[105, "trimesh.util.encoded_to_array"]], "euclidean() (in module trimesh.util)": [[105, "trimesh.util.euclidean"]], "generate_basis() (in module trimesh.util)": [[105, "trimesh.util.generate_basis"]], "grid_arange() (in module trimesh.util)": [[105, "trimesh.util.grid_arange"]], "grid_linspace() (in module trimesh.util)": [[105, "trimesh.util.grid_linspace"]], "has_module() (in module trimesh.util)": [[105, "trimesh.util.has_module"]], "is_binary_file() (in module trimesh.util)": [[105, "trimesh.util.is_binary_file"]], "is_ccw() (in module trimesh.util)": [[105, "trimesh.util.is_ccw"]], "is_file() (in module trimesh.util)": [[105, "trimesh.util.is_file"]], "is_instance_named() (in module trimesh.util)": [[105, "trimesh.util.is_instance_named"]], "is_none() (in module trimesh.util)": [[105, "trimesh.util.is_none"]], "is_pathlib() (in module trimesh.util)": [[105, "trimesh.util.is_pathlib"]], "is_sequence() (in module trimesh.util)": [[105, "trimesh.util.is_sequence"]], "is_shape() (in module trimesh.util)": [[105, "trimesh.util.is_shape"]], "is_string() (in module trimesh.util)": [[105, "trimesh.util.is_string"]], "isclose() (in module trimesh.util)": [[105, "trimesh.util.isclose"]], "jsonify() (in module trimesh.util)": [[105, "trimesh.util.jsonify"]], "make_sequence() (in module trimesh.util)": [[105, "trimesh.util.make_sequence"]], "multi_dict() (in module trimesh.util)": [[105, "trimesh.util.multi_dict"]], "pairwise() (in module trimesh.util)": [[105, "trimesh.util.pairwise"]], "row_norm() (in module trimesh.util)": [[105, "trimesh.util.row_norm"]], "sigfig_int() (in module trimesh.util)": [[105, "trimesh.util.sigfig_int"]], "sigfig_round() (in module trimesh.util)": [[105, "trimesh.util.sigfig_round"]], "spherical_to_vector() (in module trimesh.util)": [[105, "trimesh.util.spherical_to_vector"]], "split_extension() (in module trimesh.util)": [[105, "trimesh.util.split_extension"]], "stack_3d() (in module trimesh.util)": [[105, "trimesh.util.stack_3D"]], "stack_lines() (in module trimesh.util)": [[105, "trimesh.util.stack_lines"]], "structured_array_to_string() (in module trimesh.util)": [[105, "trimesh.util.structured_array_to_string"]], "submesh() (in module trimesh.util)": [[105, "trimesh.util.submesh"]], "to_ascii() (in module trimesh.util)": [[105, "trimesh.util.to_ascii"]], "tolist() (in module trimesh.util)": [[105, "trimesh.util.tolist"]], "triangle_fans_to_faces() (in module trimesh.util)": [[105, "trimesh.util.triangle_fans_to_faces"]], "triangle_strips_to_faces() (in module trimesh.util)": [[105, "trimesh.util.triangle_strips_to_faces"]], "trimesh.util": [[105, "module-trimesh.util"]], "type_bases() (in module trimesh.util)": [[105, "trimesh.util.type_bases"]], "type_named() (in module trimesh.util)": [[105, "trimesh.util.type_named"]], "unique_id() (in module trimesh.util)": [[105, "trimesh.util.unique_id"]], "unique_name() (in module trimesh.util)": [[105, "trimesh.util.unique_name"]], "unitize() (in module trimesh.util)": [[105, "trimesh.util.unitize"]], "vector_hemisphere() (in module trimesh.util)": [[105, "trimesh.util.vector_hemisphere"]], "vector_to_spherical() (in module trimesh.util)": [[105, "trimesh.util.vector_to_spherical"]], "vstack_empty() (in module trimesh.util)": [[105, "trimesh.util.vstack_empty"]], "wrap_as_stream() (in module trimesh.util)": [[105, "trimesh.util.wrap_as_stream"]], "write_encoded() (in module trimesh.util)": [[105, "trimesh.util.write_encoded"]], "zero_pad() (in module trimesh.util)": [[105, "trimesh.util.zero_pad"]], "trimesh.version": [[106, "module-trimesh.version"]], "in_notebook() (in module trimesh.viewer)": [[107, "trimesh.viewer.in_notebook"]], "scene_to_html() (in module trimesh.viewer)": [[107, "trimesh.viewer.scene_to_html"]], "scene_to_notebook() (in module trimesh.viewer)": [[107, "trimesh.viewer.scene_to_notebook"]], "trimesh.viewer": [[107, "module-trimesh.viewer"]], "in_notebook() (in module trimesh.viewer.notebook)": [[108, "trimesh.viewer.notebook.in_notebook"]], "scene_to_html() (in module trimesh.viewer.notebook)": [[108, "trimesh.viewer.notebook.scene_to_html"]], "scene_to_notebook() (in module trimesh.viewer.notebook)": [[108, "trimesh.viewer.notebook.scene_to_notebook"]], "trimesh.viewer.notebook": [[108, "module-trimesh.viewer.notebook"]], "state_pan (trimesh.viewer.trackball.trackball attribute)": [[109, "trimesh.viewer.trackball.Trackball.STATE_PAN"]], "state_roll (trimesh.viewer.trackball.trackball attribute)": [[109, "trimesh.viewer.trackball.Trackball.STATE_ROLL"]], "state_rotate (trimesh.viewer.trackball.trackball attribute)": [[109, "trimesh.viewer.trackball.Trackball.STATE_ROTATE"]], "state_zoom (trimesh.viewer.trackball.trackball attribute)": [[109, "trimesh.viewer.trackball.Trackball.STATE_ZOOM"]], "trackball (class in trimesh.viewer.trackball)": [[109, "trimesh.viewer.trackball.Trackball"]], "__init__() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.__init__"]], "down() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.down"]], "drag() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.drag"]], "pose (trimesh.viewer.trackball.trackball property)": [[109, "trimesh.viewer.trackball.Trackball.pose"]], "resize() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.resize"]], "rotate() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.rotate"]], "scroll() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.scroll"]], "set_state() (trimesh.viewer.trackball.trackball method)": [[109, "trimesh.viewer.trackball.Trackball.set_state"]], "trimesh.viewer.trackball": [[109, "module-trimesh.viewer.trackball"]], "colorvisuals (class in trimesh.visual)": [[112, "trimesh.visual.ColorVisuals"]], "texturevisuals (class in trimesh.visual)": [[112, "trimesh.visual.TextureVisuals"]], "__init__() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.__init__"]], "__init__() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.__init__"]], "concatenate() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.concatenate"]], "concatenate() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.concatenate"]], "copy() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.copy"]], "copy() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.copy"]], "create_visual() (in module trimesh.visual)": [[112, "trimesh.visual.create_visual"]], "defined (trimesh.visual.colorvisuals property)": [[112, "trimesh.visual.ColorVisuals.defined"]], "defined (trimesh.visual.texturevisuals property)": [[112, "trimesh.visual.TextureVisuals.defined"]], "face_colors (trimesh.visual.colorvisuals property)": [[112, "trimesh.visual.ColorVisuals.face_colors"]], "face_subset() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.face_subset"]], "face_subset() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.face_subset"]], "interpolate() (in module trimesh.visual)": [[112, "trimesh.visual.interpolate"]], "kind (trimesh.visual.colorvisuals property)": [[112, "trimesh.visual.ColorVisuals.kind"]], "kind (trimesh.visual.texturevisuals property)": [[112, "trimesh.visual.TextureVisuals.kind"]], "linear_color_map() (in module trimesh.visual)": [[112, "trimesh.visual.linear_color_map"]], "main_color (trimesh.visual.colorvisuals property)": [[112, "trimesh.visual.ColorVisuals.main_color"]], "random_color() (in module trimesh.visual)": [[112, "trimesh.visual.random_color"]], "to_color() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.to_color"]], "to_rgba() (in module trimesh.visual)": [[112, "trimesh.visual.to_rgba"]], "to_texture() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.to_texture"]], "transparency (trimesh.visual.colorvisuals property)": [[112, "trimesh.visual.ColorVisuals.transparency"]], "trimesh.visual": [[112, "module-trimesh.visual"]], "update_faces() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.update_faces"]], "update_faces() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.update_faces"]], "update_vertices() (trimesh.visual.colorvisuals method)": [[112, "trimesh.visual.ColorVisuals.update_vertices"]], "update_vertices() (trimesh.visual.texturevisuals method)": [[112, "trimesh.visual.TextureVisuals.update_vertices"]], "uv (trimesh.visual.texturevisuals property)": [[112, "trimesh.visual.TextureVisuals.uv"]], "uv_to_color() (in module trimesh.visual)": [[112, "trimesh.visual.uv_to_color"]], "uv_to_interpolated_color() (in module trimesh.visual)": [[112, "trimesh.visual.uv_to_interpolated_color"]], "vertex_colors (trimesh.visual.colorvisuals property)": [[112, "trimesh.visual.ColorVisuals.vertex_colors"]], "visuals (class in trimesh.visual.base)": [[113, "trimesh.visual.base.Visuals"]], "concatenate() (trimesh.visual.base.visuals method)": [[113, "trimesh.visual.base.Visuals.concatenate"]], "copy() (trimesh.visual.base.visuals method)": [[113, "trimesh.visual.base.Visuals.copy"]], "kind (trimesh.visual.base.visuals property)": [[113, "trimesh.visual.base.Visuals.kind"]], "trimesh.visual.base": [[113, "module-trimesh.visual.base"]], "update_faces() (trimesh.visual.base.visuals method)": [[113, "trimesh.visual.base.Visuals.update_faces"]], "update_vertices() (trimesh.visual.base.visuals method)": [[113, "trimesh.visual.base.Visuals.update_vertices"]], "colorvisuals (class in trimesh.visual.color)": [[114, "trimesh.visual.color.ColorVisuals"]], "vertexcolor (class in trimesh.visual.color)": [[114, "trimesh.visual.color.VertexColor"]], "__init__() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.__init__"]], "__init__() (trimesh.visual.color.vertexcolor method)": [[114, "trimesh.visual.color.VertexColor.__init__"]], "color_to_uv() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.color_to_uv"]], "colors_to_materials() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.colors_to_materials"]], "concatenate() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.concatenate"]], "concatenate() (trimesh.visual.color.vertexcolor method)": [[114, "trimesh.visual.color.VertexColor.concatenate"]], "copy() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.copy"]], "copy() (trimesh.visual.color.vertexcolor method)": [[114, "trimesh.visual.color.VertexColor.copy"]], "defined (trimesh.visual.color.colorvisuals property)": [[114, "trimesh.visual.color.ColorVisuals.defined"]], "face_colors (trimesh.visual.color.colorvisuals property)": [[114, "trimesh.visual.color.ColorVisuals.face_colors"]], "face_subset() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.face_subset"]], "face_to_vertex_color() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.face_to_vertex_color"]], "hex_to_rgba() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.hex_to_rgba"]], "interpolate() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.interpolate"]], "kind (trimesh.visual.color.colorvisuals property)": [[114, "trimesh.visual.color.ColorVisuals.kind"]], "kind (trimesh.visual.color.vertexcolor property)": [[114, "trimesh.visual.color.VertexColor.kind"]], "linear_color_map() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.linear_color_map"]], "main_color (trimesh.visual.color.colorvisuals property)": [[114, "trimesh.visual.color.ColorVisuals.main_color"]], "random_color() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.random_color"]], "to_float() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.to_float"]], "to_rgba() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.to_rgba"]], "to_texture() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.to_texture"]], "transparency (trimesh.visual.color.colorvisuals property)": [[114, "trimesh.visual.color.ColorVisuals.transparency"]], "trimesh.visual.color": [[114, "module-trimesh.visual.color"]], "update_faces() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.update_faces"]], "update_faces() (trimesh.visual.color.vertexcolor method)": [[114, "trimesh.visual.color.VertexColor.update_faces"]], "update_vertices() (trimesh.visual.color.colorvisuals method)": [[114, "trimesh.visual.color.ColorVisuals.update_vertices"]], "update_vertices() (trimesh.visual.color.vertexcolor method)": [[114, "trimesh.visual.color.VertexColor.update_vertices"]], "uv_to_color() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.uv_to_color"]], "uv_to_interpolated_color() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.uv_to_interpolated_color"]], "vertex_colors (trimesh.visual.color.colorvisuals property)": [[114, "trimesh.visual.color.ColorVisuals.vertex_colors"]], "vertex_colors (trimesh.visual.color.vertexcolor property)": [[114, "trimesh.visual.color.VertexColor.vertex_colors"]], "vertex_to_face_color() (in module trimesh.visual.color)": [[114, "trimesh.visual.color.vertex_to_face_color"]], "specular_to_pbr() (in module trimesh.visual.gloss)": [[115, "trimesh.visual.gloss.specular_to_pbr"]], "trimesh.visual.gloss": [[115, "module-trimesh.visual.gloss"]], "material (class in trimesh.visual.material)": [[116, "trimesh.visual.material.Material"]], "multimaterial (class in trimesh.visual.material)": [[116, "trimesh.visual.material.MultiMaterial"]], "pbrmaterial (class in trimesh.visual.material)": [[116, "trimesh.visual.material.PBRMaterial"]], "simplematerial (class in trimesh.visual.material)": [[116, "trimesh.visual.material.SimpleMaterial"]], "__init__() (trimesh.visual.material.material method)": [[116, "trimesh.visual.material.Material.__init__"]], "__init__() (trimesh.visual.material.multimaterial method)": [[116, "trimesh.visual.material.MultiMaterial.__init__"]], "__init__() (trimesh.visual.material.pbrmaterial method)": [[116, "trimesh.visual.material.PBRMaterial.__init__"]], "__init__() (trimesh.visual.material.simplematerial method)": [[116, "trimesh.visual.material.SimpleMaterial.__init__"]], "add() (trimesh.visual.material.multimaterial method)": [[116, "trimesh.visual.material.MultiMaterial.add"]], "alphacutoff (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.alphaCutoff"]], "alphamode (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.alphaMode"]], "basecolorfactor (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.baseColorFactor"]], "basecolortexture (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.baseColorTexture"]], "color_image() (in module trimesh.visual.material)": [[116, "trimesh.visual.material.color_image"]], "copy() (trimesh.visual.material.material method)": [[116, "trimesh.visual.material.Material.copy"]], "copy() (trimesh.visual.material.pbrmaterial method)": [[116, "trimesh.visual.material.PBRMaterial.copy"]], "doublesided (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.doubleSided"]], "emissivefactor (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.emissiveFactor"]], "emissivetexture (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.emissiveTexture"]], "empty_material() (in module trimesh.visual.material)": [[116, "trimesh.visual.material.empty_material"]], "get() (trimesh.visual.material.multimaterial method)": [[116, "trimesh.visual.material.MultiMaterial.get"]], "glossiness (trimesh.visual.material.simplematerial property)": [[116, "trimesh.visual.material.SimpleMaterial.glossiness"]], "main_color (trimesh.visual.material.material property)": [[116, "trimesh.visual.material.Material.main_color"]], "main_color (trimesh.visual.material.multimaterial property)": [[116, "trimesh.visual.material.MultiMaterial.main_color"]], "main_color (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.main_color"]], "main_color (trimesh.visual.material.simplematerial property)": [[116, "trimesh.visual.material.SimpleMaterial.main_color"]], "metallicfactor (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.metallicFactor"]], "metallicroughnesstexture (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.metallicRoughnessTexture"]], "name (trimesh.visual.material.material property)": [[116, "trimesh.visual.material.Material.name"]], "name (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.name"]], "normaltexture (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.normalTexture"]], "occlusiontexture (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.occlusionTexture"]], "pack() (in module trimesh.visual.material)": [[116, "trimesh.visual.material.pack"]], "roughnessfactor (trimesh.visual.material.pbrmaterial property)": [[116, "trimesh.visual.material.PBRMaterial.roughnessFactor"]], "to_color() (trimesh.visual.material.pbrmaterial method)": [[116, "trimesh.visual.material.PBRMaterial.to_color"]], "to_color() (trimesh.visual.material.simplematerial method)": [[116, "trimesh.visual.material.SimpleMaterial.to_color"]], "to_obj() (trimesh.visual.material.simplematerial method)": [[116, "trimesh.visual.material.SimpleMaterial.to_obj"]], "to_pbr() (trimesh.visual.material.multimaterial method)": [[116, "trimesh.visual.material.MultiMaterial.to_pbr"]], "to_pbr() (trimesh.visual.material.simplematerial method)": [[116, "trimesh.visual.material.SimpleMaterial.to_pbr"]], "to_simple() (trimesh.visual.material.pbrmaterial method)": [[116, "trimesh.visual.material.PBRMaterial.to_simple"]], "trimesh.visual.material": [[116, "module-trimesh.visual.material"]], "concatenate() (in module trimesh.visual.objects)": [[117, "trimesh.visual.objects.concatenate"]], "create_visual() (in module trimesh.visual.objects)": [[117, "trimesh.visual.objects.create_visual"]], "trimesh.visual.objects": [[117, "module-trimesh.visual.objects"]], "texturevisuals (class in trimesh.visual.texture)": [[118, "trimesh.visual.texture.TextureVisuals"]], "__init__() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.__init__"]], "concatenate() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.concatenate"]], "copy() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.copy"]], "defined (trimesh.visual.texture.texturevisuals property)": [[118, "trimesh.visual.texture.TextureVisuals.defined"]], "face_subset() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.face_subset"]], "kind (trimesh.visual.texture.texturevisuals property)": [[118, "trimesh.visual.texture.TextureVisuals.kind"]], "power_resize() (in module trimesh.visual.texture)": [[118, "trimesh.visual.texture.power_resize"]], "to_color() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.to_color"]], "trimesh.visual.texture": [[118, "module-trimesh.visual.texture"]], "unmerge_faces() (in module trimesh.visual.texture)": [[118, "trimesh.visual.texture.unmerge_faces"]], "update_faces() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.update_faces"]], "update_vertices() (trimesh.visual.texture.texturevisuals method)": [[118, "trimesh.visual.texture.TextureVisuals.update_vertices"]], "uv (trimesh.visual.texture.texturevisuals property)": [[118, "trimesh.visual.texture.TextureVisuals.uv"]], "voxelgrid (class in trimesh.voxel)": [[119, "trimesh.voxel.VoxelGrid"]], "__init__() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.__init__"]], "apply_transform() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.apply_transform"]], "as_boxes() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.as_boxes"]], "bounds (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.bounds"]], "copy() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.copy"]], "element_volume (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.element_volume"]], "encoding (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.encoding"]], "export() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.export"]], "extents (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.extents"]], "fill() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.fill"]], "filled_count (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.filled_count"]], "hollow() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.hollow"]], "indices_to_points() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.indices_to_points"]], "is_empty (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.is_empty"]], "is_filled() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.is_filled"]], "marching_cubes (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.marching_cubes"]], "matrix (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.matrix"]], "pitch (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.pitch"]], "points (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.points"]], "points_to_indices() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.points_to_indices"]], "revoxelized() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.revoxelized"]], "scale (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.scale"]], "shape (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.shape"]], "show() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.show"]], "sparse_indices (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.sparse_indices"]], "strip() (trimesh.voxel.voxelgrid method)": [[119, "trimesh.voxel.VoxelGrid.strip"]], "transform (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.transform"]], "translation (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.translation"]], "trimesh.voxel": [[119, "module-trimesh.voxel"]], "volume (trimesh.voxel.voxelgrid property)": [[119, "trimesh.voxel.VoxelGrid.volume"]], "voxelgrid (class in trimesh.voxel.base)": [[120, "trimesh.voxel.base.VoxelGrid"]], "__init__() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.__init__"]], "apply_transform() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.apply_transform"]], "as_boxes() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.as_boxes"]], "bounds (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.bounds"]], "copy() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.copy"]], "element_volume (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.element_volume"]], "encoding (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.encoding"]], "export() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.export"]], "extents (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.extents"]], "fill() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.fill"]], "filled_count (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.filled_count"]], "hollow() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.hollow"]], "indices_to_points() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.indices_to_points"]], "is_empty (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.is_empty"]], "is_filled() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.is_filled"]], "marching_cubes (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.marching_cubes"]], "matrix (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.matrix"]], "pitch (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.pitch"]], "points (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.points"]], "points_to_indices() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.points_to_indices"]], "revoxelized() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.revoxelized"]], "scale (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.scale"]], "shape (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.shape"]], "show() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.show"]], "sparse_indices (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.sparse_indices"]], "strip() (trimesh.voxel.base.voxelgrid method)": [[120, "trimesh.voxel.base.VoxelGrid.strip"]], "transform (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.transform"]], "translation (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.translation"]], "trimesh.voxel.base": [[120, "module-trimesh.voxel.base"]], "volume (trimesh.voxel.base.voxelgrid property)": [[120, "trimesh.voxel.base.VoxelGrid.volume"]], "local_voxelize() (in module trimesh.voxel.creation)": [[121, "trimesh.voxel.creation.local_voxelize"]], "trimesh.voxel.creation": [[121, "module-trimesh.voxel.creation"]], "voxelize() (in module trimesh.voxel.creation)": [[121, "trimesh.voxel.creation.voxelize"]], "binaryrunlengthencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding"]], "denseencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.DenseEncoding"]], "encoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.Encoding"]], "flattenedencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.FlattenedEncoding"]], "flippedencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.FlippedEncoding"]], "lazyindexmap (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.LazyIndexMap"]], "runlengthencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.RunLengthEncoding"]], "shapedencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.ShapedEncoding"]], "sparsebinaryencoding() (in module trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.SparseBinaryEncoding"]], "sparseencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.SparseEncoding"]], "transposedencoding (class in trimesh.voxel.encoding)": [[122, "trimesh.voxel.encoding.TransposedEncoding"]], "__init__() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.__init__"]], "__init__() (trimesh.voxel.encoding.flippedencoding method)": [[122, "trimesh.voxel.encoding.FlippedEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.shapedencoding method)": [[122, "trimesh.voxel.encoding.ShapedEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.sparseencoding method)": [[122, "trimesh.voxel.encoding.SparseEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.transposedencoding method)": [[122, "trimesh.voxel.encoding.TransposedEncoding.__init__"]], "binary_run_length_data() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.binary_run_length_data"]], "binary_run_length_data() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.binary_run_length_data"]], "binary_run_length_data() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.binary_run_length_data"]], "copy() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.copy"]], "copy() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.copy"]], "copy() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.copy"]], "copy() (trimesh.voxel.encoding.flattenedencoding method)": [[122, "trimesh.voxel.encoding.FlattenedEncoding.copy"]], "copy() (trimesh.voxel.encoding.flippedencoding method)": [[122, "trimesh.voxel.encoding.FlippedEncoding.copy"]], "copy() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.copy"]], "copy() (trimesh.voxel.encoding.shapedencoding method)": [[122, "trimesh.voxel.encoding.ShapedEncoding.copy"]], "copy() (trimesh.voxel.encoding.sparseencoding method)": [[122, "trimesh.voxel.encoding.SparseEncoding.copy"]], "copy() (trimesh.voxel.encoding.transposedencoding method)": [[122, "trimesh.voxel.encoding.TransposedEncoding.copy"]], "data (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.data"]], "data (trimesh.voxel.encoding.transposedencoding property)": [[122, "trimesh.voxel.encoding.TransposedEncoding.data"]], "dense (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.dense"]], "dense (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.dense"]], "dense (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.dense"]], "dense (trimesh.voxel.encoding.flattenedencoding property)": [[122, "trimesh.voxel.encoding.FlattenedEncoding.dense"]], "dense (trimesh.voxel.encoding.flippedencoding property)": [[122, "trimesh.voxel.encoding.FlippedEncoding.dense"]], "dense (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.dense"]], "dense (trimesh.voxel.encoding.shapedencoding property)": [[122, "trimesh.voxel.encoding.ShapedEncoding.dense"]], "dense (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.dense"]], "dense (trimesh.voxel.encoding.transposedencoding property)": [[122, "trimesh.voxel.encoding.TransposedEncoding.dense"]], "dtype (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.dtype"]], "dtype (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.dtype"]], "dtype (trimesh.voxel.encoding.lazyindexmap property)": [[122, "trimesh.voxel.encoding.LazyIndexMap.dtype"]], "dtype (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.dtype"]], "dtype (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.dtype"]], "flat (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.flat"]], "flat (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.flat"]], "flat (trimesh.voxel.encoding.flattenedencoding property)": [[122, "trimesh.voxel.encoding.FlattenedEncoding.flat"]], "flat (trimesh.voxel.encoding.shapedencoding property)": [[122, "trimesh.voxel.encoding.ShapedEncoding.flat"]], "flip() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.flip"]], "flip() (trimesh.voxel.encoding.flippedencoding method)": [[122, "trimesh.voxel.encoding.FlippedEncoding.flip"]], "from_brle() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_brle"]], "from_brle() (trimesh.voxel.encoding.runlengthencoding static method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.from_brle"]], "from_dense() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_dense"]], "from_dense() (trimesh.voxel.encoding.runlengthencoding static method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.from_dense"]], "from_dense() (trimesh.voxel.encoding.sparseencoding static method)": [[122, "trimesh.voxel.encoding.SparseEncoding.from_dense"]], "from_rle() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_rle"]], "from_rle() (trimesh.voxel.encoding.runlengthencoding static method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.from_rle"]], "gather() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.gather"]], "gather() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.gather"]], "gather() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.gather"]], "gather() (trimesh.voxel.encoding.transposedencoding method)": [[122, "trimesh.voxel.encoding.TransposedEncoding.gather"]], "gather_nd() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.lazyindexmap method)": [[122, "trimesh.voxel.encoding.LazyIndexMap.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.sparseencoding method)": [[122, "trimesh.voxel.encoding.SparseEncoding.gather_nd"]], "get_value() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.get_value"]], "get_value() (trimesh.voxel.encoding.lazyindexmap method)": [[122, "trimesh.voxel.encoding.LazyIndexMap.get_value"]], "get_value() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.sparseencoding method)": [[122, "trimesh.voxel.encoding.SparseEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.transposedencoding method)": [[122, "trimesh.voxel.encoding.TransposedEncoding.get_value"]], "is_empty (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.is_empty"]], "is_empty (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.is_empty"]], "is_empty (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.is_empty"]], "is_empty (trimesh.voxel.encoding.lazyindexmap property)": [[122, "trimesh.voxel.encoding.LazyIndexMap.is_empty"]], "is_empty (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.is_empty"]], "mask() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.mask"]], "mask() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.mask"]], "mask() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.mask"]], "mask() (trimesh.voxel.encoding.flattenedencoding method)": [[122, "trimesh.voxel.encoding.FlattenedEncoding.mask"]], "mask() (trimesh.voxel.encoding.flippedencoding method)": [[122, "trimesh.voxel.encoding.FlippedEncoding.mask"]], "mask() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.mask"]], "mask() (trimesh.voxel.encoding.shapedencoding method)": [[122, "trimesh.voxel.encoding.ShapedEncoding.mask"]], "mask() (trimesh.voxel.encoding.sparseencoding method)": [[122, "trimesh.voxel.encoding.SparseEncoding.mask"]], "mask() (trimesh.voxel.encoding.transposedencoding method)": [[122, "trimesh.voxel.encoding.TransposedEncoding.mask"]], "mutable (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.mutable"]], "ndims (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.ndims"]], "ndims (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.ndims"]], "ndims (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.ndims"]], "perm (trimesh.voxel.encoding.transposedencoding property)": [[122, "trimesh.voxel.encoding.TransposedEncoding.perm"]], "reshape() (trimesh.voxel.encoding.denseencoding method)": [[122, "trimesh.voxel.encoding.DenseEncoding.reshape"]], "reshape() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.reshape"]], "run_length_data() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.run_length_data"]], "run_length_data() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.run_length_data"]], "run_length_data() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.run_length_data"]], "shape (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.shape"]], "shape (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.shape"]], "shape (trimesh.voxel.encoding.flattenedencoding property)": [[122, "trimesh.voxel.encoding.FlattenedEncoding.shape"]], "shape (trimesh.voxel.encoding.flippedencoding property)": [[122, "trimesh.voxel.encoding.FlippedEncoding.shape"]], "shape (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.shape"]], "shape (trimesh.voxel.encoding.shapedencoding property)": [[122, "trimesh.voxel.encoding.ShapedEncoding.shape"]], "shape (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.shape"]], "shape (trimesh.voxel.encoding.transposedencoding property)": [[122, "trimesh.voxel.encoding.TransposedEncoding.shape"]], "size (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.size"]], "size (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.size"]], "size (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.size"]], "size (trimesh.voxel.encoding.lazyindexmap property)": [[122, "trimesh.voxel.encoding.LazyIndexMap.size"]], "size (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.size"]], "size (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.size"]], "sorted_gather() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sorted_gather"]], "sorted_gather() (trimesh.voxel.encoding.runlengthencoding method)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.sorted_gather"]], "sparse_components (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.sparse_components"]], "sparse_indices (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.lazyindexmap property)": [[122, "trimesh.voxel.encoding.LazyIndexMap.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.sparse_indices"]], "sparse_values (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.lazyindexmap property)": [[122, "trimesh.voxel.encoding.LazyIndexMap.sparse_values"]], "sparse_values (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.sparse_values"]], "stripped (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.stripped"]], "stripped (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.stripped"]], "stripped (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.stripped"]], "stripped (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.stripped"]], "sum (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[122, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sum"]], "sum (trimesh.voxel.encoding.denseencoding property)": [[122, "trimesh.voxel.encoding.DenseEncoding.sum"]], "sum (trimesh.voxel.encoding.encoding property)": [[122, "trimesh.voxel.encoding.Encoding.sum"]], "sum (trimesh.voxel.encoding.lazyindexmap property)": [[122, "trimesh.voxel.encoding.LazyIndexMap.sum"]], "sum (trimesh.voxel.encoding.runlengthencoding property)": [[122, "trimesh.voxel.encoding.RunLengthEncoding.sum"]], "sum (trimesh.voxel.encoding.sparseencoding property)": [[122, "trimesh.voxel.encoding.SparseEncoding.sum"]], "transpose() (trimesh.voxel.encoding.encoding method)": [[122, "trimesh.voxel.encoding.Encoding.transpose"]], "transpose() (trimesh.voxel.encoding.transposedencoding method)": [[122, "trimesh.voxel.encoding.TransposedEncoding.transpose"]], "trimesh.voxel.encoding": [[122, "module-trimesh.voxel.encoding"]], "binary_closing() (in module trimesh.voxel.morphology)": [[123, "trimesh.voxel.morphology.binary_closing"]], "binary_dilation() (in module trimesh.voxel.morphology)": [[123, "trimesh.voxel.morphology.binary_dilation"]], "fill() (in module trimesh.voxel.morphology)": [[123, "trimesh.voxel.morphology.fill"]], "surface() (in module trimesh.voxel.morphology)": [[123, "trimesh.voxel.morphology.surface"]], "trimesh.voxel.morphology": [[123, "module-trimesh.voxel.morphology"]], "boolean_sparse() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.boolean_sparse"]], "fill_base() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.fill_base"]], "fill_orthographic() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.fill_orthographic"]], "fill_voxelization() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.fill_voxelization"]], "indices_to_points() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.indices_to_points"]], "matrix_to_marching_cubes() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.matrix_to_marching_cubes"]], "matrix_to_points() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.matrix_to_points"]], "multibox() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.multibox"]], "points_to_indices() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.points_to_indices"]], "points_to_marching_cubes() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.points_to_marching_cubes"]], "sparse_to_matrix() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.sparse_to_matrix"]], "strip_array() (in module trimesh.voxel.ops)": [[124, "trimesh.voxel.ops.strip_array"]], "trimesh.voxel.ops": [[124, "module-trimesh.voxel.ops"]], "brle_gather_1d() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_gather_1d"]], "brle_gatherer_1d() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_gatherer_1d"]], "brle_length() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_length"]], "brle_logical_not() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_logical_not"]], "brle_mask() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_mask"]], "brle_reverse() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_reverse"]], "brle_strip() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_strip"]], "brle_to_brle() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_to_brle"]], "brle_to_dense() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_to_dense"]], "brle_to_rle() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_to_rle"]], "brle_to_sparse() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.brle_to_sparse"]], "dense_to_brle() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.dense_to_brle"]], "dense_to_rle() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.dense_to_rle"]], "merge_brle_lengths() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.merge_brle_lengths"]], "merge_rle_lengths() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.merge_rle_lengths"]], "rle_gather_1d() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_gather_1d"]], "rle_gatherer_1d() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_gatherer_1d"]], "rle_length() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_length"]], "rle_mask() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_mask"]], "rle_reverse() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_reverse"]], "rle_strip() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_strip"]], "rle_to_brle() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_to_brle"]], "rle_to_dense() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_to_dense"]], "rle_to_rle() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_to_rle"]], "rle_to_sparse() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.rle_to_sparse"]], "sorted_brle_gather_1d() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.sorted_brle_gather_1d"]], "sorted_rle_gather_1d() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.sorted_rle_gather_1d"]], "split_long_brle_lengths() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.split_long_brle_lengths"]], "split_long_rle_lengths() (in module trimesh.voxel.runlength)": [[125, "trimesh.voxel.runlength.split_long_rle_lengths"]], "trimesh.voxel.runlength": [[125, "module-trimesh.voxel.runlength"]], "transform (class in trimesh.voxel.transforms)": [[126, "trimesh.voxel.transforms.Transform"]], "__init__() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.__init__"]], "apply_scale() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.apply_scale"]], "apply_transform() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.apply_transform"]], "apply_translation() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.apply_translation"]], "copy() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.copy"]], "inverse_matrix (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.inverse_matrix"]], "inverse_transform_points() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.inverse_transform_points"]], "is_identity (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.is_identity"]], "matrix (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.matrix"]], "pitch (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.pitch"]], "scale (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.scale"]], "transform_points() (trimesh.voxel.transforms.transform method)": [[126, "trimesh.voxel.transforms.Transform.transform_points"]], "translation (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.translation"]], "trimesh.voxel.transforms": [[126, "module-trimesh.voxel.transforms"]], "unit_volume (trimesh.voxel.transforms.transform property)": [[126, "trimesh.voxel.transforms.Transform.unit_volume"]]}})